### YamlMime:UniversalReference
items:
  - uid: vso-node-api.TaskAgentApi
    name: TaskAgentApi
    fullName: TaskAgentApi
    children:
      - vso-node-api.TaskAgentApi.acquireAccessToken
      - vso-node-api.TaskAgentApi.addAgent
      - vso-node-api.TaskAgentApi.addAgentPool
      - vso-node-api.TaskAgentApi.addAgentQueue
      - vso-node-api.TaskAgentApi.addDeploymentGroup
      - vso-node-api.TaskAgentApi.addDeploymentMachineGroup
      - vso-node-api.TaskAgentApi.addTaskGroup
      - vso-node-api.TaskAgentApi.addVariableGroup
      - vso-node-api.TaskAgentApi.createAadOAuthRequest
      - vso-node-api.TaskAgentApi.createAgentPoolMaintenanceDefinition
      - vso-node-api.TaskAgentApi.createAgentSession
      - vso-node-api.TaskAgentApi.createServiceEndpoint
      - vso-node-api.TaskAgentApi.createTeamProject
      - vso-node-api.TaskAgentApi.deleteAgent
      - vso-node-api.TaskAgentApi.deleteAgentPool
      - vso-node-api.TaskAgentApi.deleteAgentPoolMaintenanceDefinition
      - vso-node-api.TaskAgentApi.deleteAgentPoolMaintenanceJob
      - vso-node-api.TaskAgentApi.deleteAgentQueue
      - vso-node-api.TaskAgentApi.deleteAgentRequest
      - vso-node-api.TaskAgentApi.deleteAgentSession
      - vso-node-api.TaskAgentApi.deleteDeploymentGroup
      - vso-node-api.TaskAgentApi.deleteDeploymentMachineGroup
      - vso-node-api.TaskAgentApi.deleteMessage
      - vso-node-api.TaskAgentApi.deleteSecureFile
      - vso-node-api.TaskAgentApi.deleteServiceEndpoint
      - vso-node-api.TaskAgentApi.deleteTaskDefinition
      - vso-node-api.TaskAgentApi.deleteTaskGroup
      - vso-node-api.TaskAgentApi.deleteVariableGroup
      - vso-node-api.TaskAgentApi.downloadSecureFile
      - vso-node-api.TaskAgentApi.executeServiceEndpointRequest
      - vso-node-api.TaskAgentApi.generateDeploymentGroupAccessToken
      - vso-node-api.TaskAgentApi.generateDeploymentMachineGroupAccessToken
      - vso-node-api.TaskAgentApi.getAgent
      - vso-node-api.TaskAgentApi.getAgentPool
      - vso-node-api.TaskAgentApi.getAgentPoolMaintenanceDefinition
      - vso-node-api.TaskAgentApi.getAgentPoolMaintenanceDefinitions
      - vso-node-api.TaskAgentApi.getAgentPoolMaintenanceJob
      - vso-node-api.TaskAgentApi.getAgentPoolMaintenanceJobLogs
      - vso-node-api.TaskAgentApi.getAgentPoolMaintenanceJobs
      - vso-node-api.TaskAgentApi.getAgentPoolRoles
      - vso-node-api.TaskAgentApi.getAgentPools
      - vso-node-api.TaskAgentApi.getAgentQueue
      - vso-node-api.TaskAgentApi.getAgentQueueRoles
      - vso-node-api.TaskAgentApi.getAgentQueues
      - vso-node-api.TaskAgentApi.getAgentRequest
      - vso-node-api.TaskAgentApi.getAgentRequestsForAgent
      - vso-node-api.TaskAgentApi.getAgentRequestsForAgents
      - vso-node-api.TaskAgentApi.getAgentRequestsForPlan
      - vso-node-api.TaskAgentApi.getAgents
      - vso-node-api.TaskAgentApi.getAzureSubscriptions
      - vso-node-api.TaskAgentApi.getDeploymentGroup
      - vso-node-api.TaskAgentApi.getDeploymentGroups
      - vso-node-api.TaskAgentApi.getDeploymentMachineGroup
      - vso-node-api.TaskAgentApi.getDeploymentMachineGroupMachines
      - vso-node-api.TaskAgentApi.getDeploymentMachineGroups
      - vso-node-api.TaskAgentApi.getDeploymentMachines
      - vso-node-api.TaskAgentApi.getMessage
      - vso-node-api.TaskAgentApi.getPackage
      - vso-node-api.TaskAgentApi.getPackages
      - vso-node-api.TaskAgentApi.getSecureFile
      - vso-node-api.TaskAgentApi.getSecureFiles
      - vso-node-api.TaskAgentApi.getSecureFilesByIds
      - vso-node-api.TaskAgentApi.getServiceEndpointDetails
      - vso-node-api.TaskAgentApi.getServiceEndpoints
      - vso-node-api.TaskAgentApi.getServiceEndpointTypes
      - vso-node-api.TaskAgentApi.getTaskContentZip
      - vso-node-api.TaskAgentApi.getTaskDefinition
      - vso-node-api.TaskAgentApi.getTaskDefinitions
      - vso-node-api.TaskAgentApi.getTaskGroupHistory
      - vso-node-api.TaskAgentApi.getTaskGroupRevision
      - vso-node-api.TaskAgentApi.getTaskGroups
      - vso-node-api.TaskAgentApi.getTaskHubLicenseDetails
      - vso-node-api.TaskAgentApi.getVariableGroup
      - vso-node-api.TaskAgentApi.getVariableGroups
      - vso-node-api.TaskAgentApi.getVariableGroupsById
      - vso-node-api.TaskAgentApi.getVstsAadTenantId
      - vso-node-api.TaskAgentApi.queryEndpoint
      - vso-node-api.TaskAgentApi.querySecureFilesByProperties
      - vso-node-api.TaskAgentApi.queryServiceEndpoint
      - vso-node-api.TaskAgentApi.queueAgentPoolMaintenanceJob
      - vso-node-api.TaskAgentApi.queueAgentRequest
      - vso-node-api.TaskAgentApi.refreshAgent
      - vso-node-api.TaskAgentApi.refreshAgents
      - vso-node-api.TaskAgentApi.replaceAgent
      - vso-node-api.TaskAgentApi.sendMessage
      - vso-node-api.TaskAgentApi.constructor
      - vso-node-api.TaskAgentApi.updateAgent
      - vso-node-api.TaskAgentApi.updateAgentPool
      - vso-node-api.TaskAgentApi.updateAgentPoolMaintenanceDefinition
      - vso-node-api.TaskAgentApi.updateAgentPoolMaintenanceJob
      - vso-node-api.TaskAgentApi.updateAgentRequest
      - vso-node-api.TaskAgentApi.updateAgentUpdateState
      - vso-node-api.TaskAgentApi.updateAgentUserCapabilities
      - vso-node-api.TaskAgentApi.updateDeploymentGroup
      - vso-node-api.TaskAgentApi.updateDeploymentMachineGroup
      - vso-node-api.TaskAgentApi.updateDeploymentMachineGroupMachines
      - vso-node-api.TaskAgentApi.updateDeploymentMachines
      - vso-node-api.TaskAgentApi.updateSecureFile
      - vso-node-api.TaskAgentApi.updateSecureFiles
      - vso-node-api.TaskAgentApi.updateServiceEndpoint
      - vso-node-api.TaskAgentApi.updateServiceEndpoints
      - vso-node-api.TaskAgentApi.updateTaskGroup
      - vso-node-api.TaskAgentApi.updateTaskHubLicenseDetails
      - vso-node-api.TaskAgentApi.updateVariableGroup
      - vso-node-api.TaskAgentApi.uploadSecureFile
      - vso-node-api.TaskAgentApi.uploadTaskDefinition
      - vso-node-api.TaskAgentApi.validateInputs
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vso-node-api.TaskAgentApi.acquireAccessToken
    name: 'acquireAccessToken(authenticationRequest: AadOauthTokenRequest)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: authenticationRequest
          type:
            - AadOauthTokenRequest
          description: |+

      content: 'function acquireAccessToken(authenticationRequest: AadOauthTokenRequest)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.addAgent
    name: 'addAgent(agent: TaskAgent, poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: agent
          type:
            - TaskAgent
          description: ''
        - id: poolId
          type:
            - number
          description: |+

      content: 'function addAgent(agent: TaskAgent, poolId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.addAgentPool
    name: 'addAgentPool(pool: TaskAgentPool)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: pool
          type:
            - TaskAgentPool
          description: |+

      content: 'function addAgentPool(pool: TaskAgentPool)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.addAgentQueue
    name: 'addAgentQueue(queue: TaskAgentQueue, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: queue
          type:
            - TaskAgentQueue
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      content: 'function addAgentQueue(queue: TaskAgentQueue, project?: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.addDeploymentGroup
    name: 'addDeploymentGroup(deploymentGroup: DeploymentGroup, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: deploymentGroup
          type:
            - DeploymentGroup
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: >-
        function addDeploymentGroup(deploymentGroup: DeploymentGroup, project:
        string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.addDeploymentMachineGroup
    name: >-
      addDeploymentMachineGroup(machineGroup: DeploymentMachineGroup, project:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: machineGroup
          type:
            - DeploymentMachineGroup
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: >-
        function addDeploymentMachineGroup(machineGroup: DeploymentMachineGroup,
        project: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.addTaskGroup
    name: 'addTaskGroup(taskGroup: TaskGroup, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskGroup
          type:
            - TaskGroup
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: 'function addTaskGroup(taskGroup: TaskGroup, project: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.addVariableGroup
    name: 'addVariableGroup(group: VariableGroup, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: group
          type:
            - VariableGroup
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: 'function addVariableGroup(group: VariableGroup, project: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.createAadOAuthRequest
    name: >-
      createAadOAuthRequest(tenantId: string, redirectUri: string,
      promptOption?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: tenantId
          type:
            - string
          description: ''
        - id: redirectUri
          type:
            - string
          description: ''
        - id: promptOption
          type:
            - function
          description: |+

          optional: true
      content: >-
        function createAadOAuthRequest(tenantId: string, redirectUri: string,
        promptOption?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.createAgentPoolMaintenanceDefinition
    name: >-
      createAgentPoolMaintenanceDefinition(definition:
      TaskAgentPoolMaintenanceDefinition, poolId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: definition
          type:
            - TaskAgentPoolMaintenanceDefinition
          description: ''
        - id: poolId
          type:
            - number
          description: |+

      content: >-
        function createAgentPoolMaintenanceDefinition(definition:
        TaskAgentPoolMaintenanceDefinition, poolId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.createAgentSession
    name: 'createAgentSession(session: TaskAgentSession, poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: session
          type:
            - TaskAgentSession
          description: ''
        - id: poolId
          type:
            - number
          description: |+

      content: 'function createAgentSession(session: TaskAgentSession, poolId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.createServiceEndpoint
    name: 'createServiceEndpoint(endpoint: ServiceEndpoint, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: endpoint
          type:
            - ServiceEndpoint
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: >-
        function createServiceEndpoint(endpoint: ServiceEndpoint, project:
        string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.createTeamProject
    name: 'createTeamProject(project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      content: 'function createTeamProject(project?: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteAgent
    name: 'deleteAgent(poolId: number, agentId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: |+

      content: 'function deleteAgent(poolId: number, agentId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteAgentPool
    name: 'deleteAgentPool(poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: |+

      content: 'function deleteAgentPool(poolId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteAgentPoolMaintenanceDefinition
    name: 'deleteAgentPoolMaintenanceDefinition(poolId: number, definitionId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: definitionId
          type:
            - number
          description: |+

      content: >-
        function deleteAgentPoolMaintenanceDefinition(poolId: number,
        definitionId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteAgentPoolMaintenanceJob
    name: 'deleteAgentPoolMaintenanceJob(poolId: number, jobId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: jobId
          type:
            - number
          description: |+

      content: 'function deleteAgentPoolMaintenanceJob(poolId: number, jobId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteAgentQueue
    name: 'deleteAgentQueue(queueId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: queueId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      content: 'function deleteAgentQueue(queueId: number, project?: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteAgentRequest
    name: >-
      deleteAgentRequest(poolId: number, requestId: number, lockToken: string,
      result?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: requestId
          type:
            - number
          description: ''
        - id: lockToken
          type:
            - string
          description: ''
        - id: result
          type:
            - function
          description: |+

          optional: true
      content: >-
        function deleteAgentRequest(poolId: number, requestId: number,
        lockToken: string, result?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteAgentSession
    name: 'deleteAgentSession(poolId: number, sessionId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: sessionId
          type:
            - string
          description: |+

      content: 'function deleteAgentSession(poolId: number, sessionId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteDeploymentGroup
    name: 'deleteDeploymentGroup(project: string, deploymentGroupId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: deploymentGroupId
          type:
            - number
          description: |+

      content: >-
        function deleteDeploymentGroup(project: string, deploymentGroupId:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteDeploymentMachineGroup
    name: 'deleteDeploymentMachineGroup(project: string, machineGroupId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: machineGroupId
          type:
            - number
          description: |+

      content: >-
        function deleteDeploymentMachineGroup(project: string, machineGroupId:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteMessage
    name: 'deleteMessage(poolId: number, messageId: number, sessionId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: messageId
          type:
            - number
          description: ''
        - id: sessionId
          type:
            - string
          description: |+

      content: >-
        function deleteMessage(poolId: number, messageId: number, sessionId:
        string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteSecureFile
    name: 'deleteSecureFile(project: string, secureFileId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: secureFileId
          type:
            - string
          description: |
            The unique secure file Id
      content: 'function deleteSecureFile(project: string, secureFileId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteServiceEndpoint
    name: 'deleteServiceEndpoint(project: string, endpointId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: endpointId
          type:
            - string
          description: |+

      content: 'function deleteServiceEndpoint(project: string, endpointId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteTaskDefinition
    name: 'deleteTaskDefinition(taskId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskId
          type:
            - string
          description: ''
      content: 'function deleteTaskDefinition(taskId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteTaskGroup
    name: 'deleteTaskGroup(project: string, taskGroupId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: taskGroupId
          type:
            - string
          description: |+

      content: 'function deleteTaskGroup(project: string, taskGroupId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.deleteVariableGroup
    name: 'deleteVariableGroup(project: string, groupId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: groupId
          type:
            - number
          description: |+

      content: 'function deleteVariableGroup(project: string, groupId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.downloadSecureFile
    name: >-
      downloadSecureFile(project: string, secureFileId: string, ticket: string,
      download?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: secureFileId
          type:
            - string
          description: The unique secure file Id
        - id: ticket
          type:
            - string
          description: A valid download ticket
        - id: download
          type:
            - boolean
          description: >
            If download is true, the file is sent as attachement in the response
            body. If download is false, the response body contains the file
            stream.
          optional: true
      content: >-
        function downloadSecureFile(project: string, secureFileId: string,
        ticket: string, download?: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.executeServiceEndpointRequest
    name: >-
      executeServiceEndpointRequest(serviceEndpointRequest:
      ServiceEndpointRequest, project: string, endpointId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: serviceEndpointRequest
          type:
            - ServiceEndpointRequest
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: endpointId
          type:
            - string
          description: |+

      content: >-
        function executeServiceEndpointRequest(serviceEndpointRequest:
        ServiceEndpointRequest, project: string, endpointId: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.generateDeploymentGroupAccessToken
    name: >-
      generateDeploymentGroupAccessToken(project: string, deploymentGroupId:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: deploymentGroupId
          type:
            - number
          description: |+

      content: >-
        function generateDeploymentGroupAccessToken(project: string,
        deploymentGroupId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.generateDeploymentMachineGroupAccessToken
    name: >-
      generateDeploymentMachineGroupAccessToken(project: string, machineGroupId:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: machineGroupId
          type:
            - number
          description: |+

      content: >-
        function generateDeploymentMachineGroupAccessToken(project: string,
        machineGroupId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgent
    name: >-
      getAgent(poolId: number, agentId: number, includeCapabilities?: boolean,
      includeAssignedRequest?: boolean, propertyFilters?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
        - id: includeCapabilities
          type:
            - boolean
          description: ''
          optional: true
        - id: includeAssignedRequest
          type:
            - boolean
          description: ''
          optional: true
        - id: propertyFilters
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getAgent(poolId: number, agentId: number, includeCapabilities?:
        boolean, includeAssignedRequest?: boolean, propertyFilters?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentPool
    name: >-
      getAgentPool(poolId: number, properties?: function, actionFilter?:
      function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: properties
          type:
            - function
          description: ''
          optional: true
        - id: actionFilter
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getAgentPool(poolId: number, properties?: function,
        actionFilter?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentPoolMaintenanceDefinition
    name: 'getAgentPoolMaintenanceDefinition(poolId: number, definitionId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: definitionId
          type:
            - number
          description: |+

      content: >-
        function getAgentPoolMaintenanceDefinition(poolId: number, definitionId:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentPoolMaintenanceDefinitions
    name: 'getAgentPoolMaintenanceDefinitions(poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: |+

      content: 'function getAgentPoolMaintenanceDefinitions(poolId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentPoolMaintenanceJob
    name: 'getAgentPoolMaintenanceJob(poolId: number, jobId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: jobId
          type:
            - number
          description: |+

      content: 'function getAgentPoolMaintenanceJob(poolId: number, jobId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentPoolMaintenanceJobLogs
    name: 'getAgentPoolMaintenanceJobLogs(poolId: number, jobId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: jobId
          type:
            - number
          description: |+

      content: 'function getAgentPoolMaintenanceJobLogs(poolId: number, jobId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentPoolMaintenanceJobs
    name: 'getAgentPoolMaintenanceJobs(poolId: number, definitionId?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: definitionId
          type:
            - number
          description: |+

          optional: true
      content: >-
        function getAgentPoolMaintenanceJobs(poolId: number, definitionId?:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentPoolRoles
    name: 'getAgentPoolRoles(poolId?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: |+

          optional: true
      content: 'function getAgentPoolRoles(poolId?: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentPools
    name: >-
      getAgentPools(poolName?: string, properties?: function, poolType?:
      function, actionFilter?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolName
          type:
            - string
          description: ''
          optional: true
        - id: properties
          type:
            - function
          description: ''
          optional: true
        - id: poolType
          type:
            - function
          description: ''
          optional: true
        - id: actionFilter
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getAgentPools(poolName?: string, properties?: function,
        poolType?: function, actionFilter?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentQueue
    name: 'getAgentQueue(queueId: number, project?: string, actionFilter?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: queueId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: actionFilter
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getAgentQueue(queueId: number, project?: string, actionFilter?:
        function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentQueueRoles
    name: 'getAgentQueueRoles(queueId?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: queueId
          type:
            - number
          description: |+

          optional: true
      content: 'function getAgentQueueRoles(queueId?: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentQueues
    name: >-
      getAgentQueues(project?: string, queueName?: string, actionFilter?:
      function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: queueName
          type:
            - string
          description: ''
          optional: true
        - id: actionFilter
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getAgentQueues(project?: string, queueName?: string,
        actionFilter?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentRequest
    name: 'getAgentRequest(poolId: number, requestId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: requestId
          type:
            - number
          description: |+

      content: 'function getAgentRequest(poolId: number, requestId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentRequestsForAgent
    name: >-
      getAgentRequestsForAgent(poolId: number, agentId: number,
      completedRequestCount?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
        - id: completedRequestCount
          type:
            - number
          description: |+

          optional: true
      content: >-
        function getAgentRequestsForAgent(poolId: number, agentId: number,
        completedRequestCount?: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentRequestsForAgents
    name: >-
      getAgentRequestsForAgents(poolId: number, agentIds?: function,
      completedRequestCount?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentIds
          type:
            - function
          description: ''
          optional: true
        - id: completedRequestCount
          type:
            - number
          description: |+

          optional: true
      content: >-
        function getAgentRequestsForAgents(poolId: number, agentIds?: function,
        completedRequestCount?: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgentRequestsForPlan
    name: 'getAgentRequestsForPlan(poolId: number, planId: string, jobId?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: planId
          type:
            - string
          description: ''
        - id: jobId
          type:
            - string
          description: |+

          optional: true
      content: >-
        function getAgentRequestsForPlan(poolId: number, planId: string, jobId?:
        string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAgents
    name: >-
      getAgents(poolId: number, agentName?: string, includeCapabilities?:
      boolean, includeAssignedRequest?: boolean, propertyFilters?: function,
      demands?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentName
          type:
            - string
          description: ''
          optional: true
        - id: includeCapabilities
          type:
            - boolean
          description: ''
          optional: true
        - id: includeAssignedRequest
          type:
            - boolean
          description: ''
          optional: true
        - id: propertyFilters
          type:
            - function
          description: ''
          optional: true
        - id: demands
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getAgents(poolId: number, agentName?: string,
        includeCapabilities?: boolean, includeAssignedRequest?: boolean,
        propertyFilters?: function, demands?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getAzureSubscriptions
    name: getAzureSubscriptions()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getAzureSubscriptions()
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getDeploymentGroup
    name: >-
      getDeploymentGroup(project: string, deploymentGroupId: number,
      actionFilter?: function, expand?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: deploymentGroupId
          type:
            - number
          description: ''
        - id: actionFilter
          type:
            - function
          description: ''
          optional: true
        - id: expand
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getDeploymentGroup(project: string, deploymentGroupId: number,
        actionFilter?: function, expand?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getDeploymentGroups
    name: >-
      getDeploymentGroups(project: string, name?: string, actionFilter?:
      function, expand?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: name
          type:
            - string
          description: ''
          optional: true
        - id: actionFilter
          type:
            - function
          description: ''
          optional: true
        - id: expand
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getDeploymentGroups(project: string, name?: string,
        actionFilter?: function, expand?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getDeploymentMachineGroup
    name: >-
      getDeploymentMachineGroup(project: string, machineGroupId: number,
      actionFilter?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: machineGroupId
          type:
            - number
          description: ''
        - id: actionFilter
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getDeploymentMachineGroup(project: string, machineGroupId:
        number, actionFilter?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getDeploymentMachineGroupMachines
    name: >-
      getDeploymentMachineGroupMachines(project: string, machineGroupId: number,
      tagFilters?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: machineGroupId
          type:
            - number
          description: ''
        - id: tagFilters
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getDeploymentMachineGroupMachines(project: string,
        machineGroupId: number, tagFilters?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getDeploymentMachineGroups
    name: >-
      getDeploymentMachineGroups(project: string, machineGroupName?: string,
      actionFilter?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: machineGroupName
          type:
            - string
          description: ''
          optional: true
        - id: actionFilter
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getDeploymentMachineGroups(project: string, machineGroupName?:
        string, actionFilter?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getDeploymentMachines
    name: >-
      getDeploymentMachines(project: string, deploymentGroupId: number, tags?:
      function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: deploymentGroupId
          type:
            - number
          description: ''
        - id: tags
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getDeploymentMachines(project: string, deploymentGroupId:
        number, tags?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getMessage
    name: 'getMessage(poolId: number, sessionId: string, lastMessageId?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: sessionId
          type:
            - string
          description: ''
        - id: lastMessageId
          type:
            - number
          description: |+

          optional: true
      content: >-
        function getMessage(poolId: number, sessionId: string, lastMessageId?:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getPackage
    name: 'getPackage(packageType: string, platform: string, version: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: packageType
          type:
            - string
          description: ''
        - id: platform
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: |+

      content: >-
        function getPackage(packageType: string, platform: string, version:
        string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getPackages
    name: 'getPackages(packageType?: string, platform?: string, top?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: packageType
          type:
            - string
          description: ''
          optional: true
        - id: platform
          type:
            - string
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: |+

          optional: true
      content: >-
        function getPackages(packageType?: string, platform?: string, top?:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getSecureFile
    name: >-
      getSecureFile(project: string, secureFileId: string,
      includeDownloadTicket?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: secureFileId
          type:
            - string
          description: The unique secure file Id
        - id: includeDownloadTicket
          type:
            - boolean
          description: >
            If includeDownloadTicket is true and the caller has permissions, a
            download ticket is included in the response.
          optional: true
      content: >-
        function getSecureFile(project: string, secureFileId: string,
        includeDownloadTicket?: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getSecureFiles
    name: >-
      getSecureFiles(project: string, namePattern?: string,
      includeDownloadTickets?: boolean, actionFilter?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: namePattern
          type:
            - string
          description: >-
            Name of the secure file to match. Can include wildcards to match
            multiple files.
          optional: true
        - id: includeDownloadTickets
          type:
            - boolean
          description: >-
            If includeDownloadTickets is true and the caller has permissions, a
            download ticket for each secure file is included in the response.
          optional: true
        - id: actionFilter
          type:
            - function
          description: >
            Filter by secure file permissions for View, Manage or Use action.
            Defaults to View.
          optional: true
      content: >-
        function getSecureFiles(project: string, namePattern?: string,
        includeDownloadTickets?: boolean, actionFilter?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getSecureFilesByIds
    name: >-
      getSecureFilesByIds(project: string, secureFileIds: function,
      includeDownloadTickets?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: secureFileIds
          type:
            - function
          description: A list of secure file Ids
        - id: includeDownloadTickets
          type:
            - boolean
          description: >
            If includeDownloadTickets is true and the caller has permissions, a
            download ticket for each secure file is included in the response.
          optional: true
      content: >-
        function getSecureFilesByIds(project: string, secureFileIds: function,
        includeDownloadTickets?: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getServiceEndpointDetails
    name: 'getServiceEndpointDetails(project: string, endpointId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: endpointId
          type:
            - string
          description: |+

      content: 'function getServiceEndpointDetails(project: string, endpointId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getServiceEndpoints
    name: >-
      getServiceEndpoints(project: string, type?: string, authSchemes?:
      function, endpointIds?: function, includeFailed?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: type
          type:
            - string
          description: ''
          optional: true
        - id: authSchemes
          type:
            - function
          description: ''
          optional: true
        - id: endpointIds
          type:
            - function
          description: ''
          optional: true
        - id: includeFailed
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getServiceEndpoints(project: string, type?: string,
        authSchemes?: function, endpointIds?: function, includeFailed?: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getServiceEndpointTypes
    name: 'getServiceEndpointTypes(type?: string, scheme?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - string
          description: ''
          optional: true
        - id: scheme
          type:
            - string
          description: |+

          optional: true
      content: 'function getServiceEndpointTypes(type?: string, scheme?: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getTaskContentZip
    name: >-
      getTaskContentZip(taskId: string, versionString: string, visibility:
      function, scopeLocal: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskId
          type:
            - string
          description: ''
        - id: versionString
          type:
            - string
          description: ''
        - id: visibility
          type:
            - function
          description: ''
        - id: scopeLocal
          type:
            - boolean
          description: ''
      content: >-
        function getTaskContentZip(taskId: string, versionString: string,
        visibility: function, scopeLocal: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getTaskDefinition
    name: >-
      getTaskDefinition(taskId: string, versionString: string, visibility:
      function, scopeLocal: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskId
          type:
            - string
          description: ''
        - id: versionString
          type:
            - string
          description: ''
        - id: visibility
          type:
            - function
          description: ''
        - id: scopeLocal
          type:
            - boolean
          description: ''
      content: >-
        function getTaskDefinition(taskId: string, versionString: string,
        visibility: function, scopeLocal: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getTaskDefinitions
    name: >-
      getTaskDefinitions(taskId: string, visibility: function, scopeLocal:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskId
          type:
            - string
          description: ''
        - id: visibility
          type:
            - function
          description: ''
        - id: scopeLocal
          type:
            - boolean
          description: ''
      content: >-
        function getTaskDefinitions(taskId: string, visibility: function,
        scopeLocal: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getTaskGroupHistory
    name: 'getTaskGroupHistory(project: string, taskGroupId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: taskGroupId
          type:
            - string
          description: |+

      content: 'function getTaskGroupHistory(project: string, taskGroupId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getTaskGroupRevision
    name: >-
      getTaskGroupRevision(project: string, taskGroupId: string, revision:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: taskGroupId
          type:
            - string
          description: ''
        - id: revision
          type:
            - number
          description: |+

      content: >-
        function getTaskGroupRevision(project: string, taskGroupId: string,
        revision: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getTaskGroups
    name: 'getTaskGroups(project: string, taskGroupId?: string, expanded?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: taskGroupId
          type:
            - string
          description: ''
          optional: true
        - id: expanded
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getTaskGroups(project: string, taskGroupId?: string, expanded?:
        boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getTaskHubLicenseDetails
    name: >-
      getTaskHubLicenseDetails(hubName: string, includeEnterpriseUsersCount?:
      boolean, includeHostedAgentMinutesCount?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: hubName
          type:
            - string
          description: ''
        - id: includeEnterpriseUsersCount
          type:
            - boolean
          description: ''
          optional: true
        - id: includeHostedAgentMinutesCount
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getTaskHubLicenseDetails(hubName: string,
        includeEnterpriseUsersCount?: boolean, includeHostedAgentMinutesCount?:
        boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getVariableGroup
    name: 'getVariableGroup(project: string, groupId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: groupId
          type:
            - number
          description: |+

      content: 'function getVariableGroup(project: string, groupId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getVariableGroups
    name: >-
      getVariableGroups(project: string, groupName?: string, actionFilter?:
      function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: groupName
          type:
            - string
          description: ''
          optional: true
        - id: actionFilter
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getVariableGroups(project: string, groupName?: string,
        actionFilter?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getVariableGroupsById
    name: 'getVariableGroupsById(project: string, groupIds: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: groupIds
          type:
            - function
          description: |+

      content: 'function getVariableGroupsById(project: string, groupIds: function)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.getVstsAadTenantId
    name: getVstsAadTenantId()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getVstsAadTenantId()
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.queryEndpoint
    name: 'queryEndpoint(endpoint: TaskDefinitionEndpoint)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: endpoint
          type:
            - TaskDefinitionEndpoint
          description: |
            Describes the URL to fetch.
      content: 'function queryEndpoint(endpoint: TaskDefinitionEndpoint)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.querySecureFilesByProperties
    name: >-
      querySecureFilesByProperties(condition: string, project: string,
      namePattern?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: condition
          type:
            - string
          description: >-
            The main condition syntax is described
            [here](https://go.microsoft.com/fwlink/?linkid=842996). Use the
            *property('property-name')* function to access the value of the
            specified property of a secure file. It returns null if the property
            is not set. E.g. ``` and( eq( property('devices'), '2' ), in(
            property('provisioning profile type'), 'ad hoc', 'development' ) )
            ```
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: namePattern
          type:
            - string
          description: >
            Name of the secure file to match. Can include wildcards to match
            multiple files.
          optional: true
      content: >-
        function querySecureFilesByProperties(condition: string, project:
        string, namePattern?: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.queryServiceEndpoint
    name: 'queryServiceEndpoint(binding: DataSourceBinding, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: binding
          type:
            - DataSourceBinding
          description: Describes the data source to fetch.
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: >-
        function queryServiceEndpoint(binding: DataSourceBinding, project:
        string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.queueAgentPoolMaintenanceJob
    name: >-
      queueAgentPoolMaintenanceJob(job: TaskAgentPoolMaintenanceJob, poolId:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: job
          type:
            - TaskAgentPoolMaintenanceJob
          description: ''
        - id: poolId
          type:
            - number
          description: |+

      content: >-
        function queueAgentPoolMaintenanceJob(job: TaskAgentPoolMaintenanceJob,
        poolId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.queueAgentRequest
    name: 'queueAgentRequest(request: TaskAgentJobRequest, poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: request
          type:
            - TaskAgentJobRequest
          description: ''
        - id: poolId
          type:
            - number
          description: |+

      content: 'function queueAgentRequest(request: TaskAgentJobRequest, poolId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.refreshAgent
    name: 'refreshAgent(poolId: number, agentId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: |+

      content: 'function refreshAgent(poolId: number, agentId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.refreshAgents
    name: 'refreshAgents(poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: |+

      content: 'function refreshAgents(poolId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.replaceAgent
    name: 'replaceAgent(agent: TaskAgent, poolId: number, agentId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: agent
          type:
            - TaskAgent
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: |+

      content: 'function replaceAgent(agent: TaskAgent, poolId: number, agentId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.sendMessage
    name: 'sendMessage(message: TaskAgentMessage, poolId: number, requestId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: message
          type:
            - TaskAgentMessage
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: requestId
          type:
            - number
          description: |+

      content: >-
        function sendMessage(message: TaskAgentMessage, poolId: number,
        requestId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.constructor
    name: >-
      TaskAgentApi(baseUrl: string, handlers: function, options?:
      IRequestOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: baseUrl
          type:
            - string
          description: ''
        - id: handlers
          type:
            - function
          description: ''
        - id: options
          type:
            - IRequestOptions
          description: ''
          optional: true
      content: >-
        new TaskAgentApi(baseUrl: string, handlers: function, options?:
        IRequestOptions)
      return:
        type:
          - vso-node-api.TaskAgentApi
    type: constructor
  - uid: vso-node-api.TaskAgentApi.updateAgent
    name: 'updateAgent(agent: TaskAgent, poolId: number, agentId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: agent
          type:
            - TaskAgent
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: |+

      content: 'function updateAgent(agent: TaskAgent, poolId: number, agentId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateAgentPool
    name: 'updateAgentPool(pool: TaskAgentPool, poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: pool
          type:
            - TaskAgentPool
          description: ''
        - id: poolId
          type:
            - number
          description: |+

      content: 'function updateAgentPool(pool: TaskAgentPool, poolId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateAgentPoolMaintenanceDefinition
    name: >-
      updateAgentPoolMaintenanceDefinition(definition:
      TaskAgentPoolMaintenanceDefinition, poolId: number, definitionId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: definition
          type:
            - TaskAgentPoolMaintenanceDefinition
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: definitionId
          type:
            - number
          description: |+

      content: >-
        function updateAgentPoolMaintenanceDefinition(definition:
        TaskAgentPoolMaintenanceDefinition, poolId: number, definitionId:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateAgentPoolMaintenanceJob
    name: >-
      updateAgentPoolMaintenanceJob(job: TaskAgentPoolMaintenanceJob, poolId:
      number, jobId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: job
          type:
            - TaskAgentPoolMaintenanceJob
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: jobId
          type:
            - number
          description: |+

      content: >-
        function updateAgentPoolMaintenanceJob(job: TaskAgentPoolMaintenanceJob,
        poolId: number, jobId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateAgentRequest
    name: >-
      updateAgentRequest(request: TaskAgentJobRequest, poolId: number,
      requestId: number, lockToken: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: request
          type:
            - TaskAgentJobRequest
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: requestId
          type:
            - number
          description: ''
        - id: lockToken
          type:
            - string
          description: |+

      content: >-
        function updateAgentRequest(request: TaskAgentJobRequest, poolId:
        number, requestId: number, lockToken: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateAgentUpdateState
    name: >-
      updateAgentUpdateState(poolId: number, agentId: number, currentState:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
        - id: currentState
          type:
            - string
          description: |+

      content: >-
        function updateAgentUpdateState(poolId: number, agentId: number,
        currentState: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateAgentUserCapabilities
    name: >-
      updateAgentUserCapabilities(userCapabilities: function, poolId: number,
      agentId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: userCapabilities
          type:
            - function
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: |+

      content: >-
        function updateAgentUserCapabilities(userCapabilities: function, poolId:
        number, agentId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateDeploymentGroup
    name: >-
      updateDeploymentGroup(deploymentGroup: DeploymentGroup, project: string,
      deploymentGroupId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: deploymentGroup
          type:
            - DeploymentGroup
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: deploymentGroupId
          type:
            - number
          description: |+

      content: >-
        function updateDeploymentGroup(deploymentGroup: DeploymentGroup,
        project: string, deploymentGroupId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateDeploymentMachineGroup
    name: >-
      updateDeploymentMachineGroup(machineGroup: DeploymentMachineGroup,
      project: string, machineGroupId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: machineGroup
          type:
            - DeploymentMachineGroup
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: machineGroupId
          type:
            - number
          description: |+

      content: >-
        function updateDeploymentMachineGroup(machineGroup:
        DeploymentMachineGroup, project: string, machineGroupId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateDeploymentMachineGroupMachines
    name: >-
      updateDeploymentMachineGroupMachines(deploymentMachines: function,
      project: string, machineGroupId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: deploymentMachines
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: machineGroupId
          type:
            - number
          description: |+

      content: >-
        function updateDeploymentMachineGroupMachines(deploymentMachines:
        function, project: string, machineGroupId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateDeploymentMachines
    name: >-
      updateDeploymentMachines(deploymentMachines: function, project: string,
      deploymentGroupId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: deploymentMachines
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: deploymentGroupId
          type:
            - number
          description: |+

      content: >-
        function updateDeploymentMachines(deploymentMachines: function, project:
        string, deploymentGroupId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateSecureFile
    name: >-
      updateSecureFile(secureFile: SecureFile, project: string, secureFileId:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: secureFile
          type:
            - SecureFile
          description: The secure file with updated name and/or properties
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: secureFileId
          type:
            - string
          description: |
            The unique secure file Id
      content: >-
        function updateSecureFile(secureFile: SecureFile, project: string,
        secureFileId: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateSecureFiles
    name: 'updateSecureFiles(secureFiles: function, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: secureFiles
          type:
            - function
          description: >-
            A list of secure file objects. Only three field must be populated
            Id, Name, and Properties. The rest of fields in the object are
            ignored.
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: 'function updateSecureFiles(secureFiles: function, project: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateServiceEndpoint
    name: >-
      updateServiceEndpoint(endpoint: ServiceEndpoint, project: string,
      endpointId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: endpoint
          type:
            - ServiceEndpoint
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: endpointId
          type:
            - string
          description: |+

      content: >-
        function updateServiceEndpoint(endpoint: ServiceEndpoint, project:
        string, endpointId: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateServiceEndpoints
    name: 'updateServiceEndpoints(endpoints: function, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: endpoints
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: 'function updateServiceEndpoints(endpoints: function, project: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateTaskGroup
    name: 'updateTaskGroup(taskGroup: TaskGroup, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskGroup
          type:
            - TaskGroup
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: 'function updateTaskGroup(taskGroup: TaskGroup, project: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateTaskHubLicenseDetails
    name: >-
      updateTaskHubLicenseDetails(taskHubLicenseDetails: TaskHubLicenseDetails,
      hubName: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskHubLicenseDetails
          type:
            - TaskHubLicenseDetails
          description: ''
        - id: hubName
          type:
            - string
          description: |+

      content: >-
        function updateTaskHubLicenseDetails(taskHubLicenseDetails:
        TaskHubLicenseDetails, hubName: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.updateVariableGroup
    name: >-
      updateVariableGroup(group: VariableGroup, project: string, groupId:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: group
          type:
            - VariableGroup
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: groupId
          type:
            - number
          description: |+

      content: >-
        function updateVariableGroup(group: VariableGroup, project: string,
        groupId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.uploadSecureFile
    name: >-
      uploadSecureFile(customHeaders: any, contentStream: ReadableStream,
      project: string, name: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: customHeaders
          type:
            - any
          description: ''
        - id: contentStream
          type:
            - ReadableStream
          description: Content to upload
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: name
          type:
            - string
          description: |
            Name of the file to upload
      content: >-
        function uploadSecureFile(customHeaders: any, contentStream:
        ReadableStream, project: string, name: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.uploadTaskDefinition
    name: >-
      uploadTaskDefinition(customHeaders: IHeaders, contentStream:
      ReadableStream, taskId: string, overwrite: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: customHeaders
          type:
            - IHeaders
          description: ''
        - id: contentStream
          type:
            - ReadableStream
          description: ''
        - id: taskId
          type:
            - string
          description: ''
        - id: overwrite
          type:
            - boolean
          description: ''
      content: >-
        function uploadTaskDefinition(customHeaders: IHeaders, contentStream:
        ReadableStream, taskId: string, overwrite: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TaskAgentApi.validateInputs
    name: 'validateInputs(inputValidationRequest: InputValidationRequest)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: inputValidationRequest
          type:
            - InputValidationRequest
          description: |+

      content: 'function validateInputs(inputValidationRequest: InputValidationRequest)'
      return:
        type:
          - Promise
    type: method
