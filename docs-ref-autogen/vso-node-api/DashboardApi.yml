### YamlMime:UniversalReference
items:
  - uid: vso-node-api.DashboardApi
    name: DashboardApi
    fullName: DashboardApi
    children:
      - vso-node-api.DashboardApi.createDashboard
      - vso-node-api.DashboardApi.createWidget
      - vso-node-api.DashboardApi.constructor
      - vso-node-api.DashboardApi.deleteDashboard
      - vso-node-api.DashboardApi.deleteWidget
      - vso-node-api.DashboardApi.getDashboard
      - vso-node-api.DashboardApi.getDashboards
      - vso-node-api.DashboardApi.getWidget
      - vso-node-api.DashboardApi.getWidgetMetadata
      - vso-node-api.DashboardApi.getWidgetTypes
      - vso-node-api.DashboardApi.replaceDashboard
      - vso-node-api.DashboardApi.replaceDashboards
      - vso-node-api.DashboardApi.replaceWidget
      - vso-node-api.DashboardApi.updateWidget
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vso-node-api.DashboardApi.createDashboard
    name: 'createDashboard(dashboard: Dashboard, teamContext: TeamContext)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: dashboard
          type:
            - Dashboard
          description: ''
        - id: teamContext
          type:
            - TeamContext
          description: |
            The team context for the operation
      content: 'function createDashboard(dashboard: Dashboard, teamContext: TeamContext)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DashboardApi.createWidget
    name: >-
      createWidget(widget: Widget, teamContext: TeamContext, dashboardId:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: widget
          type:
            - Widget
          description: ''
        - id: teamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: |+

      content: >-
        function createWidget(widget: Widget, teamContext: TeamContext,
        dashboardId: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DashboardApi.constructor
    name: >-
      DashboardApi(baseUrl: string, handlers: function, options?:
      IRequestOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: baseUrl
          type:
            - string
          description: ''
        - id: handlers
          type:
            - function
          description: ''
        - id: options
          type:
            - IRequestOptions
          description: ''
          optional: true
      content: >-
        new DashboardApi(baseUrl: string, handlers: function, options?:
        IRequestOptions)
      return:
        type:
          - vso-node-api.DashboardApi
    type: constructor
  - uid: vso-node-api.DashboardApi.deleteDashboard
    name: 'deleteDashboard(teamContext: TeamContext, dashboardId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: |+

      content: 'function deleteDashboard(teamContext: TeamContext, dashboardId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DashboardApi.deleteWidget
    name: >-
      deleteWidget(teamContext: TeamContext, dashboardId: string, widgetId:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: ''
        - id: widgetId
          type:
            - string
          description: |+

      content: >-
        function deleteWidget(teamContext: TeamContext, dashboardId: string,
        widgetId: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DashboardApi.getDashboard
    name: 'getDashboard(teamContext: TeamContext, dashboardId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: |+

      content: 'function getDashboard(teamContext: TeamContext, dashboardId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DashboardApi.getDashboards
    name: 'getDashboards(teamContext: TeamContext)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - TeamContext
          description: |
            The team context for the operation
      content: 'function getDashboards(teamContext: TeamContext)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DashboardApi.getWidget
    name: 'getWidget(teamContext: TeamContext, dashboardId: string, widgetId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: ''
        - id: widgetId
          type:
            - string
          description: |+

      content: >-
        function getWidget(teamContext: TeamContext, dashboardId: string,
        widgetId: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DashboardApi.getWidgetMetadata
    name: 'getWidgetMetadata(contributionId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: contributionId
          type:
            - string
          description: |+

      content: 'function getWidgetMetadata(contributionId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DashboardApi.getWidgetTypes
    name: 'getWidgetTypes(scope: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scope
          type:
            - function
          description: |+

      content: 'function getWidgetTypes(scope: function)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DashboardApi.replaceDashboard
    name: >-
      replaceDashboard(dashboard: Dashboard, teamContext: TeamContext,
      dashboardId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: dashboard
          type:
            - Dashboard
          description: ''
        - id: teamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: |+

      content: >-
        function replaceDashboard(dashboard: Dashboard, teamContext:
        TeamContext, dashboardId: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DashboardApi.replaceDashboards
    name: 'replaceDashboards(group: DashboardGroup, teamContext: TeamContext)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: group
          type:
            - DashboardGroup
          description: ''
        - id: teamContext
          type:
            - TeamContext
          description: |
            The team context for the operation
      content: >-
        function replaceDashboards(group: DashboardGroup, teamContext:
        TeamContext)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DashboardApi.replaceWidget
    name: >-
      replaceWidget(widget: Widget, teamContext: TeamContext, dashboardId:
      string, widgetId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: widget
          type:
            - Widget
          description: ''
        - id: teamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: ''
        - id: widgetId
          type:
            - string
          description: |+

      content: >-
        function replaceWidget(widget: Widget, teamContext: TeamContext,
        dashboardId: string, widgetId: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DashboardApi.updateWidget
    name: >-
      updateWidget(widget: Widget, teamContext: TeamContext, dashboardId:
      string, widgetId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: widget
          type:
            - Widget
          description: ''
        - id: teamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: dashboardId
          type:
            - string
          description: ''
        - id: widgetId
          type:
            - string
          description: |+

      content: >-
        function updateWidget(widget: Widget, teamContext: TeamContext,
        dashboardId: string, widgetId: string)
      return:
        type:
          - Promise
    type: method
