### YamlMime:UniversalReference
items:
  - uid: vso-node-api.FileContainerApi
    name: FileContainerApi
    fullName: FileContainerApi
    children:
      - vso-node-api.FileContainerApi.createItems
      - vso-node-api.FileContainerApi.deleteItem
      - vso-node-api.FileContainerApi.constructor
      - vso-node-api.FileContainerApi.getContainers
      - vso-node-api.FileContainerApi.getItem
      - vso-node-api.FileContainerApi.getItems
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vso-node-api.FileContainerApi.createItems
    name: >-
      createItems(items: VssJsonCollectionWrapperV, containerId: number, scope?:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: items
          type:
            - VssJsonCollectionWrapperV
          description: ''
        - id: containerId
          type:
            - number
          description: ''
        - id: scope
          type:
            - string
          description: >
            A guid representing the scope of the container. This is often the
            project id.
          optional: true
      content: >-
        function createItems(items: VssJsonCollectionWrapperV, containerId:
        number, scope?: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.FileContainerApi.deleteItem
    name: 'deleteItem(containerId: number, itemPath: string, scope?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: containerId
          type:
            - number
          description: Container Id.
        - id: itemPath
          type:
            - string
          description: Path to delete.
        - id: scope
          type:
            - string
          description: >
            A guid representing the scope of the container. This is often the
            project id.
          optional: true
      content: >-
        function deleteItem(containerId: number, itemPath: string, scope?:
        string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.FileContainerApi.constructor
    name: >-
      FileContainerApi(baseUrl: string, handlers: function, options?:
      IRequestOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: baseUrl
          type:
            - string
          description: ''
        - id: handlers
          type:
            - function
          description: ''
        - id: options
          type:
            - IRequestOptions
          description: ''
          optional: true
      content: >-
        new FileContainerApi(baseUrl: string, handlers: function, options?:
        IRequestOptions)
      return:
        type:
          - vso-node-api.FileContainerApi
    type: constructor
  - uid: vso-node-api.FileContainerApi.getContainers
    name: 'getContainers(scope?: string, artifactUris?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: >-
            A guid representing the scope of the container. This is often the
            project id.
          optional: true
        - id: artifactUris
          type:
            - string
          description: |+

          optional: true
      content: 'function getContainers(scope?: string, artifactUris?: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.FileContainerApi.getItem
    name: >-
      getItem(containerId: number, scope?: string, itemPath?: string,
      downloadFileName?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: containerId
          type:
            - number
          description: ''
        - id: scope
          type:
            - string
          description: ''
          optional: true
        - id: itemPath
          type:
            - string
          description: ''
          optional: true
        - id: downloadFileName
          type:
            - string
          description: |+

          optional: true
      content: >-
        function getItem(containerId: number, scope?: string, itemPath?: string,
        downloadFileName?: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.FileContainerApi.getItems
    name: >-
      getItems(containerId: number, scope?: string, itemPath?: string,
      metadata?: boolean, format?: string, downloadFileName?: string,
      includeDownloadTickets?: boolean, isShallow?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: containerId
          type:
            - number
          description: ''
        - id: scope
          type:
            - string
          description: ''
          optional: true
        - id: itemPath
          type:
            - string
          description: ''
          optional: true
        - id: metadata
          type:
            - boolean
          description: ''
          optional: true
        - id: format
          type:
            - string
          description: ''
          optional: true
        - id: downloadFileName
          type:
            - string
          description: ''
          optional: true
        - id: includeDownloadTickets
          type:
            - boolean
          description: ''
          optional: true
        - id: isShallow
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getItems(containerId: number, scope?: string, itemPath?:
        string, metadata?: boolean, format?: string, downloadFileName?: string,
        includeDownloadTickets?: boolean, isShallow?: boolean)
      return:
        type:
          - Promise
    type: method
