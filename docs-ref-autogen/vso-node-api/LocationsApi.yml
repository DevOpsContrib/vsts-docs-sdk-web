### YamlMime:UniversalReference
items:
  - uid: vso-node-api.LocationsApi
    name: LocationsApi
    fullName: LocationsApi
    children:
      - vso-node-api.LocationsApi.deleteServiceDefinition
      - vso-node-api.LocationsApi.getConnectionData
      - vso-node-api.LocationsApi.getResourceArea
      - vso-node-api.LocationsApi.getResourceAreas
      - vso-node-api.LocationsApi.getServiceDefinition
      - vso-node-api.LocationsApi.getServiceDefinitions
      - vso-node-api.LocationsApi.constructor
      - vso-node-api.LocationsApi.updateServiceDefinitions
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vso-node-api.LocationsApi.deleteServiceDefinition
    name: 'deleteServiceDefinition(serviceType: string, identifier: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: serviceType
          type:
            - string
          description: ''
        - id: identifier
          type:
            - string
          description: |+

      content: >-
        function deleteServiceDefinition(serviceType: string, identifier:
        string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.LocationsApi.getConnectionData
    name: >-
      getConnectionData(connectOptions?: function, lastChangeId?: number,
      lastChangeId64?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: connectOptions
          type:
            - function
          description: ''
          optional: true
        - id: lastChangeId
          type:
            - number
          description: Obsolete 32-bit LastChangeId
          optional: true
        - id: lastChangeId64
          type:
            - number
          description: |
            Non-truncated 64-bit LastChangeId
          optional: true
      content: >-
        function getConnectionData(connectOptions?: function, lastChangeId?:
        number, lastChangeId64?: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.LocationsApi.getResourceArea
    name: 'getResourceArea(areaId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: areaId
          type:
            - string
          description: |+

      content: 'function getResourceArea(areaId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.LocationsApi.getResourceAreas
    name: getResourceAreas()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getResourceAreas()
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.LocationsApi.getServiceDefinition
    name: >-
      getServiceDefinition(serviceType: string, identifier: string,
      allowFaultIn?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: serviceType
          type:
            - string
          description: ''
        - id: identifier
          type:
            - string
          description: ''
        - id: allowFaultIn
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getServiceDefinition(serviceType: string, identifier: string,
        allowFaultIn?: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.LocationsApi.getServiceDefinitions
    name: 'getServiceDefinitions(serviceType?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: serviceType
          type:
            - string
          description: |+

          optional: true
      content: 'function getServiceDefinitions(serviceType?: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.LocationsApi.constructor
    name: >-
      LocationsApi(baseUrl: string, handlers: function, options?:
      IRequestOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: baseUrl
          type:
            - string
          description: ''
        - id: handlers
          type:
            - function
          description: ''
        - id: options
          type:
            - IRequestOptions
          description: ''
          optional: true
      content: >-
        new LocationsApi(baseUrl: string, handlers: function, options?:
        IRequestOptions)
      return:
        type:
          - vso-node-api.LocationsApi
    type: constructor
  - uid: vso-node-api.LocationsApi.updateServiceDefinitions
    name: 'updateServiceDefinitions(serviceDefinitions: VssJsonCollectionWrapperV)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: serviceDefinitions
          type:
            - VssJsonCollectionWrapperV
          description: |+

      content: >-
        function updateServiceDefinitions(serviceDefinitions:
        VssJsonCollectionWrapperV)
      return:
        type:
          - Promise
    type: method
