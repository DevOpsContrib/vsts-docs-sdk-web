### YamlMime:UniversalReference
items:
  - uid: vso-node-api.TfvcApi
    name: TfvcApi
    fullName: TfvcApi
    children:
      - vso-node-api.TfvcApi.createChangeset
      - vso-node-api.TfvcApi.getBatchedChangesets
      - vso-node-api.TfvcApi.getBranch
      - vso-node-api.TfvcApi.getBranches
      - vso-node-api.TfvcApi.getBranchRefs
      - vso-node-api.TfvcApi.getChangeset
      - vso-node-api.TfvcApi.getChangesetChanges
      - vso-node-api.TfvcApi.getChangesets
      - vso-node-api.TfvcApi.getChangesetWorkItems
      - vso-node-api.TfvcApi.getItem
      - vso-node-api.TfvcApi.getItemContent
      - vso-node-api.TfvcApi.getItems
      - vso-node-api.TfvcApi.getItemsBatch
      - vso-node-api.TfvcApi.getItemsBatchZip
      - vso-node-api.TfvcApi.getItemText
      - vso-node-api.TfvcApi.getItemZip
      - vso-node-api.TfvcApi.getLabel
      - vso-node-api.TfvcApi.getLabelItems
      - vso-node-api.TfvcApi.getLabels
      - vso-node-api.TfvcApi.getShelveset
      - vso-node-api.TfvcApi.getShelvesetChanges
      - vso-node-api.TfvcApi.getShelvesets
      - vso-node-api.TfvcApi.getShelvesetWorkItems
      - vso-node-api.TfvcApi.constructor
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vso-node-api.TfvcApi.createChangeset
    name: 'createChangeset(changeset: TfvcChangeset, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: changeset
          type:
            - TfvcChangeset
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      content: 'function createChangeset(changeset: TfvcChangeset, project?: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getBatchedChangesets
    name: 'getBatchedChangesets(changesetsRequestData: TfvcChangesetsRequestData)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: changesetsRequestData
          type:
            - TfvcChangesetsRequestData
          description: |+

      content: >-
        function getBatchedChangesets(changesetsRequestData:
        TfvcChangesetsRequestData)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getBranch
    name: >-
      getBranch(path: string, project?: string, includeParent?: boolean,
      includeChildren?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: includeParent
          type:
            - boolean
          description: ''
          optional: true
        - id: includeChildren
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getBranch(path: string, project?: string, includeParent?:
        boolean, includeChildren?: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getBranches
    name: >-
      getBranches(project?: string, includeParent?: boolean, includeChildren?:
      boolean, includeDeleted?: boolean, includeLinks?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: includeParent
          type:
            - boolean
          description: ''
          optional: true
        - id: includeChildren
          type:
            - boolean
          description: ''
          optional: true
        - id: includeDeleted
          type:
            - boolean
          description: ''
          optional: true
        - id: includeLinks
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getBranches(project?: string, includeParent?: boolean,
        includeChildren?: boolean, includeDeleted?: boolean, includeLinks?:
        boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getBranchRefs
    name: >-
      getBranchRefs(scopePath: string, project?: string, includeDeleted?:
      boolean, includeLinks?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopePath
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: includeDeleted
          type:
            - boolean
          description: ''
          optional: true
        - id: includeLinks
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getBranchRefs(scopePath: string, project?: string,
        includeDeleted?: boolean, includeLinks?: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getChangeset
    name: >-
      getChangeset(id: number, project?: string, maxChangeCount?: number,
      includeDetails?: boolean, includeWorkItems?: boolean, maxCommentLength?:
      number, includeSourceRename?: boolean, skip?: number, top?: number,
      orderby?: string, searchCriteria?: TfvcChangesetSearchCriteria)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: maxChangeCount
          type:
            - number
          description: ''
          optional: true
        - id: includeDetails
          type:
            - boolean
          description: ''
          optional: true
        - id: includeWorkItems
          type:
            - boolean
          description: ''
          optional: true
        - id: maxCommentLength
          type:
            - number
          description: ''
          optional: true
        - id: includeSourceRename
          type:
            - boolean
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: orderby
          type:
            - string
          description: ''
          optional: true
        - id: searchCriteria
          type:
            - TfvcChangesetSearchCriteria
          description: |+

          optional: true
      content: >-
        function getChangeset(id: number, project?: string, maxChangeCount?:
        number, includeDetails?: boolean, includeWorkItems?: boolean,
        maxCommentLength?: number, includeSourceRename?: boolean, skip?: number,
        top?: number, orderby?: string, searchCriteria?:
        TfvcChangesetSearchCriteria)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getChangesetChanges
    name: 'getChangesetChanges(id?: number, skip?: number, top?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: |+

          optional: true
      content: 'function getChangesetChanges(id?: number, skip?: number, top?: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getChangesets
    name: >-
      getChangesets(project?: string, maxCommentLength?: number, skip?: number,
      top?: number, orderby?: string, searchCriteria?:
      TfvcChangesetSearchCriteria)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: maxCommentLength
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: orderby
          type:
            - string
          description: ''
          optional: true
        - id: searchCriteria
          type:
            - TfvcChangesetSearchCriteria
          description: |+

          optional: true
      content: >-
        function getChangesets(project?: string, maxCommentLength?: number,
        skip?: number, top?: number, orderby?: string, searchCriteria?:
        TfvcChangesetSearchCriteria)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getChangesetWorkItems
    name: 'getChangesetWorkItems(id?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - number
          description: |+

          optional: true
      content: 'function getChangesetWorkItems(id?: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getItem
    name: >-
      getItem(path: string, project?: string, fileName?: string, download?:
      boolean, scopePath?: string, recursionLevel?: function,
      versionDescriptor?: TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: ''
          optional: true
        - id: download
          type:
            - boolean
          description: ''
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - function
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - TfvcVersionDescriptor
          description: |+

          optional: true
      content: >-
        function getItem(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?: function,
        versionDescriptor?: TfvcVersionDescriptor)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getItemContent
    name: >-
      getItemContent(path: string, project?: string, fileName?: string,
      download?: boolean, scopePath?: string, recursionLevel?: function,
      versionDescriptor?: TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: ''
          optional: true
        - id: download
          type:
            - boolean
          description: ''
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - function
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - TfvcVersionDescriptor
          description: |+

          optional: true
      content: >-
        function getItemContent(path: string, project?: string, fileName?:
        string, download?: boolean, scopePath?: string, recursionLevel?:
        function, versionDescriptor?: TfvcVersionDescriptor)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getItems
    name: >-
      getItems(project?: string, scopePath?: string, recursionLevel?: function,
      includeLinks?: boolean, versionDescriptor?: TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - function
          description: ''
          optional: true
        - id: includeLinks
          type:
            - boolean
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - TfvcVersionDescriptor
          description: |+

          optional: true
      content: >-
        function getItems(project?: string, scopePath?: string, recursionLevel?:
        function, includeLinks?: boolean, versionDescriptor?:
        TfvcVersionDescriptor)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getItemsBatch
    name: 'getItemsBatch(itemRequestData: TfvcItemRequestData, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: itemRequestData
          type:
            - TfvcItemRequestData
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      content: >-
        function getItemsBatch(itemRequestData: TfvcItemRequestData, project?:
        string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getItemsBatchZip
    name: 'getItemsBatchZip(itemRequestData: TfvcItemRequestData, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: itemRequestData
          type:
            - TfvcItemRequestData
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      content: >-
        function getItemsBatchZip(itemRequestData: TfvcItemRequestData,
        project?: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getItemText
    name: >-
      getItemText(path: string, project?: string, fileName?: string, download?:
      boolean, scopePath?: string, recursionLevel?: function,
      versionDescriptor?: TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: ''
          optional: true
        - id: download
          type:
            - boolean
          description: ''
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - function
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - TfvcVersionDescriptor
          description: |+

          optional: true
      content: >-
        function getItemText(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?: function,
        versionDescriptor?: TfvcVersionDescriptor)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getItemZip
    name: >-
      getItemZip(path: string, project?: string, fileName?: string, download?:
      boolean, scopePath?: string, recursionLevel?: function,
      versionDescriptor?: TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: ''
          optional: true
        - id: download
          type:
            - boolean
          description: ''
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - function
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - TfvcVersionDescriptor
          description: |+

          optional: true
      content: >-
        function getItemZip(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?: function,
        versionDescriptor?: TfvcVersionDescriptor)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getLabel
    name: >-
      getLabel(labelId: string, requestData: TfvcLabelRequestData, project?:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: labelId
          type:
            - string
          description: Unique identifier of label
        - id: requestData
          type:
            - TfvcLabelRequestData
          description: maxItemCount
        - id: project
          type:
            - string
          description: |
            Project ID or project name
          optional: true
      content: >-
        function getLabel(labelId: string, requestData: TfvcLabelRequestData,
        project?: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getLabelItems
    name: 'getLabelItems(labelId: string, top?: number, skip?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: labelId
          type:
            - string
          description: Unique identifier of label
        - id: top
          type:
            - number
          description: Max number of items to return
          optional: true
        - id: skip
          type:
            - number
          description: |
            Number of items to skip
          optional: true
      content: 'function getLabelItems(labelId: string, top?: number, skip?: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getLabels
    name: >-
      getLabels(requestData: TfvcLabelRequestData, project?: string, top?:
      number, skip?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestData
          type:
            - TfvcLabelRequestData
          description: 'labelScope, name, owner, and itemLabelFilter'
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: top
          type:
            - number
          description: Max number of labels to return
          optional: true
        - id: skip
          type:
            - number
          description: |
            Number of labels to skip
          optional: true
      content: >-
        function getLabels(requestData: TfvcLabelRequestData, project?: string,
        top?: number, skip?: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getShelveset
    name: 'getShelveset(shelvesetId: string, requestData?: TfvcShelvesetRequestData)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: shelvesetId
          type:
            - string
          description: Shelveset's unique ID
        - id: requestData
          type:
            - TfvcShelvesetRequestData
          description: >
            includeDetails, includeWorkItems, maxChangeCount, and
            maxCommentLength
          optional: true
      content: >-
        function getShelveset(shelvesetId: string, requestData?:
        TfvcShelvesetRequestData)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getShelvesetChanges
    name: 'getShelvesetChanges(shelvesetId: string, top?: number, skip?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: shelvesetId
          type:
            - string
          description: Shelveset's unique ID
        - id: top
          type:
            - number
          description: Max number of changes to return
          optional: true
        - id: skip
          type:
            - number
          description: |
            Number of changes to skip
          optional: true
      content: >-
        function getShelvesetChanges(shelvesetId: string, top?: number, skip?:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getShelvesets
    name: >-
      getShelvesets(requestData?: TfvcShelvesetRequestData, top?: number, skip?:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestData
          type:
            - TfvcShelvesetRequestData
          description: 'name, owner, and maxCommentLength'
          optional: true
        - id: top
          type:
            - number
          description: Max number of shelvesets to return
          optional: true
        - id: skip
          type:
            - number
          description: |
            Number of shelvesets to skip
          optional: true
      content: >-
        function getShelvesets(requestData?: TfvcShelvesetRequestData, top?:
        number, skip?: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.getShelvesetWorkItems
    name: 'getShelvesetWorkItems(shelvesetId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: shelvesetId
          type:
            - string
          description: |
            Shelveset's unique ID
      content: 'function getShelvesetWorkItems(shelvesetId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TfvcApi.constructor
    name: 'TfvcApi(baseUrl: string, handlers: function, options?: IRequestOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: baseUrl
          type:
            - string
          description: ''
        - id: handlers
          type:
            - function
          description: ''
        - id: options
          type:
            - IRequestOptions
          description: ''
          optional: true
      content: >-
        new TfvcApi(baseUrl: string, handlers: function, options?:
        IRequestOptions)
      return:
        type:
          - vso-node-api.TfvcApi
    type: constructor
