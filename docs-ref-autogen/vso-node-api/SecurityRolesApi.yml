### YamlMime:UniversalReference
items:
  - uid: vso-node-api.SecurityRolesApi
    name: SecurityRolesApi
    fullName: SecurityRolesApi
    children:
      - vso-node-api.SecurityRolesApi.getRoleAssignments
      - vso-node-api.SecurityRolesApi.getRoleDefinitions
      - vso-node-api.SecurityRolesApi.removeRoleAssignment
      - vso-node-api.SecurityRolesApi.removeRoleAssignments
      - vso-node-api.SecurityRolesApi.constructor
      - vso-node-api.SecurityRolesApi.setRoleAssignment
      - vso-node-api.SecurityRolesApi.setRoleAssignments
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vso-node-api.SecurityRolesApi.getRoleAssignments
    name: 'getRoleAssignments(scopeId: string, resourceId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeId
          type:
            - string
          description: ''
        - id: resourceId
          type:
            - string
          description: |+

      content: 'function getRoleAssignments(scopeId: string, resourceId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.SecurityRolesApi.getRoleDefinitions
    name: 'getRoleDefinitions(scopeId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeId
          type:
            - string
          description: |+

      content: 'function getRoleDefinitions(scopeId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.SecurityRolesApi.removeRoleAssignment
    name: >-
      removeRoleAssignment(scopeId: string, resourceId: string, identityId:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeId
          type:
            - string
          description: ''
        - id: resourceId
          type:
            - string
          description: ''
        - id: identityId
          type:
            - string
          description: |+

      content: >-
        function removeRoleAssignment(scopeId: string, resourceId: string,
        identityId: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.SecurityRolesApi.removeRoleAssignments
    name: >-
      removeRoleAssignments(identityIds: function, scopeId: string, resourceId:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: identityIds
          type:
            - function
          description: ''
        - id: scopeId
          type:
            - string
          description: ''
        - id: resourceId
          type:
            - string
          description: |+

      content: >-
        function removeRoleAssignments(identityIds: function, scopeId: string,
        resourceId: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.SecurityRolesApi.constructor
    name: >-
      SecurityRolesApi(baseUrl: string, handlers: function, options?:
      IRequestOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: baseUrl
          type:
            - string
          description: ''
        - id: handlers
          type:
            - function
          description: ''
        - id: options
          type:
            - IRequestOptions
          description: ''
          optional: true
      content: >-
        new SecurityRolesApi(baseUrl: string, handlers: function, options?:
        IRequestOptions)
      return:
        type:
          - vso-node-api.SecurityRolesApi
    type: constructor
  - uid: vso-node-api.SecurityRolesApi.setRoleAssignment
    name: >-
      setRoleAssignment(roleAssignment: UserRoleAssignmentRef, scopeId: string,
      resourceId: string, identityId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: roleAssignment
          type:
            - UserRoleAssignmentRef
          description: ''
        - id: scopeId
          type:
            - string
          description: ''
        - id: resourceId
          type:
            - string
          description: ''
        - id: identityId
          type:
            - string
          description: |+

      content: >-
        function setRoleAssignment(roleAssignment: UserRoleAssignmentRef,
        scopeId: string, resourceId: string, identityId: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.SecurityRolesApi.setRoleAssignments
    name: >-
      setRoleAssignments(roleAssignments: function, scopeId: string, resourceId:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: roleAssignments
          type:
            - function
          description: ''
        - id: scopeId
          type:
            - string
          description: ''
        - id: resourceId
          type:
            - string
          description: |+

      content: >-
        function setRoleAssignments(roleAssignments: function, scopeId: string,
        resourceId: string)
      return:
        type:
          - Promise
    type: method
