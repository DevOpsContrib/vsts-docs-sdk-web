### YamlMime:UniversalReference
items:
  - uid: vso-node-api.OrganizationApi
    name: OrganizationApi
    fullName: OrganizationApi
    children:
      - vso-node-api.OrganizationApi.createCollection
      - vso-node-api.OrganizationApi.createOrganization
      - vso-node-api.OrganizationApi.deleteCollection
      - vso-node-api.OrganizationApi.exportOrganizationMigrationBlob
      - vso-node-api.OrganizationApi.getCollection
      - vso-node-api.OrganizationApi.getCollections
      - vso-node-api.OrganizationApi.getOrganization
      - vso-node-api.OrganizationApi.getOrganizations
      - vso-node-api.OrganizationApi.getRegions
      - vso-node-api.OrganizationApi.importOrganizationMigrationBlob
      - vso-node-api.OrganizationApi.constructor
      - vso-node-api.OrganizationApi.restoreCollection
      - vso-node-api.OrganizationApi.updateCollection
      - vso-node-api.OrganizationApi.updateCollectionProperties
      - vso-node-api.OrganizationApi.updateOrganization
      - vso-node-api.OrganizationApi.updateOrganizationProperties
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vso-node-api.OrganizationApi.createCollection
    name: 'createCollection(resource: Collection)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: resource
          type:
            - Collection
          description: |+

      content: 'function createCollection(resource: Collection)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.OrganizationApi.createOrganization
    name: 'createOrganization(resource: Organization)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: resource
          type:
            - Organization
          description: |+

      content: 'function createOrganization(resource: Organization)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.OrganizationApi.deleteCollection
    name: 'deleteCollection(collectionId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: collectionId
          type:
            - string
          description: |+

      content: 'function deleteCollection(collectionId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.OrganizationApi.exportOrganizationMigrationBlob
    name: 'exportOrganizationMigrationBlob(organizationId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: organizationId
          type:
            - string
          description: |+

      content: 'function exportOrganizationMigrationBlob(organizationId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.OrganizationApi.getCollection
    name: 'getCollection(collectionId: string, propertyNames?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: collectionId
          type:
            - string
          description: ''
        - id: propertyNames
          type:
            - function
          description: |+

          optional: true
      content: 'function getCollection(collectionId: string, propertyNames?: function)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.OrganizationApi.getCollections
    name: getCollections()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getCollections()
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.OrganizationApi.getOrganization
    name: 'getOrganization(organizationId: string, propertyNames?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: organizationId
          type:
            - string
          description: ''
        - id: propertyNames
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getOrganization(organizationId: string, propertyNames?:
        function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.OrganizationApi.getOrganizations
    name: >-
      getOrganizations(searchKind: function, searchValue: string, isActivated?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: searchKind
          type:
            - function
          description: ''
        - id: searchValue
          type:
            - string
          description: ''
        - id: isActivated
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getOrganizations(searchKind: function, searchValue: string,
        isActivated?: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.OrganizationApi.getRegions
    name: getRegions()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getRegions()
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.OrganizationApi.importOrganizationMigrationBlob
    name: 'importOrganizationMigrationBlob(migrationBlob: OrganizationMigrationBlob)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: migrationBlob
          type:
            - OrganizationMigrationBlob
          description: |+

      content: >-
        function importOrganizationMigrationBlob(migrationBlob:
        OrganizationMigrationBlob)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.OrganizationApi.constructor
    name: >-
      OrganizationApi(baseUrl: string, handlers: function, options?:
      IRequestOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: baseUrl
          type:
            - string
          description: ''
        - id: handlers
          type:
            - function
          description: ''
        - id: options
          type:
            - IRequestOptions
          description: ''
          optional: true
      content: >-
        new OrganizationApi(baseUrl: string, handlers: function, options?:
        IRequestOptions)
      return:
        type:
          - vso-node-api.OrganizationApi
    type: constructor
  - uid: vso-node-api.OrganizationApi.restoreCollection
    name: 'restoreCollection(collectionId: string, collectionName: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: collectionId
          type:
            - string
          description: ''
        - id: collectionName
          type:
            - string
          description: |+

      content: 'function restoreCollection(collectionId: string, collectionName: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.OrganizationApi.updateCollection
    name: >-
      updateCollection(customHeaders: any, patchDocument: JsonPatchDocument,
      collectionId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: customHeaders
          type:
            - any
          description: ''
        - id: patchDocument
          type:
            - JsonPatchDocument
          description: ''
        - id: collectionId
          type:
            - string
          description: |+

      content: >-
        function updateCollection(customHeaders: any, patchDocument:
        JsonPatchDocument, collectionId: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.OrganizationApi.updateCollectionProperties
    name: >-
      updateCollectionProperties(customHeaders: any, collectionId: string,
      patchDocument: JsonPatchDocument)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: customHeaders
          type:
            - any
          description: ''
        - id: collectionId
          type:
            - string
          description: ''
        - id: patchDocument
          type:
            - JsonPatchDocument
          description: |+

      content: >-
        function updateCollectionProperties(customHeaders: any, collectionId:
        string, patchDocument: JsonPatchDocument)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.OrganizationApi.updateOrganization
    name: >-
      updateOrganization(customHeaders: any, patchDocument: JsonPatchDocument,
      organizationId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: customHeaders
          type:
            - any
          description: ''
        - id: patchDocument
          type:
            - JsonPatchDocument
          description: ''
        - id: organizationId
          type:
            - string
          description: |+

      content: >-
        function updateOrganization(customHeaders: any, patchDocument:
        JsonPatchDocument, organizationId: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.OrganizationApi.updateOrganizationProperties
    name: >-
      updateOrganizationProperties(customHeaders: any, organizationId: string,
      patchDocument: JsonPatchDocument)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: customHeaders
          type:
            - any
          description: ''
        - id: organizationId
          type:
            - string
          description: ''
        - id: patchDocument
          type:
            - JsonPatchDocument
          description: |+

      content: >-
        function updateOrganizationProperties(customHeaders: any,
        organizationId: string, patchDocument: JsonPatchDocument)
      return:
        type:
          - Promise
    type: method
