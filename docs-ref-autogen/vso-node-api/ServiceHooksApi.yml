### YamlMime:UniversalReference
items:
  - uid: vso-node-api.ServiceHooksApi
    name: ServiceHooksApi
    fullName: ServiceHooksApi
    children:
      - vso-node-api.ServiceHooksApi.createEvents
      - vso-node-api.ServiceHooksApi.createSubscription
      - vso-node-api.ServiceHooksApi.createTestNotification
      - vso-node-api.ServiceHooksApi.deleteSubscription
      - vso-node-api.ServiceHooksApi.getConsumer
      - vso-node-api.ServiceHooksApi.getConsumerAction
      - vso-node-api.ServiceHooksApi.getConsumerActions
      - vso-node-api.ServiceHooksApi.getConsumers
      - vso-node-api.ServiceHooksApi.getNotification
      - vso-node-api.ServiceHooksApi.getNotifications
      - vso-node-api.ServiceHooksApi.getSubscription
      - vso-node-api.ServiceHooksApi.listSubscriptions
      - vso-node-api.ServiceHooksApi.queryInputValues
      - vso-node-api.ServiceHooksApi.queryNotifications
      - vso-node-api.ServiceHooksApi.querySubscriptions
      - vso-node-api.ServiceHooksApi.replaceSubscription
      - vso-node-api.ServiceHooksApi.constructor
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vso-node-api.ServiceHooksApi.createEvents
    name: 'createEvents(eventsRequestData: PublishEventsRequestData)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: eventsRequestData
          type:
            - PublishEventsRequestData
          description: |+

      content: 'function createEvents(eventsRequestData: PublishEventsRequestData)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.createSubscription
    name: 'createSubscription(subscription: Subscription)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: subscription
          type:
            - Subscription
          description: |+

      content: 'function createSubscription(subscription: Subscription)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.createTestNotification
    name: 'createTestNotification(testNotification: Notification)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: testNotification
          type:
            - Notification
          description: |+

      content: 'function createTestNotification(testNotification: Notification)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.deleteSubscription
    name: 'deleteSubscription(subscriptionId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: subscriptionId
          type:
            - string
          description: |+

      content: 'function deleteSubscription(subscriptionId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.getConsumer
    name: 'getConsumer(consumerId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: consumerId
          type:
            - string
          description: |+

      content: 'function getConsumer(consumerId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.getConsumerAction
    name: 'getConsumerAction(consumerId: string, consumerActionId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: consumerId
          type:
            - string
          description: ''
        - id: consumerActionId
          type:
            - string
          description: |+

      content: 'function getConsumerAction(consumerId: string, consumerActionId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.getConsumerActions
    name: 'getConsumerActions(consumerId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: consumerId
          type:
            - string
          description: |+

      content: 'function getConsumerActions(consumerId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.getConsumers
    name: getConsumers()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getConsumers()
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.getNotification
    name: 'getNotification(subscriptionId: string, notificationId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: subscriptionId
          type:
            - string
          description: ''
        - id: notificationId
          type:
            - number
          description: |+

      content: 'function getNotification(subscriptionId: string, notificationId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.getNotifications
    name: >-
      getNotifications(subscriptionId: string, maxResults?: number, status?:
      function, result?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: subscriptionId
          type:
            - string
          description: ''
        - id: maxResults
          type:
            - number
          description: ''
          optional: true
        - id: status
          type:
            - function
          description: ''
          optional: true
        - id: result
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getNotifications(subscriptionId: string, maxResults?: number,
        status?: function, result?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.getSubscription
    name: 'getSubscription(subscriptionId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: subscriptionId
          type:
            - string
          description: |+

      content: 'function getSubscription(subscriptionId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.listSubscriptions
    name: >-
      listSubscriptions(publisherId?: string, eventType?: string, consumerId?:
      string, consumerActionId?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: publisherId
          type:
            - string
          description: ''
          optional: true
        - id: eventType
          type:
            - string
          description: ''
          optional: true
        - id: consumerId
          type:
            - string
          description: ''
          optional: true
        - id: consumerActionId
          type:
            - string
          description: |+

          optional: true
      content: >-
        function listSubscriptions(publisherId?: string, eventType?: string,
        consumerId?: string, consumerActionId?: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.queryInputValues
    name: 'queryInputValues(inputValuesQuery: SubscriptionInputValuesQuery)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: inputValuesQuery
          type:
            - SubscriptionInputValuesQuery
          description: |+

      content: >-
        function queryInputValues(inputValuesQuery:
        SubscriptionInputValuesQuery)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.queryNotifications
    name: 'queryNotifications(query: NotificationsQuery)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: query
          type:
            - NotificationsQuery
          description: |+

      content: 'function queryNotifications(query: NotificationsQuery)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.querySubscriptions
    name: 'querySubscriptions(query: SubscriptionsQuery)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: query
          type:
            - SubscriptionsQuery
          description: |+

      content: 'function querySubscriptions(query: SubscriptionsQuery)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.replaceSubscription
    name: 'replaceSubscription(subscription: Subscription)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: subscription
          type:
            - Subscription
          description: |+

      content: 'function replaceSubscription(subscription: Subscription)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.ServiceHooksApi.constructor
    name: >-
      ServiceHooksApi(baseUrl: string, handlers: function, options?:
      IRequestOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: baseUrl
          type:
            - string
          description: ''
        - id: handlers
          type:
            - function
          description: ''
        - id: options
          type:
            - IRequestOptions
          description: ''
          optional: true
      content: >-
        new ServiceHooksApi(baseUrl: string, handlers: function, options?:
        IRequestOptions)
      return:
        type:
          - vso-node-api.ServiceHooksApi
    type: constructor
