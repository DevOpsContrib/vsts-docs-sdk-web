### YamlMime:UniversalReference
items:
  - uid: vso-node-api.DelegatedAuthorizationApi
    name: DelegatedAuthorizationApi
    fullName: DelegatedAuthorizationApi
    children:
      - vso-node-api.DelegatedAuthorizationApi.authorize
      - vso-node-api.DelegatedAuthorizationApi.create
      - vso-node-api.DelegatedAuthorizationApi.constructor
      - vso-node-api.DelegatedAuthorizationApi.delete
      - vso-node-api.DelegatedAuthorizationApi.get
      - vso-node-api.DelegatedAuthorizationApi.getAuthorizations
      - vso-node-api.DelegatedAuthorizationApi.getSecret
      - vso-node-api.DelegatedAuthorizationApi.host
      - vso-node-api.DelegatedAuthorizationApi.initiateAuthorization
      - vso-node-api.DelegatedAuthorizationApi.list
      - vso-node-api.DelegatedAuthorizationApi.revoke
      - vso-node-api.DelegatedAuthorizationApi.revokeAuthorization
      - vso-node-api.DelegatedAuthorizationApi.update
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vso-node-api.DelegatedAuthorizationApi.authorize
    name: >-
      authorize(redirectUri: string, responseType: function, clientId: string,
      scopes: string, userId?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: redirectUri
          type:
            - string
          description: ''
        - id: responseType
          type:
            - function
          description: ''
        - id: clientId
          type:
            - string
          description: ''
        - id: scopes
          type:
            - string
          description: ''
        - id: userId
          type:
            - string
          description: |+

          optional: true
      content: >-
        function authorize(redirectUri: string, responseType: function,
        clientId: string, scopes: string, userId?: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DelegatedAuthorizationApi.create
    name: 'create(registration: Registration, includeSecret?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: registration
          type:
            - Registration
          description: ''
        - id: includeSecret
          type:
            - boolean
          description: |+

          optional: true
      content: 'function create(registration: Registration, includeSecret?: boolean)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DelegatedAuthorizationApi.constructor
    name: >-
      DelegatedAuthorizationApi(baseUrl: string, handlers: function, options?:
      IRequestOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: baseUrl
          type:
            - string
          description: ''
        - id: handlers
          type:
            - function
          description: ''
        - id: options
          type:
            - IRequestOptions
          description: ''
          optional: true
      content: >-
        new DelegatedAuthorizationApi(baseUrl: string, handlers: function,
        options?: IRequestOptions)
      return:
        type:
          - vso-node-api.DelegatedAuthorizationApi
    type: constructor
  - uid: vso-node-api.DelegatedAuthorizationApi.delete
    name: 'delete(registrationId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: registrationId
          type:
            - string
          description: |+

      content: 'function delete(registrationId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DelegatedAuthorizationApi.get
    name: 'get(registrationId: string, includeSecret: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: registrationId
          type:
            - string
          description: ''
        - id: includeSecret
          type:
            - boolean
          description: |+

      content: 'function get(registrationId: string, includeSecret: boolean)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DelegatedAuthorizationApi.getAuthorizations
    name: 'getAuthorizations(userId?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: userId
          type:
            - string
          description: |+

          optional: true
      content: 'function getAuthorizations(userId?: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DelegatedAuthorizationApi.getSecret
    name: 'getSecret(registrationId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: registrationId
          type:
            - string
          description: |+

      content: 'function getSecret(registrationId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DelegatedAuthorizationApi.host
    name: 'host(clientId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: clientId
          type:
            - string
          description: |+

      content: 'function host(clientId: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DelegatedAuthorizationApi.initiateAuthorization
    name: >-
      initiateAuthorization(redirectUri: string, responseType: function,
      clientId: string, scopes: string, userId?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: redirectUri
          type:
            - string
          description: ''
        - id: responseType
          type:
            - function
          description: ''
        - id: clientId
          type:
            - string
          description: ''
        - id: scopes
          type:
            - string
          description: ''
        - id: userId
          type:
            - string
          description: |+

          optional: true
      content: >-
        function initiateAuthorization(redirectUri: string, responseType:
        function, clientId: string, scopes: string, userId?: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DelegatedAuthorizationApi.list
    name: list()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function list()
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DelegatedAuthorizationApi.revoke
    name: 'revoke(clientId: string, hostId?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: clientId
          type:
            - string
          description: ''
        - id: hostId
          type:
            - string
          description: |+

          optional: true
      content: 'function revoke(clientId: string, hostId?: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DelegatedAuthorizationApi.revokeAuthorization
    name: 'revokeAuthorization(authorizationId: string, userId?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: authorizationId
          type:
            - string
          description: ''
        - id: userId
          type:
            - string
          description: |+

          optional: true
      content: 'function revokeAuthorization(authorizationId: string, userId?: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.DelegatedAuthorizationApi.update
    name: 'update(registration: Registration, includeSecret?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: registration
          type:
            - Registration
          description: ''
        - id: includeSecret
          type:
            - boolean
          description: |+

          optional: true
      content: 'function update(registration: Registration, includeSecret?: boolean)'
      return:
        type:
          - Promise
    type: method
