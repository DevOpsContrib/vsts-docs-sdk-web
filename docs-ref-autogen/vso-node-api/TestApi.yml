### YamlMime:UniversalReference
items:
  - uid: vso-node-api.TestApi
    name: TestApi
    fullName: TestApi
    children:
      - vso-node-api.TestApi.addCustomFields
      - vso-node-api.TestApi.addTestCasesToSuite
      - vso-node-api.TestApi.addTestResultsToTestRun
      - vso-node-api.TestApi.addWorkItemToTestLinks
      - vso-node-api.TestApi.cloneTestPlan
      - vso-node-api.TestApi.cloneTestSuite
      - vso-node-api.TestApi.createTestConfiguration
      - vso-node-api.TestApi.createTestIterationResultAttachment
      - vso-node-api.TestApi.createTestPlan
      - vso-node-api.TestApi.createTestResultAttachment
      - vso-node-api.TestApi.createTestRun
      - vso-node-api.TestApi.createTestRunAttachment
      - vso-node-api.TestApi.createTestSession
      - vso-node-api.TestApi.createTestSettings
      - vso-node-api.TestApi.createTestSuite
      - vso-node-api.TestApi.createTestVariable
      - vso-node-api.TestApi.deleteSharedParameter
      - vso-node-api.TestApi.deleteSharedStep
      - vso-node-api.TestApi.deleteTestCase
      - vso-node-api.TestApi.deleteTestConfiguration
      - vso-node-api.TestApi.deleteTestMethodToWorkItemLink
      - vso-node-api.TestApi.deleteTestPlan
      - vso-node-api.TestApi.deleteTestRun
      - vso-node-api.TestApi.deleteTestSettings
      - vso-node-api.TestApi.deleteTestSuite
      - vso-node-api.TestApi.deleteTestVariable
      - vso-node-api.TestApi.getActionResults
      - vso-node-api.TestApi.getBugsLinkedToTestResult
      - vso-node-api.TestApi.getBuildCodeCoverage
      - vso-node-api.TestApi.getCloneInformation
      - vso-node-api.TestApi.getCodeCoverageSummary
      - vso-node-api.TestApi.getLinkedWorkItemsByQuery
      - vso-node-api.TestApi.getPlanById
      - vso-node-api.TestApi.getPlans
      - vso-node-api.TestApi.getPoint
      - vso-node-api.TestApi.getPoints
      - vso-node-api.TestApi.getPointsByQuery
      - vso-node-api.TestApi.getResultParameters
      - vso-node-api.TestApi.getResultRetentionSettings
      - vso-node-api.TestApi.getSuiteEntries
      - vso-node-api.TestApi.getSuitesByTestCaseId
      - vso-node-api.TestApi.getTestCaseById
      - vso-node-api.TestApi.getTestCases
      - vso-node-api.TestApi.getTestConfigurationById
      - vso-node-api.TestApi.getTestConfigurations
      - vso-node-api.TestApi.getTestIteration
      - vso-node-api.TestApi.getTestIterations
      - vso-node-api.TestApi.getTestResultAttachmentContent
      - vso-node-api.TestApi.getTestResultAttachments
      - vso-node-api.TestApi.getTestResultAttachmentZip
      - vso-node-api.TestApi.getTestResultById
      - vso-node-api.TestApi.getTestResultDetailsForBuild
      - vso-node-api.TestApi.getTestResultDetailsForRelease
      - vso-node-api.TestApi.getTestResults
      - vso-node-api.TestApi.getTestResultsByQuery
      - vso-node-api.TestApi.getTestRunAttachmentContent
      - vso-node-api.TestApi.getTestRunAttachments
      - vso-node-api.TestApi.getTestRunAttachmentZip
      - vso-node-api.TestApi.getTestRunById
      - vso-node-api.TestApi.getTestRunCodeCoverage
      - vso-node-api.TestApi.getTestRunLogs
      - vso-node-api.TestApi.getTestRuns
      - vso-node-api.TestApi.getTestRunStatistics
      - vso-node-api.TestApi.getTestSessions
      - vso-node-api.TestApi.getTestSettingsById
      - vso-node-api.TestApi.getTestSuiteById
      - vso-node-api.TestApi.getTestSuitesForPlan
      - vso-node-api.TestApi.getTestVariableById
      - vso-node-api.TestApi.getTestVariables
      - vso-node-api.TestApi.publishTestResultDocument
      - vso-node-api.TestApi.queryCustomFields
      - vso-node-api.TestApi.queryResultTrendForBuild
      - vso-node-api.TestApi.queryResultTrendForRelease
      - vso-node-api.TestApi.queryTestMethodLinkedWorkItems
      - vso-node-api.TestApi.queryTestResultHistory
      - vso-node-api.TestApi.queryTestResultsReportForBuild
      - vso-node-api.TestApi.queryTestResultsReportForRelease
      - vso-node-api.TestApi.queryTestResultsSummaryForReleases
      - vso-node-api.TestApi.queryTestResultWorkItems
      - vso-node-api.TestApi.queryTestSummaryByRequirement
      - vso-node-api.TestApi.removeTestCasesFromSuiteUrl
      - vso-node-api.TestApi.reorderSuiteEntries
      - vso-node-api.TestApi.constructor
      - vso-node-api.TestApi.updateCodeCoverageSummary
      - vso-node-api.TestApi.updateResultRetentionSettings
      - vso-node-api.TestApi.updateTestConfiguration
      - vso-node-api.TestApi.updateTestPlan
      - vso-node-api.TestApi.updateTestPoints
      - vso-node-api.TestApi.updateTestResults
      - vso-node-api.TestApi.updateTestRun
      - vso-node-api.TestApi.updateTestSession
      - vso-node-api.TestApi.updateTestSuite
      - vso-node-api.TestApi.updateTestVariable
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vso-node-api.TestApi.addCustomFields
    name: 'addCustomFields(newFields: function, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: newFields
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: 'function addCustomFields(newFields: function, project: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.addTestCasesToSuite
    name: >-
      addTestCasesToSuite(project: string, planId: number, suiteId: number,
      testCaseIds: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: ''
        - id: suiteId
          type:
            - number
          description: ''
        - id: testCaseIds
          type:
            - string
          description: |+

      content: >-
        function addTestCasesToSuite(project: string, planId: number, suiteId:
        number, testCaseIds: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.addTestResultsToTestRun
    name: 'addTestResultsToTestRun(results: function, project: string, runId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: results
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: |+

      content: >-
        function addTestResultsToTestRun(results: function, project: string,
        runId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.addWorkItemToTestLinks
    name: >-
      addWorkItemToTestLinks(workItemToTestLinks: WorkItemToTestLinks, project:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: workItemToTestLinks
          type:
            - WorkItemToTestLinks
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: >-
        function addWorkItemToTestLinks(workItemToTestLinks:
        WorkItemToTestLinks, project: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.cloneTestPlan
    name: >-
      cloneTestPlan(cloneRequestBody: TestPlanCloneRequest, project: string,
      planId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: cloneRequestBody
          type:
            - TestPlanCloneRequest
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: |+

      content: >-
        function cloneTestPlan(cloneRequestBody: TestPlanCloneRequest, project:
        string, planId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.cloneTestSuite
    name: >-
      cloneTestSuite(cloneRequestBody: TestSuiteCloneRequest, project: string,
      planId: number, sourceSuiteId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: cloneRequestBody
          type:
            - TestSuiteCloneRequest
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: ''
        - id: sourceSuiteId
          type:
            - number
          description: |+

      content: >-
        function cloneTestSuite(cloneRequestBody: TestSuiteCloneRequest,
        project: string, planId: number, sourceSuiteId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.createTestConfiguration
    name: >-
      createTestConfiguration(testConfiguration: TestConfiguration, project:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: testConfiguration
          type:
            - TestConfiguration
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: >-
        function createTestConfiguration(testConfiguration: TestConfiguration,
        project: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.createTestIterationResultAttachment
    name: >-
      createTestIterationResultAttachment(attachmentRequestModel:
      TestAttachmentRequestModel, project: string, runId: number,
      testCaseResultId: number, iterationId: number, actionPath?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: attachmentRequestModel
          type:
            - TestAttachmentRequestModel
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: testCaseResultId
          type:
            - number
          description: ''
        - id: iterationId
          type:
            - number
          description: ''
        - id: actionPath
          type:
            - string
          description: |+

          optional: true
      content: >-
        function createTestIterationResultAttachment(attachmentRequestModel:
        TestAttachmentRequestModel, project: string, runId: number,
        testCaseResultId: number, iterationId: number, actionPath?: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.createTestPlan
    name: 'createTestPlan(testPlan: PlanUpdateModel, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: testPlan
          type:
            - PlanUpdateModel
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: 'function createTestPlan(testPlan: PlanUpdateModel, project: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.createTestResultAttachment
    name: >-
      createTestResultAttachment(attachmentRequestModel:
      TestAttachmentRequestModel, project: string, runId: number,
      testCaseResultId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: attachmentRequestModel
          type:
            - TestAttachmentRequestModel
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: testCaseResultId
          type:
            - number
          description: |+

      content: >-
        function createTestResultAttachment(attachmentRequestModel:
        TestAttachmentRequestModel, project: string, runId: number,
        testCaseResultId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.createTestRun
    name: 'createTestRun(testRun: RunCreateModel, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: testRun
          type:
            - RunCreateModel
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: 'function createTestRun(testRun: RunCreateModel, project: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.createTestRunAttachment
    name: >-
      createTestRunAttachment(attachmentRequestModel:
      TestAttachmentRequestModel, project: string, runId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: attachmentRequestModel
          type:
            - TestAttachmentRequestModel
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: |+

      content: >-
        function createTestRunAttachment(attachmentRequestModel:
        TestAttachmentRequestModel, project: string, runId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.createTestSession
    name: 'createTestSession(testSession: TestSession, teamContext: TeamContext)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: testSession
          type:
            - TestSession
          description: ''
        - id: teamContext
          type:
            - TeamContext
          description: |
            The team context for the operation
      content: >-
        function createTestSession(testSession: TestSession, teamContext:
        TeamContext)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.createTestSettings
    name: 'createTestSettings(testSettings: TestSettings, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: testSettings
          type:
            - TestSettings
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: 'function createTestSettings(testSettings: TestSettings, project: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.createTestSuite
    name: >-
      createTestSuite(testSuite: SuiteCreateModel, project: string, planId:
      number, suiteId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: testSuite
          type:
            - SuiteCreateModel
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: ''
        - id: suiteId
          type:
            - number
          description: |+

      content: >-
        function createTestSuite(testSuite: SuiteCreateModel, project: string,
        planId: number, suiteId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.createTestVariable
    name: 'createTestVariable(testVariable: TestVariable, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: testVariable
          type:
            - TestVariable
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: 'function createTestVariable(testVariable: TestVariable, project: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.deleteSharedParameter
    name: 'deleteSharedParameter(project: string, sharedParameterId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: sharedParameterId
          type:
            - number
          description: |+

      content: >-
        function deleteSharedParameter(project: string, sharedParameterId:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.deleteSharedStep
    name: 'deleteSharedStep(project: string, sharedStepId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: sharedStepId
          type:
            - number
          description: |+

      content: 'function deleteSharedStep(project: string, sharedStepId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.deleteTestCase
    name: 'deleteTestCase(project: string, testCaseId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: testCaseId
          type:
            - number
          description: |+

      content: 'function deleteTestCase(project: string, testCaseId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.deleteTestConfiguration
    name: 'deleteTestConfiguration(project: string, testConfigurationId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: testConfigurationId
          type:
            - number
          description: |+

      content: >-
        function deleteTestConfiguration(project: string, testConfigurationId:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.deleteTestMethodToWorkItemLink
    name: >-
      deleteTestMethodToWorkItemLink(project: string, testName: string,
      workItemId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: testName
          type:
            - string
          description: ''
        - id: workItemId
          type:
            - number
          description: |+

      content: >-
        function deleteTestMethodToWorkItemLink(project: string, testName:
        string, workItemId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.deleteTestPlan
    name: 'deleteTestPlan(project: string, planId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: |+

      content: 'function deleteTestPlan(project: string, planId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.deleteTestRun
    name: 'deleteTestRun(project: string, runId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: |+

      content: 'function deleteTestRun(project: string, runId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.deleteTestSettings
    name: 'deleteTestSettings(project: string, testSettingsId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: testSettingsId
          type:
            - number
          description: |+

      content: 'function deleteTestSettings(project: string, testSettingsId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.deleteTestSuite
    name: 'deleteTestSuite(project: string, planId: number, suiteId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: ''
        - id: suiteId
          type:
            - number
          description: |+

      content: >-
        function deleteTestSuite(project: string, planId: number, suiteId:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.deleteTestVariable
    name: 'deleteTestVariable(project: string, testVariableId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: testVariableId
          type:
            - number
          description: |+

      content: 'function deleteTestVariable(project: string, testVariableId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getActionResults
    name: >-
      getActionResults(project: string, runId: number, testCaseResultId: number,
      iterationId: number, actionPath?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: testCaseResultId
          type:
            - number
          description: ''
        - id: iterationId
          type:
            - number
          description: ''
        - id: actionPath
          type:
            - string
          description: |+

          optional: true
      content: >-
        function getActionResults(project: string, runId: number,
        testCaseResultId: number, iterationId: number, actionPath?: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getBugsLinkedToTestResult
    name: >-
      getBugsLinkedToTestResult(project: string, runId: number,
      testCaseResultId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: testCaseResultId
          type:
            - number
          description: |+

      content: >-
        function getBugsLinkedToTestResult(project: string, runId: number,
        testCaseResultId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getBuildCodeCoverage
    name: 'getBuildCodeCoverage(project: string, buildId: number, flags: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: flags
          type:
            - number
          description: |+

      content: >-
        function getBuildCodeCoverage(project: string, buildId: number, flags:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getCloneInformation
    name: >-
      getCloneInformation(project: string, cloneOperationId: number,
      includeDetails?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: cloneOperationId
          type:
            - number
          description: ''
        - id: includeDetails
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getCloneInformation(project: string, cloneOperationId: number,
        includeDetails?: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getCodeCoverageSummary
    name: >-
      getCodeCoverageSummary(project: string, buildId: number, deltaBuildId?:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: deltaBuildId
          type:
            - number
          description: |+

          optional: true
      content: >-
        function getCodeCoverageSummary(project: string, buildId: number,
        deltaBuildId?: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getLinkedWorkItemsByQuery
    name: >-
      getLinkedWorkItemsByQuery(workItemQuery: LinkedWorkItemsQuery, project:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: workItemQuery
          type:
            - LinkedWorkItemsQuery
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: >-
        function getLinkedWorkItemsByQuery(workItemQuery: LinkedWorkItemsQuery,
        project: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getPlanById
    name: 'getPlanById(project: string, planId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: |+

      content: 'function getPlanById(project: string, planId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getPlans
    name: >-
      getPlans(project: string, owner?: string, skip?: number, top?: number,
      includePlanDetails?: boolean, filterActivePlans?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: owner
          type:
            - string
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: includePlanDetails
          type:
            - boolean
          description: ''
          optional: true
        - id: filterActivePlans
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getPlans(project: string, owner?: string, skip?: number, top?:
        number, includePlanDetails?: boolean, filterActivePlans?: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getPoint
    name: >-
      getPoint(project: string, planId: number, suiteId: number, pointIds:
      number, witFields?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: ''
        - id: suiteId
          type:
            - number
          description: ''
        - id: pointIds
          type:
            - number
          description: ''
        - id: witFields
          type:
            - string
          description: |+

          optional: true
      content: >-
        function getPoint(project: string, planId: number, suiteId: number,
        pointIds: number, witFields?: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getPoints
    name: >-
      getPoints(project: string, planId: number, suiteId: number, witFields?:
      string, configurationId?: string, testCaseId?: string, testPointIds?:
      string, includePointDetails?: boolean, skip?: number, top?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: ''
        - id: suiteId
          type:
            - number
          description: ''
        - id: witFields
          type:
            - string
          description: ''
          optional: true
        - id: configurationId
          type:
            - string
          description: ''
          optional: true
        - id: testCaseId
          type:
            - string
          description: ''
          optional: true
        - id: testPointIds
          type:
            - string
          description: ''
          optional: true
        - id: includePointDetails
          type:
            - boolean
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: |+

          optional: true
      content: >-
        function getPoints(project: string, planId: number, suiteId: number,
        witFields?: string, configurationId?: string, testCaseId?: string,
        testPointIds?: string, includePointDetails?: boolean, skip?: number,
        top?: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getPointsByQuery
    name: >-
      getPointsByQuery(query: TestPointsQuery, project: string, skip?: number,
      top?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: query
          type:
            - TestPointsQuery
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: |+

          optional: true
      content: >-
        function getPointsByQuery(query: TestPointsQuery, project: string,
        skip?: number, top?: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getResultParameters
    name: >-
      getResultParameters(project: string, runId: number, testCaseResultId:
      number, iterationId: number, paramName?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: testCaseResultId
          type:
            - number
          description: ''
        - id: iterationId
          type:
            - number
          description: ''
        - id: paramName
          type:
            - string
          description: |+

          optional: true
      content: >-
        function getResultParameters(project: string, runId: number,
        testCaseResultId: number, iterationId: number, paramName?: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getResultRetentionSettings
    name: 'getResultRetentionSettings(project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: 'function getResultRetentionSettings(project: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getSuiteEntries
    name: 'getSuiteEntries(project: string, suiteId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: suiteId
          type:
            - number
          description: |+

      content: 'function getSuiteEntries(project: string, suiteId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getSuitesByTestCaseId
    name: 'getSuitesByTestCaseId(testCaseId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: testCaseId
          type:
            - number
          description: |+

      content: 'function getSuitesByTestCaseId(testCaseId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestCaseById
    name: >-
      getTestCaseById(project: string, planId: number, suiteId: number,
      testCaseIds: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: ''
        - id: suiteId
          type:
            - number
          description: ''
        - id: testCaseIds
          type:
            - number
          description: |+

      content: >-
        function getTestCaseById(project: string, planId: number, suiteId:
        number, testCaseIds: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestCases
    name: 'getTestCases(project: string, planId: number, suiteId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: ''
        - id: suiteId
          type:
            - number
          description: |+

      content: 'function getTestCases(project: string, planId: number, suiteId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestConfigurationById
    name: 'getTestConfigurationById(project: string, testConfigurationId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: testConfigurationId
          type:
            - number
          description: |+

      content: >-
        function getTestConfigurationById(project: string, testConfigurationId:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestConfigurations
    name: >-
      getTestConfigurations(project: string, skip?: number, top?: number,
      continuationToken?: string, includeAllProperties?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
        - id: includeAllProperties
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getTestConfigurations(project: string, skip?: number, top?:
        number, continuationToken?: string, includeAllProperties?: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestIteration
    name: >-
      getTestIteration(project: string, runId: number, testCaseResultId: number,
      iterationId: number, includeActionResults?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: testCaseResultId
          type:
            - number
          description: ''
        - id: iterationId
          type:
            - number
          description: ''
        - id: includeActionResults
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getTestIteration(project: string, runId: number,
        testCaseResultId: number, iterationId: number, includeActionResults?:
        boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestIterations
    name: >-
      getTestIterations(project: string, runId: number, testCaseResultId:
      number, includeActionResults?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: testCaseResultId
          type:
            - number
          description: ''
        - id: includeActionResults
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getTestIterations(project: string, runId: number,
        testCaseResultId: number, includeActionResults?: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestResultAttachmentContent
    name: >-
      getTestResultAttachmentContent(project: string, runId: number,
      testCaseResultId: number, attachmentId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: testCaseResultId
          type:
            - number
          description: ''
        - id: attachmentId
          type:
            - number
          description: |+

      content: >-
        function getTestResultAttachmentContent(project: string, runId: number,
        testCaseResultId: number, attachmentId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestResultAttachments
    name: >-
      getTestResultAttachments(project: string, runId: number, testCaseResultId:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: testCaseResultId
          type:
            - number
          description: |+

      content: >-
        function getTestResultAttachments(project: string, runId: number,
        testCaseResultId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestResultAttachmentZip
    name: >-
      getTestResultAttachmentZip(project: string, runId: number,
      testCaseResultId: number, attachmentId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: testCaseResultId
          type:
            - number
          description: ''
        - id: attachmentId
          type:
            - number
          description: |+

      content: >-
        function getTestResultAttachmentZip(project: string, runId: number,
        testCaseResultId: number, attachmentId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestResultById
    name: >-
      getTestResultById(project: string, runId: number, testCaseResultId:
      number, detailsToInclude?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: testCaseResultId
          type:
            - number
          description: ''
        - id: detailsToInclude
          type:
            - function
          description: |+

          optional: true
      content: >-
        function getTestResultById(project: string, runId: number,
        testCaseResultId: number, detailsToInclude?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestResultDetailsForBuild
    name: >-
      getTestResultDetailsForBuild(project: string, buildId: number,
      publishContext?: string, groupBy?: string, filter?: string, orderby?:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: publishContext
          type:
            - string
          description: ''
          optional: true
        - id: groupBy
          type:
            - string
          description: ''
          optional: true
        - id: filter
          type:
            - string
          description: ''
          optional: true
        - id: orderby
          type:
            - string
          description: |+

          optional: true
      content: >-
        function getTestResultDetailsForBuild(project: string, buildId: number,
        publishContext?: string, groupBy?: string, filter?: string, orderby?:
        string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestResultDetailsForRelease
    name: >-
      getTestResultDetailsForRelease(project: string, releaseId: number,
      releaseEnvId: number, publishContext?: string, groupBy?: string, filter?:
      string, orderby?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
        - id: releaseEnvId
          type:
            - number
          description: ''
        - id: publishContext
          type:
            - string
          description: ''
          optional: true
        - id: groupBy
          type:
            - string
          description: ''
          optional: true
        - id: filter
          type:
            - string
          description: ''
          optional: true
        - id: orderby
          type:
            - string
          description: |+

          optional: true
      content: >-
        function getTestResultDetailsForRelease(project: string, releaseId:
        number, releaseEnvId: number, publishContext?: string, groupBy?: string,
        filter?: string, orderby?: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestResults
    name: >-
      getTestResults(project: string, runId: number, detailsToInclude?:
      function, skip?: number, top?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: detailsToInclude
          type:
            - function
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: |+

          optional: true
      content: >-
        function getTestResults(project: string, runId: number,
        detailsToInclude?: function, skip?: number, top?: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestResultsByQuery
    name: 'getTestResultsByQuery(query: TestResultsQuery, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: query
          type:
            - TestResultsQuery
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: 'function getTestResultsByQuery(query: TestResultsQuery, project: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestRunAttachmentContent
    name: >-
      getTestRunAttachmentContent(project: string, runId: number, attachmentId:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: attachmentId
          type:
            - number
          description: |+

      content: >-
        function getTestRunAttachmentContent(project: string, runId: number,
        attachmentId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestRunAttachments
    name: 'getTestRunAttachments(project: string, runId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: |+

      content: 'function getTestRunAttachments(project: string, runId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestRunAttachmentZip
    name: >-
      getTestRunAttachmentZip(project: string, runId: number, attachmentId:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: attachmentId
          type:
            - number
          description: |+

      content: >-
        function getTestRunAttachmentZip(project: string, runId: number,
        attachmentId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestRunById
    name: 'getTestRunById(project: string, runId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: |+

      content: 'function getTestRunById(project: string, runId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestRunCodeCoverage
    name: 'getTestRunCodeCoverage(project: string, runId: number, flags: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: ''
        - id: flags
          type:
            - number
          description: |+

      content: >-
        function getTestRunCodeCoverage(project: string, runId: number, flags:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestRunLogs
    name: 'getTestRunLogs(project: string, runId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: |+

      content: 'function getTestRunLogs(project: string, runId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestRuns
    name: >-
      getTestRuns(project: string, buildUri?: string, owner?: string, tmiRunId?:
      string, planId?: number, includeRunDetails?: boolean, automated?: boolean,
      skip?: number, top?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildUri
          type:
            - string
          description: ''
          optional: true
        - id: owner
          type:
            - string
          description: ''
          optional: true
        - id: tmiRunId
          type:
            - string
          description: ''
          optional: true
        - id: planId
          type:
            - number
          description: ''
          optional: true
        - id: includeRunDetails
          type:
            - boolean
          description: ''
          optional: true
        - id: automated
          type:
            - boolean
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: |+

          optional: true
      content: >-
        function getTestRuns(project: string, buildUri?: string, owner?: string,
        tmiRunId?: string, planId?: number, includeRunDetails?: boolean,
        automated?: boolean, skip?: number, top?: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestRunStatistics
    name: 'getTestRunStatistics(project: string, runId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: |+

      content: 'function getTestRunStatistics(project: string, runId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestSessions
    name: >-
      getTestSessions(teamContext: TeamContext, period?: number, allSessions?:
      boolean, includeAllProperties?: boolean, source?: function,
      includeOnlyCompletedSessions?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: period
          type:
            - number
          description: ''
          optional: true
        - id: allSessions
          type:
            - boolean
          description: ''
          optional: true
        - id: includeAllProperties
          type:
            - boolean
          description: ''
          optional: true
        - id: source
          type:
            - function
          description: ''
          optional: true
        - id: includeOnlyCompletedSessions
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getTestSessions(teamContext: TeamContext, period?: number,
        allSessions?: boolean, includeAllProperties?: boolean, source?:
        function, includeOnlyCompletedSessions?: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestSettingsById
    name: 'getTestSettingsById(project: string, testSettingsId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: testSettingsId
          type:
            - number
          description: |+

      content: 'function getTestSettingsById(project: string, testSettingsId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestSuiteById
    name: >-
      getTestSuiteById(project: string, planId: number, suiteId: number,
      includeChildSuites?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: ''
        - id: suiteId
          type:
            - number
          description: ''
        - id: includeChildSuites
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getTestSuiteById(project: string, planId: number, suiteId:
        number, includeChildSuites?: boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestSuitesForPlan
    name: >-
      getTestSuitesForPlan(project: string, planId: number, includeSuites?:
      boolean, skip?: number, top?: number, asTreeView?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: ''
        - id: includeSuites
          type:
            - boolean
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: asTreeView
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getTestSuitesForPlan(project: string, planId: number,
        includeSuites?: boolean, skip?: number, top?: number, asTreeView?:
        boolean)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestVariableById
    name: 'getTestVariableById(project: string, testVariableId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: testVariableId
          type:
            - number
          description: |+

      content: 'function getTestVariableById(project: string, testVariableId: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.getTestVariables
    name: 'getTestVariables(project: string, skip?: number, top?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: |+

          optional: true
      content: 'function getTestVariables(project: string, skip?: number, top?: number)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.publishTestResultDocument
    name: >-
      publishTestResultDocument(document: TestResultDocument, project: string,
      runId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: document
          type:
            - TestResultDocument
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: |+

      content: >-
        function publishTestResultDocument(document: TestResultDocument,
        project: string, runId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.queryCustomFields
    name: 'queryCustomFields(project: string, scopeFilter: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: scopeFilter
          type:
            - function
          description: |+

      content: 'function queryCustomFields(project: string, scopeFilter: function)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.queryResultTrendForBuild
    name: 'queryResultTrendForBuild(filter: TestResultTrendFilter, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: filter
          type:
            - TestResultTrendFilter
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: >-
        function queryResultTrendForBuild(filter: TestResultTrendFilter,
        project: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.queryResultTrendForRelease
    name: 'queryResultTrendForRelease(filter: TestResultTrendFilter, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: filter
          type:
            - TestResultTrendFilter
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: >-
        function queryResultTrendForRelease(filter: TestResultTrendFilter,
        project: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.queryTestMethodLinkedWorkItems
    name: 'queryTestMethodLinkedWorkItems(project: string, testName: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: testName
          type:
            - string
          description: |+

      content: >-
        function queryTestMethodLinkedWorkItems(project: string, testName:
        string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.queryTestResultHistory
    name: 'queryTestResultHistory(filter: ResultsFilter, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: filter
          type:
            - ResultsFilter
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: 'function queryTestResultHistory(filter: ResultsFilter, project: string)'
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.queryTestResultsReportForBuild
    name: >-
      queryTestResultsReportForBuild(project: string, buildId: number,
      publishContext?: string, includeFailureDetails?: boolean, buildToCompare?:
      BuildReference)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: publishContext
          type:
            - string
          description: ''
          optional: true
        - id: includeFailureDetails
          type:
            - boolean
          description: ''
          optional: true
        - id: buildToCompare
          type:
            - BuildReference
          description: |+

          optional: true
      content: >-
        function queryTestResultsReportForBuild(project: string, buildId:
        number, publishContext?: string, includeFailureDetails?: boolean,
        buildToCompare?: BuildReference)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.queryTestResultsReportForRelease
    name: >-
      queryTestResultsReportForRelease(project: string, releaseId: number,
      releaseEnvId: number, publishContext?: string, includeFailureDetails?:
      boolean, releaseToCompare?: ReleaseReference)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
        - id: releaseEnvId
          type:
            - number
          description: ''
        - id: publishContext
          type:
            - string
          description: ''
          optional: true
        - id: includeFailureDetails
          type:
            - boolean
          description: ''
          optional: true
        - id: releaseToCompare
          type:
            - ReleaseReference
          description: |+

          optional: true
      content: >-
        function queryTestResultsReportForRelease(project: string, releaseId:
        number, releaseEnvId: number, publishContext?: string,
        includeFailureDetails?: boolean, releaseToCompare?: ReleaseReference)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.queryTestResultsSummaryForReleases
    name: 'queryTestResultsSummaryForReleases(releases: function, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: releases
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: >-
        function queryTestResultsSummaryForReleases(releases: function, project:
        string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.queryTestResultWorkItems
    name: >-
      queryTestResultWorkItems(project: string, workItemCategory: string,
      automatedTestName?: string, testCaseId?: number, maxCompleteDate?: Date,
      days?: number, workItemCount?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: workItemCategory
          type:
            - string
          description: ''
        - id: automatedTestName
          type:
            - string
          description: ''
          optional: true
        - id: testCaseId
          type:
            - number
          description: ''
          optional: true
        - id: maxCompleteDate
          type:
            - Date
          description: ''
          optional: true
        - id: days
          type:
            - number
          description: ''
          optional: true
        - id: workItemCount
          type:
            - number
          description: |+

          optional: true
      content: >-
        function queryTestResultWorkItems(project: string, workItemCategory:
        string, automatedTestName?: string, testCaseId?: number,
        maxCompleteDate?: Date, days?: number, workItemCount?: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.queryTestSummaryByRequirement
    name: >-
      queryTestSummaryByRequirement(resultsContext: TestResultsContext, project:
      string, workItemIds?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: resultsContext
          type:
            - TestResultsContext
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: workItemIds
          type:
            - function
          description: |+

          optional: true
      content: >-
        function queryTestSummaryByRequirement(resultsContext:
        TestResultsContext, project: string, workItemIds?: function)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.removeTestCasesFromSuiteUrl
    name: >-
      removeTestCasesFromSuiteUrl(project: string, planId: number, suiteId:
      number, testCaseIds: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: ''
        - id: suiteId
          type:
            - number
          description: ''
        - id: testCaseIds
          type:
            - string
          description: |+

      content: >-
        function removeTestCasesFromSuiteUrl(project: string, planId: number,
        suiteId: number, testCaseIds: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.reorderSuiteEntries
    name: >-
      reorderSuiteEntries(suiteEntries: function, project: string, suiteId:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: suiteEntries
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: suiteId
          type:
            - number
          description: |+

      content: >-
        function reorderSuiteEntries(suiteEntries: function, project: string,
        suiteId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.constructor
    name: 'TestApi(baseUrl: string, handlers: function, options?: IRequestOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: baseUrl
          type:
            - string
          description: ''
        - id: handlers
          type:
            - function
          description: ''
        - id: options
          type:
            - IRequestOptions
          description: ''
          optional: true
      content: >-
        new TestApi(baseUrl: string, handlers: function, options?:
        IRequestOptions)
      return:
        type:
          - vso-node-api.TestApi
    type: constructor
  - uid: vso-node-api.TestApi.updateCodeCoverageSummary
    name: >-
      updateCodeCoverageSummary(coverageData: CodeCoverageData, project: string,
      buildId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: coverageData
          type:
            - CodeCoverageData
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: |+

      content: >-
        function updateCodeCoverageSummary(coverageData: CodeCoverageData,
        project: string, buildId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.updateResultRetentionSettings
    name: >-
      updateResultRetentionSettings(retentionSettings: ResultRetentionSettings,
      project: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: retentionSettings
          type:
            - ResultRetentionSettings
          description: ''
        - id: project
          type:
            - string
          description: |
            Project ID or project name
      content: >-
        function updateResultRetentionSettings(retentionSettings:
        ResultRetentionSettings, project: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.updateTestConfiguration
    name: >-
      updateTestConfiguration(testConfiguration: TestConfiguration, project:
      string, testConfigurationId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: testConfiguration
          type:
            - TestConfiguration
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: testConfigurationId
          type:
            - number
          description: |+

      content: >-
        function updateTestConfiguration(testConfiguration: TestConfiguration,
        project: string, testConfigurationId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.updateTestPlan
    name: >-
      updateTestPlan(planUpdateModel: PlanUpdateModel, project: string, planId:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: planUpdateModel
          type:
            - PlanUpdateModel
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: |+

      content: >-
        function updateTestPlan(planUpdateModel: PlanUpdateModel, project:
        string, planId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.updateTestPoints
    name: >-
      updateTestPoints(pointUpdateModel: PointUpdateModel, project: string,
      planId: number, suiteId: number, pointIds: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: pointUpdateModel
          type:
            - PointUpdateModel
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: ''
        - id: suiteId
          type:
            - number
          description: ''
        - id: pointIds
          type:
            - string
          description: |+

      content: >-
        function updateTestPoints(pointUpdateModel: PointUpdateModel, project:
        string, planId: number, suiteId: number, pointIds: string)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.updateTestResults
    name: 'updateTestResults(results: function, project: string, runId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: results
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: |+

      content: >-
        function updateTestResults(results: function, project: string, runId:
        number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.updateTestRun
    name: >-
      updateTestRun(runUpdateModel: RunUpdateModel, project: string, runId:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: runUpdateModel
          type:
            - RunUpdateModel
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: runId
          type:
            - number
          description: |+

      content: >-
        function updateTestRun(runUpdateModel: RunUpdateModel, project: string,
        runId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.updateTestSession
    name: 'updateTestSession(testSession: TestSession, teamContext: TeamContext)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: testSession
          type:
            - TestSession
          description: ''
        - id: teamContext
          type:
            - TeamContext
          description: |
            The team context for the operation
      content: >-
        function updateTestSession(testSession: TestSession, teamContext:
        TeamContext)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.updateTestSuite
    name: >-
      updateTestSuite(suiteUpdateModel: SuiteUpdateModel, project: string,
      planId: number, suiteId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: suiteUpdateModel
          type:
            - SuiteUpdateModel
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: planId
          type:
            - number
          description: ''
        - id: suiteId
          type:
            - number
          description: |+

      content: >-
        function updateTestSuite(suiteUpdateModel: SuiteUpdateModel, project:
        string, planId: number, suiteId: number)
      return:
        type:
          - Promise
    type: method
  - uid: vso-node-api.TestApi.updateTestVariable
    name: >-
      updateTestVariable(testVariable: TestVariable, project: string,
      testVariableId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: testVariable
          type:
            - TestVariable
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: testVariableId
          type:
            - number
          description: |+

      content: >-
        function updateTestVariable(testVariable: TestVariable, project: string,
        testVariableId: number)
      return:
        type:
          - Promise
    type: method
