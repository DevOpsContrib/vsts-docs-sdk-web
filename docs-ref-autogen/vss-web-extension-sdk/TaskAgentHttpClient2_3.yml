### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3
    name: TaskAgentHttpClient2_3
    fullName: TaskAgentHttpClient2_3
    children:
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.addAgent
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.addAgentPool
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.addAgentQueue
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.agentsApiVersion
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.authTokenManager
      - >-
        vss-web-extension-sdk.TaskAgentHttpClient2_3.azurermsubscriptionsApiVersion
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.createAgentSession
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.createServiceEndpoint
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.createTeamProject
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteAgent
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteAgentPool
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteAgentQueue
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteAgentRequest
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteAgentSession
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteMessage
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteServiceEndpoint
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteTaskDefinition
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.endpointApiVersion
      - >-
        vss-web-extension-sdk.TaskAgentHttpClient2_3.executeServiceEndpointRequest
      - >-
        vss-web-extension-sdk.TaskAgentHttpClient2_3.forceOptionsCallForAutoNegotiate
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgent
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentPool
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentPoolRoles
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentPools
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentQueue
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentQueueRoles
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentQueues
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentRequest
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentRequestsForAgent
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentRequestsForAgents
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentRequestsForPlan
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgents
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getAzureSubscriptions
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getMessage
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getPackage
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getPackages
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getPackageZip
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getServiceEndpointDetails
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getServiceEndpoints
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getServiceEndpointTypes
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getTaskContentZip
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getTaskDefinition
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.getTaskDefinitions
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.jobrequestsApiVersion
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.messagesApiVersion
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.poolrolesApiVersion
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.poolsApiVersion
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.queryEndpoint
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.queryServiceEndpoint
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.queueAgentRequest
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.queuerolesApiVersion
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.queuesApiVersion
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.refreshAgent
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.refreshAgents
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.replaceAgent
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.sendMessage
      - >-
        vss-web-extension-sdk.TaskAgentHttpClient2_3.serviceendpointtypesApiVersion
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.sessionsApiVersion
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.constructor
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.tasksApiVersion
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.updateAgent
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.updateAgentPool
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.updateAgentRequest
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.updateAgentUserCapabilities
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.updateServiceEndpoint
      - vss-web-extension-sdk.TaskAgentHttpClient2_3.usercapabilitiesApiVersion
      - vss-web-extension-sdk.TaskAgentHttpClient2_3._beginGetLocation
      - vss-web-extension-sdk.TaskAgentHttpClient2_3._beginRequest
      - vss-web-extension-sdk.TaskAgentHttpClient2_3._beginRequestWithAjaxResult
      - vss-web-extension-sdk.TaskAgentHttpClient2_3._issueAjaxRequest
      - vss-web-extension-sdk.TaskAgentHttpClient2_3._rootRequestPath
      - vss-web-extension-sdk.TaskAgentHttpClient2_3._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.addAgent
    name: 'addAgent(agent: TaskAgent, poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TaskAgent
          type:
            - TaskAgent
          description: ''
        - id: poolId
          type:
            - number
          description: ''
      content: 'function addAgent(agent: TaskAgent, poolId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.addAgentPool
    name: 'addAgentPool(pool: TaskAgentPool)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TaskAgentPool
          type:
            - TaskAgentPool
          description: ''
      content: 'function addAgentPool(pool: TaskAgentPool)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.addAgentQueue
    name: 'addAgentQueue(queue: TaskAgentQueue, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TaskAgentQueue
          type:
            - TaskAgentQueue
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function addAgentQueue(queue: TaskAgentQueue, project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.agentsApiVersion
    name: agentsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.authTokenManager
    name: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: >-
      vss-web-extension-sdk.TaskAgentHttpClient2_3.azurermsubscriptionsApiVersion
    name: azurermsubscriptionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.createAgentSession
    name: 'createAgentSession(session: TaskAgentSession, poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TaskAgentSession
          type:
            - TaskAgentSession
          description: ''
        - id: poolId
          type:
            - number
          description: ''
      content: 'function createAgentSession(session: TaskAgentSession, poolId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.createServiceEndpoint
    name: 'createServiceEndpoint(endpoint: ServiceEndpoint, scopeIdentifier: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.ServiceEndpoint
          type:
            - ServiceEndpoint
          description: ''
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
      content: >-
        function createServiceEndpoint(endpoint: ServiceEndpoint,
        scopeIdentifier: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.createTeamProject
    name: 'createTeamProject(project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function createTeamProject(project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteAgent
    name: 'deleteAgent(poolId: number, agentId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
      content: 'function deleteAgent(poolId: number, agentId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteAgentPool
    name: 'deleteAgentPool(poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
      content: 'function deleteAgentPool(poolId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteAgentQueue
    name: 'deleteAgentQueue(queueId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: queueId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function deleteAgentQueue(queueId: number, project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteAgentRequest
    name: >-
      deleteAgentRequest(poolId: number, requestId: number, lockToken: string,
      result?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: requestId
          type:
            - number
          description: ''
        - id: lockToken
          type:
            - string
          description: ''
        - id: result
          type:
            - function
          description: ''
          optional: true
      content: >-
        function deleteAgentRequest(poolId: number, requestId: number,
        lockToken: string, result?: function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteAgentSession
    name: 'deleteAgentSession(poolId: number, sessionId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: sessionId
          type:
            - string
          description: ''
      content: 'function deleteAgentSession(poolId: number, sessionId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteMessage
    name: 'deleteMessage(poolId: number, messageId: number, sessionId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: messageId
          type:
            - number
          description: ''
        - id: sessionId
          type:
            - string
          description: ''
      content: >-
        function deleteMessage(poolId: number, messageId: number, sessionId:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteServiceEndpoint
    name: 'deleteServiceEndpoint(scopeIdentifier: string, endpointId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: endpointId
          type:
            - string
          description: ''
      content: >-
        function deleteServiceEndpoint(scopeIdentifier: string, endpointId:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.deleteTaskDefinition
    name: 'deleteTaskDefinition(taskId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskId
          type:
            - string
          description: ''
      content: 'function deleteTaskDefinition(taskId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.endpointApiVersion
    name: endpointApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.executeServiceEndpointRequest
    name: >-
      executeServiceEndpointRequest(serviceEndpointRequest:
      ServiceEndpointRequest, scopeIdentifier: string, endpointId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.ServiceEndpointRequest
          type:
            - ServiceEndpointRequest
          description: ''
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: endpointId
          type:
            - string
          description: ''
      content: >-
        function executeServiceEndpointRequest(serviceEndpointRequest:
        ServiceEndpointRequest, scopeIdentifier: string, endpointId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TaskAgentHttpClient2_3.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgent
    name: >-
      getAgent(poolId: number, agentId: number, includeCapabilities?: boolean,
      includeAssignedRequest?: boolean, propertyFilters?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
        - id: includeCapabilities
          type:
            - boolean
          description: ''
          optional: true
        - id: includeAssignedRequest
          type:
            - boolean
          description: ''
          optional: true
        - id: propertyFilters
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getAgent(poolId: number, agentId: number, includeCapabilities?:
        boolean, includeAssignedRequest?: boolean, propertyFilters?: function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentPool
    name: >-
      getAgentPool(poolId: number, properties?: function, actionFilter?:
      function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: properties
          type:
            - function
          description: ''
          optional: true
        - id: actionFilter
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getAgentPool(poolId: number, properties?: function,
        actionFilter?: function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentPoolRoles
    name: 'getAgentPoolRoles(poolId?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
          optional: true
      content: 'function getAgentPoolRoles(poolId?: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentPools
    name: >-
      getAgentPools(poolName?: string, properties?: function, poolType?:
      function, actionFilter?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolName
          type:
            - string
          description: ''
          optional: true
        - id: properties
          type:
            - function
          description: ''
          optional: true
        - id: poolType
          type:
            - function
          description: ''
          optional: true
        - id: actionFilter
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getAgentPools(poolName?: string, properties?: function,
        poolType?: function, actionFilter?: function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentQueue
    name: 'getAgentQueue(queueId: number, project?: string, actionFilter?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: queueId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: actionFilter
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getAgentQueue(queueId: number, project?: string, actionFilter?:
        function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentQueueRoles
    name: 'getAgentQueueRoles(queueId?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: queueId
          type:
            - number
          description: ''
          optional: true
      content: 'function getAgentQueueRoles(queueId?: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentQueues
    name: >-
      getAgentQueues(project?: string, queueName?: string, actionFilter?:
      function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: queueName
          type:
            - string
          description: ''
          optional: true
        - id: actionFilter
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getAgentQueues(project?: string, queueName?: string,
        actionFilter?: function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentRequest
    name: 'getAgentRequest(poolId: number, requestId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: requestId
          type:
            - number
          description: ''
      content: 'function getAgentRequest(poolId: number, requestId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentRequestsForAgent
    name: >-
      getAgentRequestsForAgent(poolId: number, agentId: number,
      completedRequestCount?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
        - id: completedRequestCount
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getAgentRequestsForAgent(poolId: number, agentId: number,
        completedRequestCount?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentRequestsForAgents
    name: >-
      getAgentRequestsForAgents(poolId: number, agentIds?: function,
      completedRequestCount?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentIds
          type:
            - function
          description: ''
          optional: true
        - id: completedRequestCount
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getAgentRequestsForAgents(poolId: number, agentIds?: function,
        completedRequestCount?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgentRequestsForPlan
    name: 'getAgentRequestsForPlan(poolId: number, planId: string, jobId?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: planId
          type:
            - string
          description: ''
        - id: jobId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getAgentRequestsForPlan(poolId: number, planId: string, jobId?:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getAgents
    name: >-
      getAgents(poolId: number, agentName?: string, includeCapabilities?:
      boolean, includeAssignedRequest?: boolean, propertyFilters?: function,
      demands?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentName
          type:
            - string
          description: ''
          optional: true
        - id: includeCapabilities
          type:
            - boolean
          description: ''
          optional: true
        - id: includeAssignedRequest
          type:
            - boolean
          description: ''
          optional: true
        - id: propertyFilters
          type:
            - function
          description: ''
          optional: true
        - id: demands
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getAgents(poolId: number, agentName?: string,
        includeCapabilities?: boolean, includeAssignedRequest?: boolean,
        propertyFilters?: function, demands?: function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getAzureSubscriptions
    name: getAzureSubscriptions()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getAzureSubscriptions()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getMessage
    name: 'getMessage(poolId: number, sessionId: string, lastMessageId?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: sessionId
          type:
            - string
          description: ''
        - id: lastMessageId
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getMessage(poolId: number, sessionId: string, lastMessageId?:
        number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getPackage
    name: 'getPackage(packageType: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      This method can return packages/{packageType} -- package stream OR
      TaskPackageMetadata if requested for json
    syntax:
      parameters:
        - id: packageType
          type:
            - string
          description: ''
      content: 'function getPackage(packageType: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getPackages
    name: getPackages()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getPackages()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getPackageZip
    name: 'getPackageZip(packageType: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      This method can return packages/{packageType} -- package stream OR
      TaskPackageMetadata if requested for json
    syntax:
      parameters:
        - id: packageType
          type:
            - string
          description: ''
      content: 'function getPackageZip(packageType: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getServiceEndpointDetails
    name: 'getServiceEndpointDetails(scopeIdentifier: string, endpointId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: endpointId
          type:
            - string
          description: ''
      content: >-
        function getServiceEndpointDetails(scopeIdentifier: string, endpointId:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getServiceEndpoints
    name: >-
      getServiceEndpoints(scopeIdentifier: string, type?: string, authSchemes?:
      function, endpointIds?: function, includeFailed?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: type
          type:
            - string
          description: ''
          optional: true
        - id: authSchemes
          type:
            - function
          description: ''
          optional: true
        - id: endpointIds
          type:
            - function
          description: ''
          optional: true
        - id: includeFailed
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getServiceEndpoints(scopeIdentifier: string, type?: string,
        authSchemes?: function, endpointIds?: function, includeFailed?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getServiceEndpointTypes
    name: 'getServiceEndpointTypes(type?: string, scheme?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - string
          description: ''
          optional: true
        - id: scheme
          type:
            - string
          description: ''
          optional: true
      content: 'function getServiceEndpointTypes(type?: string, scheme?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getTaskContentZip
    name: >-
      getTaskContentZip(taskId: string, versionString: string, visibility?:
      function, scopeLocal?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskId
          type:
            - string
          description: ''
        - id: versionString
          type:
            - string
          description: ''
        - id: visibility
          type:
            - function
          description: ''
          optional: true
        - id: scopeLocal
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getTaskContentZip(taskId: string, versionString: string,
        visibility?: function, scopeLocal?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getTaskDefinition
    name: >-
      getTaskDefinition(taskId: string, versionString: string, visibility?:
      function, scopeLocal?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskId
          type:
            - string
          description: ''
        - id: versionString
          type:
            - string
          description: ''
        - id: visibility
          type:
            - function
          description: ''
          optional: true
        - id: scopeLocal
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getTaskDefinition(taskId: string, versionString: string,
        visibility?: function, scopeLocal?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.getTaskDefinitions
    name: >-
      getTaskDefinitions(taskId?: string, visibility?: function, scopeLocal?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskId
          type:
            - string
          description: ''
          optional: true
        - id: visibility
          type:
            - function
          description: ''
          optional: true
        - id: scopeLocal
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getTaskDefinitions(taskId?: string, visibility?: function,
        scopeLocal?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.jobrequestsApiVersion
    name: jobrequestsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.messagesApiVersion
    name: messagesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.poolrolesApiVersion
    name: poolrolesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.poolsApiVersion
    name: poolsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.queryEndpoint
    name: 'queryEndpoint(endpoint: TaskDefinitionEndpoint)'
    children: []
    langs:
      - typeScript
    summary: >-
      Proxy for a GET request defined by an 'endpoint'. The request is
      authorized using a service connection. The response is filtered using an
      XPath/Json based selector.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TaskDefinitionEndpoint
          type:
            - TaskDefinitionEndpoint
          description: Describes the URL to fetch.
      content: 'function queryEndpoint(endpoint: TaskDefinitionEndpoint)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.queryServiceEndpoint
    name: 'queryServiceEndpoint(binding: DataSourceBinding, scopeIdentifier: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Obsolete - Use ExecuteServiceEndpointRequest API Instead] Proxy for a GET
      request defined by an service endpoint. The request is authorized using a
      data source in service endpoint. The response is filtered using an
      XPath/Json based selector.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.DataSourceBinding
          type:
            - DataSourceBinding
          description: Describes the data source to fetch.
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
      content: >-
        function queryServiceEndpoint(binding: DataSourceBinding,
        scopeIdentifier: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.queueAgentRequest
    name: 'queueAgentRequest(request: TaskAgentJobRequest, poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TaskAgentJobRequest
          type:
            - TaskAgentJobRequest
          description: ''
        - id: poolId
          type:
            - number
          description: ''
      content: 'function queueAgentRequest(request: TaskAgentJobRequest, poolId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.queuerolesApiVersion
    name: queuerolesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.queuesApiVersion
    name: queuesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.refreshAgent
    name: 'refreshAgent(poolId: number, agentId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
      content: 'function refreshAgent(poolId: number, agentId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.refreshAgents
    name: 'refreshAgents(poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
      content: 'function refreshAgents(poolId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.replaceAgent
    name: 'replaceAgent(agent: TaskAgent, poolId: number, agentId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TaskAgent
          type:
            - TaskAgent
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
      content: 'function replaceAgent(agent: TaskAgent, poolId: number, agentId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.sendMessage
    name: 'sendMessage(message: TaskAgentMessage, poolId: number, requestId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TaskAgentMessage
          type:
            - TaskAgentMessage
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: requestId
          type:
            - number
          description: ''
      content: >-
        function sendMessage(message: TaskAgentMessage, poolId: number,
        requestId: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TaskAgentHttpClient2_3.serviceendpointtypesApiVersion
    name: serviceendpointtypesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.sessionsApiVersion
    name: sessionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.constructor
    name: >-
      TaskAgentHttpClient2_3(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: vss-web-extension-sdk.IVssHttpClientOptions
          type:
            - IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new TaskAgentHttpClient2_3(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      return:
        type:
          - vss-web-extension-sdk.TaskAgentHttpClient2_3
    type: constructor
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.tasksApiVersion
    name: tasksApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.updateAgent
    name: 'updateAgent(agent: TaskAgent, poolId: number, agentId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TaskAgent
          type:
            - TaskAgent
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
      content: 'function updateAgent(agent: TaskAgent, poolId: number, agentId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.updateAgentPool
    name: 'updateAgentPool(pool: TaskAgentPool, poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TaskAgentPool
          type:
            - TaskAgentPool
          description: ''
        - id: poolId
          type:
            - number
          description: ''
      content: 'function updateAgentPool(pool: TaskAgentPool, poolId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.updateAgentRequest
    name: >-
      updateAgentRequest(request: TaskAgentJobRequest, poolId: number,
      requestId: number, lockToken: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TaskAgentJobRequest
          type:
            - TaskAgentJobRequest
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: requestId
          type:
            - number
          description: ''
        - id: lockToken
          type:
            - string
          description: ''
      content: >-
        function updateAgentRequest(request: TaskAgentJobRequest, poolId:
        number, requestId: number, lockToken: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.updateAgentUserCapabilities
    name: >-
      updateAgentUserCapabilities(userCapabilities: function, poolId: number,
      agentId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: userCapabilities
          type:
            - function
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
      content: >-
        function updateAgentUserCapabilities(userCapabilities: function, poolId:
        number, agentId: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.updateServiceEndpoint
    name: >-
      updateServiceEndpoint(endpoint: ServiceEndpoint, scopeIdentifier: string,
      endpointId: string, operation?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.ServiceEndpoint
          type:
            - ServiceEndpoint
          description: ''
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: endpointId
          type:
            - string
          description: ''
        - id: operation
          type:
            - string
          description: ''
          optional: true
      content: >-
        function updateServiceEndpoint(endpoint: ServiceEndpoint,
        scopeIdentifier: string, endpointId: string, operation?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3.usercapabilitiesApiVersion
    name: usercapabilitiesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vss-web-extension-sdk.IVssAjaxOptions
          type:
            - IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3._rootRequestPath
    name: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskAgentHttpClient2_3._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.IPromise
          type:
            - IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
