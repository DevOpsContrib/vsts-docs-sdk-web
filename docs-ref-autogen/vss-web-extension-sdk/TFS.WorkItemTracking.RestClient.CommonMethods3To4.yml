### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4
    name: CommonMethods3To4
    fullName: CommonMethods3To4
    children:
      - >-
        vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.constructor
      - >-
        vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.createTemplate
      - >-
        vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.deleteTemplate
      - >-
        vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.getComment
      - >-
        vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.getComments
      - >-
        vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.getTemplate
      - >-
        vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.getTemplates
      - >-
        vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.replaceTemplate
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - >-
        @vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods2_2To4
    package: vss-web-extension-sdk
    module: TFS/WorkItemTracking/RestClient
  - uid: >-
      vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.constructor
    name: >-
      CommonMethods3To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new CommonMethods3To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.createTemplate
    name: 'createTemplate(template: WorkItemTemplate, project: string, team: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Creates a template'
    syntax:
      parameters:
        - id: template
          type:
            - >-
              @vss-web-extension-sdk.TFS.WorkItemTracking.Contracts.WorkItemTemplate
          description: Template contents
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: team
          type:
            - string
          description: Team ID or team name
      content: >-
        function createTemplate(template: WorkItemTemplate, project: string,
        team: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.WorkItemTracking.Contracts.WorkItemTemplate>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.deleteTemplate
    name: 'deleteTemplate(project: string, team: string, templateId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Deletes the template with given id'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: team
          type:
            - string
          description: Team ID or team name
        - id: templateId
          type:
            - string
          description: Template id
      content: >-
        function deleteTemplate(project: string, team: string, templateId:
        string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.getComment
    name: 'getComment(id: number, revision: number)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Returns comment for a work item at the specified revision'
    syntax:
      parameters:
        - id: id
          type:
            - number
          description: ''
        - id: revision
          type:
            - number
          description: ''
      content: 'function getComment(id: number, revision: number)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.WorkItemTracking.Contracts.WorkItemComment>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.getComments
    name: >-
      getComments(id: number, fromRevision?: number, top?: number, order?:
      CommentSortOrder)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns specified number of comments for a work item from
      the specified revision
    syntax:
      parameters:
        - id: id
          type:
            - number
          description: Work item id
        - id: fromRevision
          type:
            - number
          description: Revision from which comments are to be fetched
          optional: true
        - id: top
          type:
            - number
          description: The number of comments to return
          optional: true
        - id: order
          type:
            - CommentSortOrder
          description: Ascending or descending by revision id
          optional: true
      content: >-
        function getComments(id: number, fromRevision?: number, top?: number,
        order?: CommentSortOrder)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.WorkItemTracking.Contracts.WorkItemComments>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.getTemplate
    name: 'getTemplate(project: string, team: string, templateId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets the template with specified id'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: team
          type:
            - string
          description: Team ID or team name
        - id: templateId
          type:
            - string
          description: Template Id
      content: 'function getTemplate(project: string, team: string, templateId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.WorkItemTracking.Contracts.WorkItemTemplate>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.getTemplates
    name: 'getTemplates(project: string, team: string, workitemtypename?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets template'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: team
          type:
            - string
          description: Team ID or team name
        - id: workitemtypename
          type:
            - string
          description: 'Optional, When specified returns templates for given Work item type.'
          optional: true
      content: >-
        function getTemplates(project: string, team: string, workitemtypename?:
        string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.WorkItemTracking.Contracts.WorkItemTemplateReference[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.WorkItemTracking.RestClient.CommonMethods3To4.replaceTemplate
    name: >-
      replaceTemplate(templateContent: WorkItemTemplate, project: string, team:
      string, templateId: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Replace template contents'
    syntax:
      parameters:
        - id: templateContent
          type:
            - >-
              @vss-web-extension-sdk.TFS.WorkItemTracking.Contracts.WorkItemTemplate
          description: Template contents to replace with
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: team
          type:
            - string
          description: Team ID or team name
        - id: templateId
          type:
            - string
          description: Template id
      content: >-
        function replaceTemplate(templateContent: WorkItemTemplate, project:
        string, team: string, templateId: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.WorkItemTracking.Contracts.WorkItemTemplate>
    type: method
