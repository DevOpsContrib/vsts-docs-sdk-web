### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1
    name: ProfileHttpClient2_1
    fullName: ProfileHttpClient2_1
    children:
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.authTokenManager
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.createProfile
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.deleteProfileAttribute
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.forceOptionsCallForAutoNegotiate
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.geoRegionApiVersion
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.getAvatar
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.getAvatarPreview
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.getGeoRegion
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.getProfile
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.getProfileAttribute
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.getProfileAttributes
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.getRegions
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.constructor
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.profilesApiVersion
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.regionsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.resetAvatar
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.serviceInstanceId
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.setAvatar
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.setProfileAttribute
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.setProfileAttributes
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.updateProfile
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1._beginGetLocation
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1._beginRequest
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1._beginRequestWithAjaxResult
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1._issueAjaxRequest
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1._rootRequestPath
      - >-
        vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS.Profile.RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.authTokenManager
    name: authTokenManager
    fullName: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.createProfile
    name: >-
      createProfile(createProfileContext: CreateProfileContext, autoCreate?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Create profile
    syntax:
      parameters:
        - id: createProfileContext
          type:
            - vss-web-extension-sdk.VSS.Profile.Contracts.CreateProfileContext
          description: Context for profile creation
        - id: autoCreate
          type:
            - boolean
          description: Create profile automatically
          optional: true
      content: >-
        function createProfile(createProfileContext: CreateProfileContext,
        autoCreate?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.deleteProfileAttribute
    name: 'deleteProfileAttribute(id: string, descriptor: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: ''
        - id: descriptor
          type:
            - string
          description: ''
      content: 'function deleteProfileAttribute(id: string, descriptor: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    fullName: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.geoRegionApiVersion
    name: geoRegionApiVersion
    fullName: geoRegionApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.getAvatar
    name: 'getAvatar(id: string, size?: string, format?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: ''
        - id: size
          type:
            - string
          description: ''
          optional: true
        - id: format
          type:
            - string
          description: ''
          optional: true
      content: 'function getAvatar(id: string, size?: string, format?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.getAvatarPreview
    name: >-
      getAvatarPreview(container: any, id: string, size?: string, format?:
      string, displayName?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: container
          type:
            - any
          description: ''
        - id: id
          type:
            - string
          description: ''
        - id: size
          type:
            - string
          description: ''
          optional: true
        - id: format
          type:
            - string
          description: ''
          optional: true
        - id: displayName
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getAvatarPreview(container: any, id: string, size?: string,
        format?: string, displayName?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.getGeoRegion
    name: 'getGeoRegion(ipaddress: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Lookup up country/region based on provided IPv4, null if using the remote
      IPv4 address.
    syntax:
      parameters:
        - id: ipaddress
          type:
            - string
          description: >-
            IPv4 address to be used for reverse lookup, null if using
            RemoteIPAddress in request context
      content: 'function getGeoRegion(ipaddress: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.getProfile
    name: >-
      getProfile(id: string, details?: boolean, withAttributes?: boolean,
      partition?: string, coreAttributes?: string, forceRefresh?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: ''
        - id: details
          type:
            - boolean
          description: ''
          optional: true
        - id: withAttributes
          type:
            - boolean
          description: ''
          optional: true
        - id: partition
          type:
            - string
          description: ''
          optional: true
        - id: coreAttributes
          type:
            - string
          description: ''
          optional: true
        - id: forceRefresh
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getProfile(id: string, details?: boolean, withAttributes?:
        boolean, partition?: string, coreAttributes?: string, forceRefresh?:
        boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.getProfileAttribute
    name: 'getProfileAttribute(id: string, descriptor: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: ''
        - id: descriptor
          type:
            - string
          description: ''
      content: 'function getProfileAttribute(id: string, descriptor: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.getProfileAttributes
    name: >-
      getProfileAttributes(id: string, partition: string, modifiedSince?:
      string, modifiedAfterRevision?: string, withCoreAttributes?: boolean,
      coreAttributes?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: ''
        - id: partition
          type:
            - string
          description: ''
        - id: modifiedSince
          type:
            - string
          description: ''
          optional: true
        - id: modifiedAfterRevision
          type:
            - string
          description: ''
          optional: true
        - id: withCoreAttributes
          type:
            - boolean
          description: ''
          optional: true
        - id: coreAttributes
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getProfileAttributes(id: string, partition: string,
        modifiedSince?: string, modifiedAfterRevision?: string,
        withCoreAttributes?: boolean, coreAttributes?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.getRegions
    name: getRegions()
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Get available country/regions for profile with contact
      consent requirements
    syntax:
      parameters: []
      content: function getRegions()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.constructor
    name: >-
      ProfileHttpClient2_1(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new ProfileHttpClient2_1(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.profilesApiVersion
    name: profilesApiVersion
    fullName: profilesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.regionsApiVersion
    name: regionsApiVersion
    fullName: regionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.resetAvatar
    name: 'resetAvatar(id: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: ''
      content: 'function resetAvatar(id: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.setAvatar
    name: 'setAvatar(container: any, id: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: container
          type:
            - any
          description: ''
        - id: id
          type:
            - string
          description: ''
      content: 'function setAvatar(container: any, id: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.setProfileAttribute
    name: 'setProfileAttribute(container: any, id: string, descriptor: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: container
          type:
            - any
          description: ''
        - id: id
          type:
            - string
          description: ''
        - id: descriptor
          type:
            - string
          description: ''
      content: >-
        function setProfileAttribute(container: any, id: string, descriptor:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.setProfileAttributes
    name: >-
      setProfileAttributes(attributesCollection: VssJsonCollectionWrapperV, id:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: attributesCollection
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.Contracts.VssJsonCollectionWrapperV
          description: ''
        - id: id
          type:
            - string
          description: ''
      content: >-
        function setProfileAttributes(attributesCollection:
        VssJsonCollectionWrapperV, id: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1.updateProfile
    name: 'updateProfile(profile: Profile, id: string)'
    children: []
    langs:
      - typeScript
    summary: Update profile
    syntax:
      parameters:
        - id: profile
          type:
            - vss-web-extension-sdk.VSS.Profile.Contracts.Profile
          description: Update profile
        - id: id
          type:
            - string
          description: Profile ID
      content: 'function updateProfile(profile: Profile, id: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vssRequestOptions
          type:
            - vss-web-extension-sdk.IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1._rootRequestPath
    name: _rootRequestPath
    fullName: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Profile.RestClient.ProfileHttpClient2_1._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: promise
          type:
            - vss-web-extension-sdk.IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
