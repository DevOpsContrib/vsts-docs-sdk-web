### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.XDM.XDMChannel
    name: XDMChannel
    fullName: XDMChannel
    children:
      - vss-web-extension-sdk.XDM.XDMChannel.error
      - vss-web-extension-sdk.XDM.XDMChannel.getObjectRegistry
      - vss-web-extension-sdk.XDM.XDMChannel.getRemoteObjectProxy
      - vss-web-extension-sdk.XDM.XDMChannel.invokeRemoteMethod
      - vss-web-extension-sdk.XDM.XDMChannel.onMessage
      - vss-web-extension-sdk.XDM.XDMChannel.owns
      - vss-web-extension-sdk.XDM.XDMChannel.constructor
    langs:
      - typeScript
    type: class
    summary: |-
      Represents a channel of communication between frames\document
      Stays "alive" across multiple funtion\method calls
    source:
      path: vss.d.ts
      startLine: 2946
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: XDM
  - uid: vss-web-extension-sdk.XDM.XDMChannel.error
    name: 'error(data: any, errorObj: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function error(data: any, errorObj: any)'
      parameters:
        - id: data
          type:
            - any
          description: ''
        - id: errorObj
          type:
            - any
          description: ''
    type: method
  - uid: vss-web-extension-sdk.XDM.XDMChannel.getObjectRegistry
    name: getObjectRegistry()
    children: []
    langs:
      - typeScript
    summary: |-
      Get the object registry to handle messages from this specific channel.
      Upon receiving a message, this channel registry will be used first, then
      the global registry will be used if no handler is found here.
    syntax:
      content: function getObjectRegistry()
      parameters: []
      return:
        type:
          - '@vss-web-extension-sdk.IXDMObjectRegistry'
    type: method
  - uid: vss-web-extension-sdk.XDM.XDMChannel.getRemoteObjectProxy
    name: 'getRemoteObjectProxy<T>(instanceId: string, contextData?: Object)'
    children: []
    langs:
      - typeScript
    summary: >-
      Get a proxied object that represents the object registered with the given
      instance id on the remote side of this channel.
    syntax:
      content: >-
        function getRemoteObjectProxy<T>(instanceId: string, contextData?:
        Object)
      parameters:
        - id: instanceId
          type:
            - string
          description: unique id of the registered object
        - id: contextData
          type:
            - Object
          description: >
            Optional context data to pass to a registered object's factory
            method
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<T>'
    type: method
  - uid: vss-web-extension-sdk.XDM.XDMChannel.invokeRemoteMethod
    name: >-
      invokeRemoteMethod<T>(methodName: string, instanceId: string, params?:
      any[], instanceContextData?: Object, serializationSettings?:
      ISerializationSettings)
    children: []
    langs:
      - typeScript
    summary: >-
      Invoke a method via RPC. Lookup the registered object on the remote end of
      the channel and invoke the specified method.
    syntax:
      content: >-
        function invokeRemoteMethod<T>(methodName: string, instanceId: string,
        params?: any[], instanceContextData?: Object, serializationSettings?:
        ISerializationSettings)
      parameters:
        - id: methodName
          type:
            - string
          description: ''
        - id: instanceId
          type:
            - string
          description: unique id of the registered object
        - id: params
          type:
            - 'any[]'
          description: Arguments to the method to invoke
          optional: true
        - id: instanceContextData
          type:
            - Object
          description: >-
            Optional context data to pass to a registered object's factory
            method
          optional: true
        - id: serializationSettings
          type:
            - '@vss-web-extension-sdk.XDM.ISerializationSettings'
          description: |
            Optional serialization settings
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<T>'
    type: method
  - uid: vss-web-extension-sdk.XDM.XDMChannel.onMessage
    name: 'onMessage(data: any, origin: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Handle a received message on this channel. Dispatch to the appropriate
      object found via object registry
    syntax:
      content: 'function onMessage(data: any, origin: string)'
      parameters:
        - id: data
          type:
            - any
          description: Message data
        - id: origin
          type:
            - string
          description: Origin of the frame that sent the message
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.XDM.XDMChannel.owns
    name: 'owns(source: Window, origin: string, data: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function owns(source: Window, origin: string, data: any)'
      parameters:
        - id: source
          type:
            - Window
          description: ''
        - id: origin
          type:
            - string
          description: ''
        - id: data
          type:
            - any
          description: ''
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.XDM.XDMChannel.constructor
    name: 'XDMChannel(postToWindow: Window, targetOrigin?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new XDMChannel(postToWindow: Window, targetOrigin?: string)'
      parameters:
        - id: postToWindow
          type:
            - Window
          description: ''
        - id: targetOrigin
          type:
            - string
          description: ''
          optional: true
    type: constructor
