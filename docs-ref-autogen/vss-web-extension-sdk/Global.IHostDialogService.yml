### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.IHostDialogService
    name: IHostDialogService
    fullName: IHostDialogService
    children:
      - vss-web-extension-sdk.IHostDialogService.buttons
      - vss-web-extension-sdk.IHostDialogService.openDialog
      - vss-web-extension-sdk.IHostDialogService.openMessageDialog
    langs:
      - typeScript
    type: interface
    summary: Service which manages showing dialogs in the parent frame
    source:
      path: vss.d.ts
      startLine: 664
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: Global
  - uid: vss-web-extension-sdk.IHostDialogService.buttons
    name: buttons
    fullName: buttons
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - function
  - uid: vss-web-extension-sdk.IHostDialogService.openDialog
    name: >-
      openDialog(contributionId: string, dialogOptions: IHostDialogOptions,
      contributionConfig?: Object, postContent?: Object)
    children: []
    langs:
      - typeScript
    summary: >-
      Open a modal dialog in the host frame which will get its content from a
      contributed control.
    syntax:
      parameters:
        - id: contributionId
          type:
            - string
          description: The id of the control contribution to host in the dialog
        - id: dialogOptions
          type:
            - '@vss-web-extension-sdk.IHostDialogOptions'
          description: options.title - title of dialog
        - id: contributionConfig
          type:
            - Object
          description: Initial configuration to pass to the contribution control.
          optional: true
        - id: postContent
          type:
            - Object
          description: >
            Optional data to post to the contribution endpoint. If not
            specified, a GET request will be performed.
          optional: true
      content: >-
        function openDialog(contributionId: string, dialogOptions:
        IHostDialogOptions, contributionConfig?: Object, postContent?: Object)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.IExternalDialog>
    type: method
  - uid: vss-web-extension-sdk.IHostDialogService.openMessageDialog
    name: 'openMessageDialog(message: string, options?: IOpenMessageDialogOptions)'
    children: []
    langs:
      - typeScript
    summary: >-
      Open a modal dialog in the host frame which will display the supplied
      message.
    syntax:
      parameters:
        - id: message
          type:
            - string
          description: the message to display in the dialog.
        - id: options
          type:
            - '@vss-web-extension-sdk.IOpenMessageDialogOptions'
          description: ''
          optional: true
      content: >-
        function openMessageDialog(message: string, options?:
        IOpenMessageDialogOptions)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.IMessageDialogResult>
    type: method
