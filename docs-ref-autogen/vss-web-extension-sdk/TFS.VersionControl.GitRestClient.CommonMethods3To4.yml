### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4
    name: CommonMethods3To4
    fullName: CommonMethods3To4
    children:
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.constructor
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createCherryPick
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createComment
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createFavorite
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createImportRequest
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createPullRequestIterationStatus
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createPullRequestStatus
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createRevert
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createThread
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.deleteComment
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.deleteRefFavorite
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getCherryPick
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getCherryPickForRefName
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getComment
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getComments
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getFilePaths
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getImportRequest
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestById
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestConflict
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestConflicts
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestIteration
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestIterationChanges
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestIterationCommits
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestIterations
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestIterationStatus
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestIterationStatuses
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestQuery
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestStatus
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestStatuses
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestThread
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getRefFavorite
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getRefFavorites
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getRevert
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getRevertForRefName
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getStats
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getTemplateList
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getThreads
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.queryImportRequests
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.updateComment
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.updateImportRequest
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.updatePullRequestConflict
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.updateThread
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.validateRemoteRepository
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - >-
        @vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods2_2To4
    source:
      path: tfs.d.ts
      startLine: 16599
      remote:
        path: typings\tfs.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: TFS/VersionControl/GitRestClient
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.constructor
    name: >-
      CommonMethods3To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new CommonMethods3To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createCherryPick
    name: >-
      createCherryPick(cherryPickToCreate: GitAsyncRefOperationParameters,
      project: string, repositoryId: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: cherryPickToCreate
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.GitAsyncRefOperationParameters
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repositoryId
          type:
            - string
          description: ''
      content: >-
        function createCherryPick(cherryPickToCreate:
        GitAsyncRefOperationParameters, project: string, repositoryId: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitCherryPick>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createComment
    name: >-
      createComment(comment: Comment, repositoryId: string, pullRequestId:
      number, threadId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: Create a pull request review comment
    syntax:
      parameters:
        - id: comment
          type:
            - '@vss-web-extension-sdk.TFS.VersionControl.Contracts.Comment'
          description: ''
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: threadId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function createComment(comment: Comment, repositoryId: string,
        pullRequestId: number, threadId: number, project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.Comment>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createFavorite
    name: 'createFavorite(favorite: GitRefFavorite, project: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Creates a ref favorite'
    syntax:
      parameters:
        - id: favorite
          type:
            - '@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitRefFavorite'
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function createFavorite(favorite: GitRefFavorite, project: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitRefFavorite>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createImportRequest
    name: >-
      createImportRequest(importRequest: GitImportRequest, project: string,
      repositoryId: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Create an import request'
    syntax:
      parameters:
        - id: importRequest
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.GitImportRequest
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repositoryId
          type:
            - string
          description: ''
      content: >-
        function createImportRequest(importRequest: GitImportRequest, project:
        string, repositoryId: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitImportRequest>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createPullRequestIterationStatus
    name: >-
      createPullRequestIterationStatus(status: GitPullRequestStatus,
      repositoryId: string, pullRequestId: number, iterationId: number,
      project?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Create a pull request iteration status'
    syntax:
      parameters:
        - id: status
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestStatus
          description: ''
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: iterationId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function createPullRequestIterationStatus(status: GitPullRequestStatus,
        repositoryId: string, pullRequestId: number, iterationId: number,
        project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestStatus>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createPullRequestStatus
    name: >-
      createPullRequestStatus(status: GitPullRequestStatus, repositoryId:
      string, pullRequestId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Create a pull request status'
    syntax:
      parameters:
        - id: status
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestStatus
          description: ''
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function createPullRequestStatus(status: GitPullRequestStatus,
        repositoryId: string, pullRequestId: number, project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestStatus>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createRevert
    name: >-
      createRevert(revertToCreate: GitAsyncRefOperationParameters, project:
      string, repositoryId: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: revertToCreate
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.GitAsyncRefOperationParameters
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repositoryId
          type:
            - string
          description: ''
      content: >-
        function createRevert(revertToCreate: GitAsyncRefOperationParameters,
        project: string, repositoryId: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitRevert>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.createThread
    name: >-
      createThread(commentThread: GitPullRequestCommentThread, repositoryId:
      string, pullRequestId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: Create a pull request review comment thread
    syntax:
      parameters:
        - id: commentThread
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestCommentThread
          description: ''
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function createThread(commentThread: GitPullRequestCommentThread,
        repositoryId: string, pullRequestId: number, project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestCommentThread>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.deleteComment
    name: >-
      deleteComment(repositoryId: string, pullRequestId: number, threadId:
      number, commentId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: Delete a pull request comment by id for a pull request
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: threadId
          type:
            - number
          description: ''
        - id: commentId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function deleteComment(repositoryId: string, pullRequestId: number,
        threadId: number, commentId: number, project?: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.deleteRefFavorite
    name: 'deleteRefFavorite(project: string, favoriteId: number)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: favoriteId
          type:
            - number
          description: ''
      content: 'function deleteRefFavorite(project: string, favoriteId: number)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getCherryPick
    name: 'getCherryPick(project: string, cherryPickId: number, repositoryId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: cherryPickId
          type:
            - number
          description: ''
        - id: repositoryId
          type:
            - string
          description: ''
      content: >-
        function getCherryPick(project: string, cherryPickId: number,
        repositoryId: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitCherryPick>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getCherryPickForRefName
    name: >-
      getCherryPickForRefName(project: string, repositoryId: string, refName:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repositoryId
          type:
            - string
          description: ''
        - id: refName
          type:
            - string
          description: ''
      content: >-
        function getCherryPickForRefName(project: string, repositoryId: string,
        refName: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitCherryPick>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getComment
    name: >-
      getComment(repositoryId: string, pullRequestId: number, threadId: number,
      commentId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: Get a pull request comment by id for a pull request
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: threadId
          type:
            - number
          description: ''
        - id: commentId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getComment(repositoryId: string, pullRequestId: number,
        threadId: number, commentId: number, project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.Comment>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getComments
    name: >-
      getComments(repositoryId: string, pullRequestId: number, threadId: number,
      project?: string)
    children: []
    langs:
      - typeScript
    summary: Get all pull request comments in a thread.
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: threadId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getComments(repositoryId: string, pullRequestId: number,
        threadId: number, project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.Comment[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getFilePaths
    name: >-
      getFilePaths(project: string, repositoryId: string, scopePath?: string,
      versionDescriptor?: GitVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get file paths in a repository branch'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repositoryId
          type:
            - string
          description: repository identifier
        - id: scopePath
          type:
            - string
          description: path to search under
          optional: true
        - id: versionDescriptor
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.GitVersionDescriptor
          description: 'version, version type and options'
          optional: true
      content: >-
        function getFilePaths(project: string, repositoryId: string, scopePath?:
        string, versionDescriptor?: GitVersionDescriptor)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitFilePathsCollection>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getImportRequest
    name: >-
      getImportRequest(project: string, repositoryId: string, importRequestId:
      number)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Retrieve a particular import request'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repositoryId
          type:
            - string
          description: ''
        - id: importRequestId
          type:
            - number
          description: ''
      content: >-
        function getImportRequest(project: string, repositoryId: string,
        importRequestId: number)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitImportRequest>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestById
    name: 'getPullRequestById(pullRequestId: number)'
    children: []
    langs:
      - typeScript
    summary: Get a pull request using its ID
    syntax:
      parameters:
        - id: pullRequestId
          type:
            - number
          description: the Id of the pull request
      content: 'function getPullRequestById(pullRequestId: number)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequest>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestConflict
    name: >-
      getPullRequestConflict(repositoryId: string, pullRequestId: number,
      conflictId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Retrieve one conflict for a pull request by ID'
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: conflictId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getPullRequestConflict(repositoryId: string, pullRequestId:
        number, conflictId: number, project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitConflict>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestConflicts
    name: >-
      getPullRequestConflicts(repositoryId: string, pullRequestId: number,
      project?: string, skip?: number, top?: number, includeObsolete?: boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Retrieve all conflicts for a pull request'
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: includeObsolete
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getPullRequestConflicts(repositoryId: string, pullRequestId:
        number, project?: string, skip?: number, top?: number, includeObsolete?:
        boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitConflict[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestIteration
    name: >-
      getPullRequestIteration(repositoryId: string, pullRequestId: number,
      iterationId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: iterationId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getPullRequestIteration(repositoryId: string, pullRequestId:
        number, iterationId: number, project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestIteration>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestIterationChanges
    name: >-
      getPullRequestIterationChanges(repositoryId: string, pullRequestId:
      number, iterationId: number, project?: string, top?: number, skip?:
      number, compareTo?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: iterationId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: compareTo
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getPullRequestIterationChanges(repositoryId: string,
        pullRequestId: number, iterationId: number, project?: string, top?:
        number, skip?: number, compareTo?: number)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestIterationChanges>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestIterationCommits
    name: >-
      getPullRequestIterationCommits(repositoryId: string, pullRequestId:
      number, iterationId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: Get the commits for an iteration.
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: iterationId
          type:
            - number
          description: Iteration to retrieve commits for
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getPullRequestIterationCommits(repositoryId: string,
        pullRequestId: number, iterationId: number, project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitCommitRef[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestIterations
    name: >-
      getPullRequestIterations(repositoryId: string, pullRequestId: number,
      project?: string, includeCommits?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: includeCommits
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getPullRequestIterations(repositoryId: string, pullRequestId:
        number, project?: string, includeCommits?: boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestIteration[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestIterationStatus
    name: >-
      getPullRequestIterationStatus(repositoryId: string, pullRequestId: number,
      iterationId: number, statusId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get the specific pull request iteration status.'
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: iterationId
          type:
            - number
          description: ''
        - id: statusId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getPullRequestIterationStatus(repositoryId: string,
        pullRequestId: number, iterationId: number, statusId: number, project?:
        string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestStatus>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestIterationStatuses
    name: >-
      getPullRequestIterationStatuses(repositoryId: string, pullRequestId:
      number, iterationId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Get all the statuses associated with a pull request
      iteration.
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: iterationId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getPullRequestIterationStatuses(repositoryId: string,
        pullRequestId: number, iterationId: number, project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestStatus[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestQuery
    name: >-
      getPullRequestQuery(queries: GitPullRequestQuery, repositoryId: string,
      project?: string)
    children: []
    langs:
      - typeScript
    summary: Query for pull requests
    syntax:
      parameters:
        - id: queries
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestQuery
          description: ''
        - id: repositoryId
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getPullRequestQuery(queries: GitPullRequestQuery, repositoryId:
        string, project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestQuery>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestStatus
    name: >-
      getPullRequestStatus(repositoryId: string, pullRequestId: number,
      statusId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get the specific pull request status.'
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: statusId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getPullRequestStatus(repositoryId: string, pullRequestId:
        number, statusId: number, project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestStatus>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestStatuses
    name: >-
      getPullRequestStatuses(repositoryId: string, pullRequestId: number,
      project?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get all the statuses associated with a pull request.'
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getPullRequestStatuses(repositoryId: string, pullRequestId:
        number, project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestStatus[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getPullRequestThread
    name: >-
      getPullRequestThread(repositoryId: string, pullRequestId: number,
      threadId: number, project?: string, iteration?: number, baseIteration?:
      number)
    children: []
    langs:
      - typeScript
    summary: Get a pull request comment thread by id for a pull request
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: threadId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: iteration
          type:
            - number
          description: ''
          optional: true
        - id: baseIteration
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getPullRequestThread(repositoryId: string, pullRequestId:
        number, threadId: number, project?: string, iteration?: number,
        baseIteration?: number)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestCommentThread>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getRefFavorite
    name: 'getRefFavorite(project: string, favoriteId: number)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: favoriteId
          type:
            - number
          description: ''
      content: 'function getRefFavorite(project: string, favoriteId: number)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitRefFavorite>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getRefFavorites
    name: >-
      getRefFavorites(project: string, repositoryId?: string, identityId?:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets the refs favorites for a repo and an identity.'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repositoryId
          type:
            - string
          description: The id of the repository.
          optional: true
        - id: identityId
          type:
            - string
          description: >-
            The id of the identity whose favorites are to be retrieved. If null,
            the requesting identity is used.
          optional: true
      content: >-
        function getRefFavorites(project: string, repositoryId?: string,
        identityId?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitRefFavorite[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getRevert
    name: 'getRevert(project: string, revertId: number, repositoryId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: revertId
          type:
            - number
          description: ''
        - id: repositoryId
          type:
            - string
          description: ''
      content: >-
        function getRevert(project: string, revertId: number, repositoryId:
        string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitRevert>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getRevertForRefName
    name: >-
      getRevertForRefName(project: string, repositoryId: string, refName:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repositoryId
          type:
            - string
          description: ''
        - id: refName
          type:
            - string
          description: ''
      content: >-
        function getRevertForRefName(project: string, repositoryId: string,
        refName: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitRevert>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getStats
    name: 'getStats(project: string, repositoryId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Retrieves statistics of a repository.'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repositoryId
          type:
            - string
          description: Friendly name or guid of repository.
      content: 'function getStats(project: string, repositoryId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitRepositoryStats>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getTemplateList
    name: 'getTemplateList(project: string, type?: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Retrieve all available templates of specified 'type'. If not
      specified, entire list is returned
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: type
          type:
            - string
          description: searches for templates with this type
          optional: true
      content: 'function getTemplateList(project: string, type?: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitTemplate[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.getThreads
    name: >-
      getThreads(repositoryId: string, pullRequestId: number, project?: string,
      iteration?: number, baseIteration?: number)
    children: []
    langs:
      - typeScript
    summary: Get all pull request comment threads.
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: iteration
          type:
            - number
          description: ''
          optional: true
        - id: baseIteration
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getThreads(repositoryId: string, pullRequestId: number,
        project?: string, iteration?: number, baseIteration?: number)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestCommentThread[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.queryImportRequests
    name: >-
      queryImportRequests(project: string, repositoryId: string,
      includeAbandoned?: boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Retrieve import requests for a repository'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repositoryId
          type:
            - string
          description: ''
        - id: includeAbandoned
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function queryImportRequests(project: string, repositoryId: string,
        includeAbandoned?: boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitImportRequest[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.updateComment
    name: >-
      updateComment(comment: Comment, repositoryId: string, pullRequestId:
      number, threadId: number, commentId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: Update a pull request review comment thread
    syntax:
      parameters:
        - id: comment
          type:
            - '@vss-web-extension-sdk.TFS.VersionControl.Contracts.Comment'
          description: ''
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: threadId
          type:
            - number
          description: ''
        - id: commentId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function updateComment(comment: Comment, repositoryId: string,
        pullRequestId: number, threadId: number, commentId: number, project?:
        string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.Comment>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.updateImportRequest
    name: >-
      updateImportRequest(importRequestToUpdate: GitImportRequest, project:
      string, repositoryId: string, importRequestId: number)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Update an import request'
    syntax:
      parameters:
        - id: importRequestToUpdate
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.GitImportRequest
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repositoryId
          type:
            - string
          description: ''
        - id: importRequestId
          type:
            - number
          description: ''
      content: >-
        function updateImportRequest(importRequestToUpdate: GitImportRequest,
        project: string, repositoryId: string, importRequestId: number)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitImportRequest>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.updatePullRequestConflict
    name: >-
      updatePullRequestConflict(conflict: GitConflict, repositoryId: string,
      pullRequestId: number, conflictId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Update merge conflict resolution'
    syntax:
      parameters:
        - id: conflict
          type:
            - '@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitConflict'
          description: ''
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: conflictId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function updatePullRequestConflict(conflict: GitConflict, repositoryId:
        string, pullRequestId: number, conflictId: number, project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitConflict>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.updateThread
    name: >-
      updateThread(commentThread: GitPullRequestCommentThread, repositoryId:
      string, pullRequestId: number, threadId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: Update a pull request review comment thread
    syntax:
      parameters:
        - id: commentThread
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestCommentThread
          description: ''
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: threadId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function updateThread(commentThread: GitPullRequestCommentThread,
        repositoryId: string, pullRequestId: number, threadId: number, project?:
        string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.GitPullRequestCommentThread>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3To4.validateRemoteRepository
    name: >-
      validateRemoteRepository(remoteRepository: ImportRepositoryValidation,
      project: string)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Validates a remote repository. Returns 404 if remote
      repository is not reachable
    syntax:
      parameters:
        - id: remoteRepository
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.ImportRepositoryValidation
          description: The remote repository to validate.
        - id: project
          type:
            - string
          description: Project ID or project name
      content: >-
        function validateRemoteRepository(remoteRepository:
        ImportRepositoryValidation, project: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.ImportRepositoryValidation>
    type: method
