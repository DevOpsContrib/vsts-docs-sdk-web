### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4
    name: CommonMethods2To4
    fullName: CommonMethods2To4
    children:
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.addMember
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.constructor
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.createGroups
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.createIdentity
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.createOrBindWithClaims
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.createScope
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.deleteGroup
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.deleteScope
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getDescriptorById
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getIdentityChanges
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getIdentitySnapshot
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getMaxSequenceId
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getScopeById
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getScopeByName
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getSelf
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getSignedInToken
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getSignoutToken
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getTenant
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getUserIdentityIdsByDomainId
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.listGroups
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readIdentities
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readIdentitiesByScope
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readIdentity
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readIdentityBatch
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readMember
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readMemberOf
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readMembers
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readMembersOf
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.removeMember
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.renameScope
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.updateIdentities
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.updateIdentity
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.WebApi.RestClient.VssHttpClient'
    source:
      path: vss.d.ts
      startLine: 26640
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Identities/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.addMember
    name: 'addMember(containerId: string, memberId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: containerId
          type:
            - string
          description: ''
        - id: memberId
          type:
            - string
          description: ''
      content: 'function addMember(containerId: string, memberId: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<boolean>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.constructor
    name: >-
      CommonMethods2To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new CommonMethods2To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.createGroups
    name: 'createGroups(container: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: container
          type:
            - any
          description: ''
      content: 'function createGroups(container: any)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.Identity[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.createIdentity
    name: 'createIdentity(frameworkIdentityInfo: FrameworkIdentityInfo)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: frameworkIdentityInfo
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Contracts.FrameworkIdentityInfo
          description: ''
      content: 'function createIdentity(frameworkIdentityInfo: FrameworkIdentityInfo)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.Identity>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.createOrBindWithClaims
    name: 'createOrBindWithClaims(sourceIdentity: Identity)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: sourceIdentity
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Contracts.Identity'
          description: ''
      content: 'function createOrBindWithClaims(sourceIdentity: Identity)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.Identity>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.createScope
    name: 'createScope(info: CreateScopeInfo, scopeId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: info
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Contracts.CreateScopeInfo'
          description: ''
        - id: scopeId
          type:
            - string
          description: ''
      content: 'function createScope(info: CreateScopeInfo, scopeId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.IdentityScope>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.deleteGroup
    name: 'deleteGroup(groupId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: groupId
          type:
            - string
          description: ''
      content: 'function deleteGroup(groupId: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.deleteScope
    name: 'deleteScope(scopeId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeId
          type:
            - string
          description: ''
      content: 'function deleteScope(scopeId: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getDescriptorById
    name: 'getDescriptorById(id: string, isMasterId?: boolean)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: ''
        - id: isMasterId
          type:
            - boolean
          description: ''
          optional: true
      content: 'function getDescriptorById(id: string, isMasterId?: boolean)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.IdentityDescriptor>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getIdentityChanges
    name: >-
      getIdentityChanges(identitySequenceId: number, groupSequenceId: number,
      scopeId?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: identitySequenceId
          type:
            - number
          description: ''
        - id: groupSequenceId
          type:
            - number
          description: ''
        - id: scopeId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getIdentityChanges(identitySequenceId: number, groupSequenceId:
        number, scopeId?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.ChangedIdentities>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getIdentitySnapshot
    name: 'getIdentitySnapshot(scopeId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeId
          type:
            - string
          description: ''
      content: 'function getIdentitySnapshot(scopeId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.IdentitySnapshot>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getMaxSequenceId
    name: getMaxSequenceId()
    children: []
    langs:
      - typeScript
    summary: Read the max sequence id of all the identities.
    syntax:
      parameters: []
      content: function getMaxSequenceId()
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<number>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getScopeById
    name: 'getScopeById(scopeId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeId
          type:
            - string
          description: ''
      content: 'function getScopeById(scopeId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.IdentityScope>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getScopeByName
    name: 'getScopeByName(scopeName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeName
          type:
            - string
          description: ''
      content: 'function getScopeByName(scopeName: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.IdentityScope>
    type: method
  - uid: vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getSelf
    name: getSelf()
    children: []
    langs:
      - typeScript
    summary: Read identity of the home tenant request user.
    syntax:
      parameters: []
      content: function getSelf()
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.IdentitySelf>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getSignedInToken
    name: getSignedInToken()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getSignedInToken()
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.DelegatedAuthorization.Contracts.AccessTokenResult>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getSignoutToken
    name: getSignoutToken()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getSignoutToken()
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.DelegatedAuthorization.Contracts.AccessTokenResult>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getTenant
    name: 'getTenant(tenantId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: tenantId
          type:
            - string
          description: ''
      content: 'function getTenant(tenantId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.TenantInfo>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.getUserIdentityIdsByDomainId
    name: 'getUserIdentityIdsByDomainId(domainId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: domainId
          type:
            - string
          description: ''
      content: 'function getUserIdentityIdsByDomainId(domainId: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<string[]>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.listGroups
    name: >-
      listGroups(scopeIds?: string, recurse?: boolean, deleted?: boolean,
      properties?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIds
          type:
            - string
          description: ''
          optional: true
        - id: recurse
          type:
            - boolean
          description: ''
          optional: true
        - id: deleted
          type:
            - boolean
          description: ''
          optional: true
        - id: properties
          type:
            - string
          description: ''
          optional: true
      content: >-
        function listGroups(scopeIds?: string, recurse?: boolean, deleted?:
        boolean, properties?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.Identity[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readIdentities
    name: >-
      readIdentities(descriptors?: string, identityIds?: string, searchFilter?:
      string, filterValue?: string, queryMembership?: QueryMembership,
      properties?: string, includeRestrictedVisibility?: boolean, options?:
      ReadIdentitiesOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: descriptors
          type:
            - string
          description: ''
          optional: true
        - id: identityIds
          type:
            - string
          description: ''
          optional: true
        - id: searchFilter
          type:
            - string
          description: ''
          optional: true
        - id: filterValue
          type:
            - string
          description: ''
          optional: true
        - id: queryMembership
          type:
            - QueryMembership
          description: ''
          optional: true
        - id: properties
          type:
            - string
          description: ''
          optional: true
        - id: includeRestrictedVisibility
          type:
            - boolean
          description: ''
          optional: true
        - id: options
          type:
            - ReadIdentitiesOptions
          description: ''
          optional: true
      content: >-
        function readIdentities(descriptors?: string, identityIds?: string,
        searchFilter?: string, filterValue?: string, queryMembership?:
        QueryMembership, properties?: string, includeRestrictedVisibility?:
        boolean, options?: ReadIdentitiesOptions)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.Identity[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readIdentitiesByScope
    name: >-
      readIdentitiesByScope(scopeId: string, queryMembership?: QueryMembership,
      properties?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeId
          type:
            - string
          description: ''
        - id: queryMembership
          type:
            - QueryMembership
          description: ''
          optional: true
        - id: properties
          type:
            - string
          description: ''
          optional: true
      content: >-
        function readIdentitiesByScope(scopeId: string, queryMembership?:
        QueryMembership, properties?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.Identity[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readIdentity
    name: >-
      readIdentity(identityId: string, queryMembership?: QueryMembership,
      properties?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: identityId
          type:
            - string
          description: ''
        - id: queryMembership
          type:
            - QueryMembership
          description: ''
          optional: true
        - id: properties
          type:
            - string
          description: ''
          optional: true
      content: >-
        function readIdentity(identityId: string, queryMembership?:
        QueryMembership, properties?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.Identity>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readIdentityBatch
    name: 'readIdentityBatch(batchInfo: IdentityBatchInfo)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: batchInfo
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Contracts.IdentityBatchInfo'
          description: ''
      content: 'function readIdentityBatch(batchInfo: IdentityBatchInfo)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.Identity[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readMember
    name: >-
      readMember(containerId: string, memberId: string, queryMembership?:
      QueryMembership)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: containerId
          type:
            - string
          description: ''
        - id: memberId
          type:
            - string
          description: ''
        - id: queryMembership
          type:
            - QueryMembership
          description: ''
          optional: true
      content: >-
        function readMember(containerId: string, memberId: string,
        queryMembership?: QueryMembership)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.IdentityDescriptor>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readMemberOf
    name: >-
      readMemberOf(memberId: string, containerId: string, queryMembership?:
      QueryMembership)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: memberId
          type:
            - string
          description: ''
        - id: containerId
          type:
            - string
          description: ''
        - id: queryMembership
          type:
            - QueryMembership
          description: ''
          optional: true
      content: >-
        function readMemberOf(memberId: string, containerId: string,
        queryMembership?: QueryMembership)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.IdentityDescriptor>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readMembers
    name: 'readMembers(containerId: string, queryMembership?: QueryMembership)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: containerId
          type:
            - string
          description: ''
        - id: queryMembership
          type:
            - QueryMembership
          description: ''
          optional: true
      content: >-
        function readMembers(containerId: string, queryMembership?:
        QueryMembership)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.IdentityDescriptor[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.readMembersOf
    name: 'readMembersOf(memberId: string, queryMembership?: QueryMembership)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: memberId
          type:
            - string
          description: ''
        - id: queryMembership
          type:
            - QueryMembership
          description: ''
          optional: true
      content: >-
        function readMembersOf(memberId: string, queryMembership?:
        QueryMembership)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.IdentityDescriptor[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.removeMember
    name: 'removeMember(containerId: string, memberId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: containerId
          type:
            - string
          description: ''
        - id: memberId
          type:
            - string
          description: ''
      content: 'function removeMember(containerId: string, memberId: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<boolean>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.renameScope
    name: 'renameScope(renameScope: IdentityScope, scopeId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: renameScope
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Contracts.IdentityScope'
          description: ''
        - id: scopeId
          type:
            - string
          description: ''
      content: 'function renameScope(renameScope: IdentityScope, scopeId: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.updateIdentities
    name: 'updateIdentities(identities: VssJsonCollectionWrapperV<Identity[]>)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: identities
          type:
            - >-
              @vss-web-extension-sdk.VSS.WebApi.Contracts.VssJsonCollectionWrapperV<@vss-web-extension-sdk.VSS.Identities.Contracts.Identity[]>
          description: ''
      content: >-
        function updateIdentities(identities:
        VssJsonCollectionWrapperV<Identity[]>)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Contracts.IdentityUpdateData[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.CommonMethods2To4.updateIdentity
    name: 'updateIdentity(identity: Identity, identityId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: identity
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Contracts.Identity'
          description: ''
        - id: identityId
          type:
            - string
          description: ''
      content: 'function updateIdentity(identity: Identity, identityId: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
