### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO
    name: MenuBarO<TOptions>
    fullName: MenuBarO
    children:
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.enhancementTypeName
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.focus
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.getMenuItemAlignment
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.initializeOptions
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.constructor
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.selectDown
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.selectLeft
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.selectRight
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.selectUp
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.tryActivate
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.tryShowSubMenu
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner<TOptions>'
    source:
      path: vss.d.ts
      startLine: 14445
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/Menus
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.enhancementTypeName
    name: enhancementTypeName
    fullName: enhancementTypeName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string enhancementTypeName
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.focus
    name: focus()
    children: []
    langs:
      - typeScript
    summary: Sets focus to the control
    syntax:
      parameters: []
      content: function focus()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.getMenuItemAlignment
    name: getMenuItemAlignment()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getMenuItemAlignment()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.initializeOptions
    name: 'initializeOptions(options?: TOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - TOptions
          description: |+

          optional: true
      content: 'function initializeOptions(options?: TOptions)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.constructor
    name: 'MenuBarO(options?: TOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - TOptions
          description: |+

          optional: true
      content: 'new MenuBarO(options?: TOptions)'
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.selectDown
    name: 'selectDown(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function selectDown(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.selectLeft
    name: 'selectLeft(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function selectLeft(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.selectRight
    name: 'selectRight(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function selectRight(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.selectUp
    name: 'selectUp(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function selectUp(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.tryActivate
    name: 'tryActivate(selector: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Tries to activate the menubar associated with the element matched by the
      selector.
    syntax:
      parameters:
        - id: selector
          type:
            - string
          description: Selector to match the element.
      content: 'static function tryActivate(selector: string)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBarO.tryShowSubMenu
    name: 'tryShowSubMenu(selector: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Tries to activate and open the menubar associated with the element matched
      by the selector.
    syntax:
      parameters:
        - id: selector
          type:
            - string
          description: Selector to match the element.
      content: 'static function tryShowSubMenu(selector: string)'
      return:
        type:
          - boolean
    type: method
