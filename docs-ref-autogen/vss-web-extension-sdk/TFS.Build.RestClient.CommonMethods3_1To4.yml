### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4
    name: CommonMethods3_1To4
    fullName: CommonMethods3_1To4
    children:
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4.addDefinitionTag
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4.addDefinitionTags
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4.constructor
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4.deleteDefinitionTag
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4.getDefinitionMetrics
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4.getDefinitionTags
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4.getProjectMetrics
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4'
    package: vss-web-extension-sdk
    module: TFS/Build/RestClient
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4.addDefinitionTag
    name: 'addDefinitionTag(project: string, definitionId: number, tag: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Adds a tag to a definition'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
        - id: tag
          type:
            - string
          description: ''
      content: >-
        function addDefinitionTag(project: string, definitionId: number, tag:
        string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<string[]>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4.addDefinitionTags
    name: 'addDefinitionTags(tags: string[], project: string, definitionId: number)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Adds multiple tags to a definition'
    syntax:
      parameters:
        - id: tags
          type:
            - 'string[]'
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
      content: >-
        function addDefinitionTags(tags: string[], project: string,
        definitionId: number)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<string[]>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4.constructor
    name: >-
      CommonMethods3_1To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new CommonMethods3_1To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4.deleteDefinitionTag
    name: 'deleteDefinitionTag(project: string, definitionId: number, tag: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Deletes a tag from a definition'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
        - id: tag
          type:
            - string
          description: ''
      content: >-
        function deleteDefinitionTag(project: string, definitionId: number, tag:
        string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<string[]>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4.getDefinitionMetrics
    name: >-
      getDefinitionMetrics(project: string, definitionId: number,
      minMetricsTime?: Date)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets metrics of a definition'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
        - id: minMetricsTime
          type:
            - Date
          description: ''
          optional: true
      content: >-
        function getDefinitionMetrics(project: string, definitionId: number,
        minMetricsTime?: Date)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildMetric[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4.getDefinitionTags
    name: >-
      getDefinitionTags(project: string, definitionId: number, revision?:
      number)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets the tags for a definition'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
        - id: revision
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getDefinitionTags(project: string, definitionId: number,
        revision?: number)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<string[]>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3_1To4.getProjectMetrics
    name: >-
      getProjectMetrics(project: string, metricAggregationType?: string,
      minMetricsTime?: Date)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets metrics of a project'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: metricAggregationType
          type:
            - string
          description: ''
          optional: true
        - id: minMetricsTime
          type:
            - Date
          description: ''
          optional: true
      content: >-
        function getProjectMetrics(project: string, metricAggregationType?:
        string, minMetricsTime?: Date)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildMetric[]>
    type: method
