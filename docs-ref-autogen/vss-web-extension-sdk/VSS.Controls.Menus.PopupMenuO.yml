### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO
    name: PopupMenuO
    fullName: PopupMenuO
    children:
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.actionArguments
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.cancelDelayedFunction
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.CONTRIBUTION_ITEMS_UPDATED_EVENT
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.create
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.createIn
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.delayExecute
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.enhance
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.ENHANCEMENTS_DATA_KEY
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.enhancementTypeName
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.ENHANCEMENT_OPTIONPREFIX_KEY
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.ENHANCEMENT_OPTIONS_KEY
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.ensureEnhancement
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.ensureEnhancements
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.escape
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.focus
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getActionArguments
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getElement
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getEnhancementOptions
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getGroupedItems
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getId
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getInstance
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getItem
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getItemByTag
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getItems
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getMenuItemAlignment
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getMenuItemOptions
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getMenuPinningOptions
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getMenuType
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getOptionPrefix
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getOwner
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getParentMenu
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getTypeName
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getTypeName
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.hide
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.initializeOptions
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.isDisposed
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.moveMenuItemAfter
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.openSubMenuOnHover
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.optionsPrefix
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.constructor
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.refreshContributedItems
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.registerEnhancement
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.registerJQueryWidget
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.selectDown
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.selectFirstItem
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.selectLeft
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.selectRight
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.selectUp
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.setAttribute
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.setContributedItemOptions
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.setEnhancementOptions
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.setRole
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.setShowIcon
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.show
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.shownTime
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.showSubMenuOnFocusedItem
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.updateAriaSetProperties
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.updateCommandStates
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.updateContributedMenuItems
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._active
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._align
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._bind
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._children
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._commandStates
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._contributedItems
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._contributionPromise
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._contributionProviderOptions
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._disposed
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._element
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._enhance
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._enhancementOptions
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._ensureInitialized
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._fire
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._fireChange
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._focusItem
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._getEventNameSpace
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._getInDomPromise
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._getMenuItemType
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._getNextFocusableItem
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._getUniqueId
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._hidden
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._initialized
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._menuItems
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._options
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._parent
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._selectedItem
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._selectItem
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._setElement
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._setId
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._subMenuVisible
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._type
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._unbind
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._updateContributedMenuItems
      - vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._visible
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS/Controls/Menus
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.actionArguments
    name: actionArguments
    fullName: actionArguments
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.cancelDelayedFunction
    name: 'cancelDelayedFunction(name: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Cancels any pending delayed functions (delayExecute calls) with the
      specified name
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: Name (supplied in the delayExecute call) of the operations to cancel
      content: 'function cancelDelayedFunction(name: string)'
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.CONTRIBUTION_ITEMS_UPDATED_EVENT
    name: CONTRIBUTION_ITEMS_UPDATED_EVENT
    fullName: CONTRIBUTION_ITEMS_UPDATED_EVENT
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.create
    name: >-
      create(controlType: function, container: JQuery, controlOptions: TOptions,
      enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: Creates a the control specified by TControl in the given container.
    syntax:
      parameters:
        - id: controlType
          type:
            - function
          description: ''
        - id: container
          type:
            - JQuery
          description: ''
        - id: controlOptions
          type:
            - TOptions
          description: ''
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function create(controlType: function, container: JQuery,
        controlOptions: TOptions, enhancementOptions?: EnhancementOptions)
      return:
        type:
          - TControl
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.createIn
    name: >-
      createIn(type?: any, container?: any, options?: TOptions, koCompatable?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: container
          type:
            - any
          description: ''
          optional: true
        - id: options
          type:
            - TOptions
          description: ''
          optional: true
        - id: koCompatable
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function createIn(type?: any, container?: any, options?: TOptions,
        koCompatable?: boolean)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Control
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.delayExecute
    name: >-
      delayExecute(name?: string, msDelay?: number, cancelPendingOps?: boolean,
      func?: Function)
    children: []
    langs:
      - typeScript
    summary: Executes the provided function after the specified amount of time
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: >-
            (Optional) Name for this operation. Allows subsequent calls to
            cancel this action.
          optional: true
        - id: msDelay
          type:
            - number
          description: Delay in milliseconds to wait before executing the Function
          optional: true
        - id: cancelPendingOps
          type:
            - boolean
          description: >-
            If true, cancel any pending requests with this name. If false, and
            there are outstanding requests with this name already in progress,
            then do nothing.
          optional: true
        - id: func
          type:
            - Function
          description: |
            Method to execute after the delay
          optional: true
      content: >-
        function delayExecute(name?: string, msDelay?: number,
        cancelPendingOps?: boolean, func?: Function)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.enhance
    name: >-
      enhance(type: function, element: function, options?: function,
      enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - function
          description: ''
        - id: element
          type:
            - function
          description: ''
        - id: options
          type:
            - function
          description: ''
          optional: true
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function enhance(type: function, element: function, options?: function,
        enhancementOptions?: EnhancementOptions)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.ENHANCEMENTS_DATA_KEY
    name: ENHANCEMENTS_DATA_KEY
    fullName: ENHANCEMENTS_DATA_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.enhancementTypeName
    name: enhancementTypeName
    fullName: enhancementTypeName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.ENHANCEMENT_OPTIONPREFIX_KEY
    name: ENHANCEMENT_OPTIONPREFIX_KEY
    fullName: ENHANCEMENT_OPTIONPREFIX_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.ENHANCEMENT_OPTIONS_KEY
    name: ENHANCEMENT_OPTIONS_KEY
    fullName: ENHANCEMENT_OPTIONS_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.ensureEnhancement
    name: 'ensureEnhancement(type?: any, context?: any, errorCallback?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: context
          type:
            - any
          description: ''
          optional: true
        - id: errorCallback
          type:
            - any
          description: ''
          optional: true
      content: >-
        function ensureEnhancement(type?: any, context?: any, errorCallback?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.ensureEnhancements
    name: 'ensureEnhancements(type?: any, context?: any, errorCallback?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: context
          type:
            - any
          description: ''
          optional: true
        - id: errorCallback
          type:
            - any
          description: ''
          optional: true
      content: >-
        function ensureEnhancements(type?: any, context?: any, errorCallback?:
        any)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.escape
    name: 'escape(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function escape(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.focus
    name: focus()
    children: []
    langs:
      - typeScript
    summary: Set Focus to the control
    syntax:
      parameters: []
      content: function focus()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getActionArguments
    name: getActionArguments()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getActionArguments()
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getElement
    name: getElement()
    children: []
    langs:
      - typeScript
    summary: Gets the element associated with this control.
    syntax:
      parameters: []
      content: function getElement()
      return:
        type:
          - JQuery
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getEnhancementOptions
    name: 'getEnhancementOptions(type: any, element: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
        - id: element
          type:
            - any
          description: |+

      content: 'function getEnhancementOptions(type: any, element: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getGroupedItems
    name: getGroupedItems()
    children: []
    langs:
      - typeScript
    summary: >-
      Create a list from itemsSource to reflect the order of items after
      grouping is done.

      Groups of items come before all ungrouped items.

      A separator goes between each group of items.

      Ungrouped items remain at the end of the menu with their
      manually-specified separators still in tact.

      If any groups are defined, separators are guaranteed not to be the first
      or last item in the menu.
    syntax:
      parameters: []
      content: function getGroupedItems()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getId
    name: getId()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getId()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getInstance
    name: 'getInstance(type?: any, element?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: element
          type:
            - any
          description: ''
          optional: true
      content: 'function getInstance(type?: any, element?: any)'
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getItem
    name: 'getItem(id: string)'
    children: []
    langs:
      - typeScript
    summary: Gets the item which has the specified command id.
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: Id associated with the menu item.
      content: 'function getItem(id: string)'
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Menus.MenuItem
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getItemByTag
    name: 'getItemByTag(tag: string)'
    children: []
    langs:
      - typeScript
    summary: Gets the item which has the specified tag
    syntax:
      parameters:
        - id: tag
          type:
            - string
          description: Associated with the menu item
      content: 'function getItemByTag(tag: string)'
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Menus.MenuItem
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getItems
    name: getItems()
    children: []
    langs:
      - typeScript
    summary: Gets an array of all menu items.
    syntax:
      parameters: []
      content: function getItems()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getMenuItemAlignment
    name: getMenuItemAlignment()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getMenuItemAlignment()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getMenuItemOptions
    name: 'getMenuItemOptions(item: any, extraOptions?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: item
          type:
            - any
          description: ''
        - id: extraOptions
          type:
            - any
          description: |+

          optional: true
      content: 'function getMenuItemOptions(item: any, extraOptions?: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getMenuPinningOptions
    name: getMenuPinningOptions()
    children: []
    langs:
      - typeScript
    summary: Get the pinning options for this menu.
    syntax:
      parameters: []
      content: function getMenuPinningOptions()
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Menus.IMenuPinningOptions
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getMenuType
    name: getMenuType()
    children: []
    langs:
      - typeScript
    summary: Returns the menu type. The values are outlines in the MenuType enumeration
    syntax:
      parameters: []
      content: function getMenuType()
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getOptionPrefix
    name: 'getOptionPrefix(type: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
      content: 'function getOptionPrefix(type: any)'
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getOwner
    name: getOwner()
    children: []
    langs:
      - typeScript
    summary: Get the root menu of this object. (Not the immediate parent)
    syntax:
      parameters: []
      content: function getOwner()
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getParentMenu
    name: getParentMenu()
    children: []
    langs:
      - typeScript
    summary: 'Get the parent menu of this menu, if there is one.'
    syntax:
      parameters: []
      content: function getParentMenu()
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Menus.Menu
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getTypeName
    name: getTypeName()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getTypeName()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.getTypeName
    name: 'getTypeName(type?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
      content: 'function getTypeName(type?: any)'
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.hide
    name: 'hide(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: |+

          optional: true
      content: 'function hide(options?: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.initializeOptions
    name: 'initializeOptions(options?: TOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - TOptions
          description: |+

          optional: true
      content: 'function initializeOptions(options?: TOptions)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.isDisposed
    name: isDisposed()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function isDisposed()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.moveMenuItemAfter
    name: 'moveMenuItemAfter(item: MenuItem, after: MenuItem)'
    children: []
    langs:
      - typeScript
    summary: Move a menu item to appear immediately after the other given menu item.
    syntax:
      parameters:
        - id: item
          type:
            - vss-web-extension-sdk.VSS.Controls.Menus.MenuItem
          description: ''
        - id: after
          type:
            - vss-web-extension-sdk.VSS.Controls.Menus.MenuItem
          description: |+

      content: 'function moveMenuItemAfter(item: MenuItem, after: MenuItem)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.openSubMenuOnHover
    name: openSubMenuOnHover
    fullName: openSubMenuOnHover
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.optionsPrefix
    name: optionsPrefix
    fullName: optionsPrefix
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.constructor
    name: 'PopupMenuO(options?: TOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - TOptions
          description: ''
          optional: true
      content: 'new PopupMenuO(options?: TOptions)'
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.refreshContributedItems
    name: refreshContributedItems()
    children: []
    langs:
      - typeScript
    summary: Load contributed menu items.
    syntax:
      parameters: []
      content: function refreshContributedItems()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.registerEnhancement
    name: >-
      registerEnhancement(type?: function, selector?: string, options?:
      TOptions, errorCallback?: IErrorCallback, enhancementOptions?:
      EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - function
          description: ''
          optional: true
        - id: selector
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - TOptions
          description: ''
          optional: true
        - id: errorCallback
          type:
            - vss-web-extension-sdk.IErrorCallback
          description: |+

          optional: true
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function registerEnhancement(type?: function, selector?: string,
        options?: TOptions, errorCallback?: IErrorCallback, enhancementOptions?:
        EnhancementOptions)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.registerJQueryWidget
    name: >-
      registerJQueryWidget(type?: any, widgetName?: any, widgetOptions?:
      TOptions, enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: widgetName
          type:
            - any
          description: ''
          optional: true
        - id: widgetOptions
          type:
            - TOptions
          description: |+

          optional: true
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function registerJQueryWidget(type?: any, widgetName?: any,
        widgetOptions?: TOptions, enhancementOptions?: EnhancementOptions)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.selectDown
    name: 'selectDown(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function selectDown(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.selectFirstItem
    name: selectFirstItem()
    children: []
    langs:
      - typeScript
    summary: |-
      Selects the first item of the child menu.
      Override of Menu.selectFirstItem()
    syntax:
      parameters: []
      content: function selectFirstItem()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.selectLeft
    name: 'selectLeft(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function selectLeft(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.selectRight
    name: 'selectRight(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function selectRight(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.selectUp
    name: 'selectUp(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function selectUp(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.setAttribute
    name: 'setAttribute(attribute: string, value: function, element?: JQuery)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets the attribute for the current control using the specified attribute
      name, value on the specified element.

      If no element specified, default element is used.
    syntax:
      parameters:
        - id: attribute
          type:
            - string
          description: Attribute name to set value.
        - id: value
          type:
            - function
          description: Attribute value to set.
        - id: element
          type:
            - JQuery
          description: |
            Element to apply the attribute (default is root element).
          optional: true
      content: >-
        function setAttribute(attribute: string, value: function, element?:
        JQuery)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.setContributedItemOptions
    name: >-
      setContributedItemOptions(contributionIds: function, contributionType?:
      string, contributionQueryOptions?: function)
    children: []
    langs:
      - typeScript
    summary: >-
      Change the contribution options for this menu and reload the contributed
      menu items
    syntax:
      parameters:
        - id: contributionIds
          type:
            - function
          description: The contribution ids to query for this menu
        - id: contributionType
          type:
            - string
          description: Optional type of contributions to include
          optional: true
        - id: contributionQueryOptions
          type:
            - function
          description: |
            Optional contribution query options
          optional: true
      content: >-
        function setContributedItemOptions(contributionIds: function,
        contributionType?: string, contributionQueryOptions?: function)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.setEnhancementOptions
    name: 'setEnhancementOptions(enhancementOptions: EnhancementOptions)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets options related to the creation of this control or enhancement of an
      element as this control.

      Note: Options are merged.
    syntax:
      parameters:
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
      content: 'function setEnhancementOptions(enhancementOptions: EnhancementOptions)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.setRole
    name: 'setRole(role: string, element?: JQuery)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets the role for the current control using the specified role value on
      the specified element.

      If no element specified, default element is used.
    syntax:
      parameters:
        - id: role
          type:
            - string
          description: Role to assign.
        - id: element
          type:
            - JQuery
          description: |
            Element to apply the role (default is root element).
          optional: true
      content: 'function setRole(role: string, element?: JQuery)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.setShowIcon
    name: 'setShowIcon(showIcon: boolean)'
    children: []
    langs:
      - typeScript
    summary: Sets showIcon option.
    syntax:
      parameters:
        - id: showIcon
          type:
            - boolean
          description: |
            New state for the showIcon option.
      content: 'function setShowIcon(showIcon: boolean)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.show
    name: 'show(options?: any)'
    children: []
    langs:
      - typeScript
    summary: |-
      Options:
       immediate: whether to show the menu immediately or after a short delay (default false)
       showTimeout: optional number of milliseconds to wait before showing when immediate is false
       callback: function to call after menu is shown
       align: how to align the menu with its parent
       setFocus: whether to set the focus to the menu (default true)
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function show(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.shownTime
    name: shownTime
    fullName: shownTime
    children: []
    langs:
      - typeScript
    type: property
    summary: Time the Menu was last displayed.
    syntax:
      return:
        type:
          - number
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.showSubMenuOnFocusedItem
    name: showSubMenuOnFocusedItem()
    children: []
    langs:
      - typeScript
    summary: Attempt to open the submenu on the focused item
    syntax:
      parameters: []
      content: function showSubMenuOnFocusedItem()
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.updateAriaSetProperties
    name: updateAriaSetProperties()
    children: []
    langs:
      - typeScript
    summary: >-
      Updates aria set related properties, use after modifying the child items
      of the menu.
    syntax:
      parameters: []
      content: function updateAriaSetProperties()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.updateCommandStates
    name: 'updateCommandStates(commands: function)'
    children: []
    langs:
      - typeScript
    summary: Updates the command states of the items with the specified ids.
    syntax:
      parameters:
        - id: commands
          type:
            - function
          description: List of commands to update.
      content: 'function updateCommandStates(commands: function)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO.updateContributedMenuItems
    name: 'updateContributedMenuItems(contributedMenuItems: function)'
    children: []
    langs:
      - typeScript
    summary: >-
      Menu items must have an id set in order to be updated. Extensions can only
      update menu items that they contributed.


      Exposed to extensions as the updateMenuItems() method on the context
      object passed to getMenuItems().
    syntax:
      parameters:
        - id: contributedMenuItems
          type:
            - function
          description: |+

      content: 'function updateContributedMenuItems(contributedMenuItems: function)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._active
    name: _active
    fullName: _active
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._align
    name: _align
    fullName: _align
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._bind
    name: '_bind(element?: any, eventType?: any, handler?: any, track?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: handler
          type:
            - any
          description: ''
          optional: true
        - id: track
          type:
            - any
          description: |+

          optional: true
      content: >-
        function _bind(element?: any, eventType?: any, handler?: any, track?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._children
    name: _children
    fullName: _children
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._commandStates
    name: _commandStates
    fullName: _commandStates
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._contributedItems
    name: _contributedItems
    fullName: _contributedItems
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._contributionPromise
    name: _contributionPromise
    fullName: _contributionPromise
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IPromise
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._contributionProviderOptions
    name: _contributionProviderOptions
    fullName: _contributionProviderOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - >-
            vss-web-extension-sdk.VSS.Controls.Menus.MenuContributionProviderOptions
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._disposed
    name: _disposed
    fullName: _disposed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._element
    name: _element
    fullName: _element
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - JQuery
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._enhance
    name: '_enhance(element: JQuery)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - JQuery
          description: |+

      content: 'function _enhance(element: JQuery)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._enhancementOptions
    name: _enhancementOptions
    fullName: _enhancementOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._ensureInitialized
    name: _ensureInitialized()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _ensureInitialized()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._fire
    name: '_fire(element?: any, eventType?: any, args?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: args
          type:
            - any
          description: |+

          optional: true
      content: 'function _fire(element?: any, eventType?: any, args?: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._fireChange
    name: '_fireChange(sender?: any)'
    children: []
    langs:
      - typeScript
    summary: Fires the change event for the control immediately
    syntax:
      parameters:
        - id: sender
          type:
            - any
          description: |
            Source element of the event
          optional: true
      content: 'function _fireChange(sender?: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._focusItem
    name: _focusItem
    fullName: _focusItem
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Menus.MenuItem
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._getEventNameSpace
    name: _getEventNameSpace()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _getEventNameSpace()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._getInDomPromise
    name: _getInDomPromise()
    children: []
    langs:
      - typeScript
    summary: |-
      Get a promise that is resolved once the containing element for this
      control has been added to the DOM hierarchy.
    syntax:
      parameters: []
      content: function _getInDomPromise()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._getMenuItemType
    name: _getMenuItemType()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _getMenuItemType()
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._getNextFocusableItem
    name: '_getNextFocusableItem(index: number, options?: function)'
    children: []
    langs:
      - typeScript
    summary: Get the first item at or after the given index that is focusable.
    syntax:
      parameters:
        - id: index
          type:
            - number
          description: ''
        - id: options
          type:
            - function
          description: |+

          optional: true
      content: 'function _getNextFocusableItem(index: number, options?: function)'
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Menus.MenuItem
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._getUniqueId
    name: _getUniqueId()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _getUniqueId()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._hidden
    name: _hidden
    fullName: _hidden
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._initialized
    name: _initialized
    fullName: _initialized
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._menuItems
    name: _menuItems
    fullName: _menuItems
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._options
    name: _options
    fullName: _options
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - TOptions
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._parent
    name: _parent
    fullName: _parent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._selectedItem
    name: _selectedItem
    fullName: _selectedItem
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Menus.MenuItem
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._selectItem
    name: >-
      _selectItem(item?: MenuItem, ignoreFocus?: boolean, setKeyboardFocus?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: item
          type:
            - vss-web-extension-sdk.VSS.Controls.Menus.MenuItem
          description: ''
          optional: true
        - id: ignoreFocus
          type:
            - boolean
          description: |+

          optional: true
        - id: setKeyboardFocus
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function _selectItem(item?: MenuItem, ignoreFocus?: boolean,
        setKeyboardFocus?: boolean)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._setElement
    name: '_setElement(element: JQuery)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - JQuery
          description: |+

      content: 'function _setElement(element: JQuery)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._setId
    name: '_setId(id: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: |+

      content: 'function _setId(id: string)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._subMenuVisible
    name: _subMenuVisible
    fullName: _subMenuVisible
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._type
    name: _type
    fullName: _type
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._unbind
    name: '_unbind(element?: any, eventType?: any, handler?: any, track?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: handler
          type:
            - any
          description: ''
          optional: true
        - id: track
          type:
            - any
          description: |+

          optional: true
      content: >-
        function _unbind(element?: any, eventType?: any, handler?: any, track?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._updateContributedMenuItems
    name: '_updateContributedMenuItems(items: function)'
    children: []
    langs:
      - typeScript
    summary: Update contributed menu items that have already been added to the menu.
    syntax:
      parameters:
        - id: items
          type:
            - function
          description: |+

      content: 'function _updateContributedMenuItems(items: function)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.PopupMenuO._visible
    name: _visible
    fullName: _visible
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
