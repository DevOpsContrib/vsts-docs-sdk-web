### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType
    name: ExtensionQueryFilterType
    fullName: ExtensionQueryFilterType
    children:
      - vss-web-extension-sdk.ExtensionQueryFilterType.Tag
      - vss-web-extension-sdk.ExtensionQueryFilterType.DisplayName
      - vss-web-extension-sdk.ExtensionQueryFilterType.Private
      - vss-web-extension-sdk.ExtensionQueryFilterType.Id
      - vss-web-extension-sdk.ExtensionQueryFilterType.Category
      - vss-web-extension-sdk.ExtensionQueryFilterType.ContributionType
      - vss-web-extension-sdk.ExtensionQueryFilterType.Name
      - vss-web-extension-sdk.ExtensionQueryFilterType.InstallationTarget
      - vss-web-extension-sdk.ExtensionQueryFilterType.Featured
      - vss-web-extension-sdk.ExtensionQueryFilterType.SearchText
      - vss-web-extension-sdk.ExtensionQueryFilterType.FeaturedInCategory
      - vss-web-extension-sdk.ExtensionQueryFilterType.ExcludeWithFlags
      - vss-web-extension-sdk.ExtensionQueryFilterType.IncludeWithFlags
      - vss-web-extension-sdk.ExtensionQueryFilterType.Lcid
      - vss-web-extension-sdk.ExtensionQueryFilterType.InstallationTargetVersion
      - >-
        vss-web-extension-sdk.ExtensionQueryFilterType.InstallationTargetVersionRange
      - vss-web-extension-sdk.ExtensionQueryFilterType.VsixMetadata
    langs:
      - typeScript
    type: enum
    summary: Type of extension filters that are supported in the queries.
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.Tag
    name: Tag
    children: []
    langs:
      - typeScript
    summary: >-
      The values are used as tags. All tags are treated as "OR" conditions with
      each other. There may be some value put on the number of matched tags from
      the query.
    type: field
    numericValue: 1
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.DisplayName
    name: DisplayName
    children: []
    langs:
      - typeScript
    summary: >-
      The Values are an ExtensionName or fragment that is used to match other
      extension names.
    type: field
    numericValue: 2
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.Private
    name: Private
    children: []
    langs:
      - typeScript
    summary: >-
      The Filter is one or more tokens that define what scope to return private
      extensions for.
    type: field
    numericValue: 3
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.Id
    name: Id
    children: []
    langs:
      - typeScript
    summary: >-
      Retrieve a set of extensions based on their id's. The values should be the
      extension id's encoded as strings.
    type: field
    numericValue: 4
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.Category
    name: Category
    children: []
    langs:
      - typeScript
    summary: >-
      The catgeory is unlike other filters. It is AND'd with the other filters
      instead of being a seperate query.
    type: field
    numericValue: 5
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.ContributionType
    name: ContributionType
    children: []
    langs:
      - typeScript
    summary: >-
      Certain contribution types may be indexed to allow for query by type. User
      defined types can't be indexed at the moment.
    type: field
    numericValue: 6
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.Name
    name: Name
    children: []
    langs:
      - typeScript
    summary: >-
      Retrieve an set extension based on the name based identifier. This differs
      from the internal id (which is being deprecated).
    type: field
    numericValue: 7
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.InstallationTarget
    name: InstallationTarget
    children: []
    langs:
      - typeScript
    summary: >-
      The InstallationTarget for an extension defines the target consumer for
      the extension. This may be something like VS, VSOnline, or VSCode
    type: field
    numericValue: 8
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.Featured
    name: Featured
    children: []
    langs:
      - typeScript
    summary: >-
      Query for featured extensions, no value is allowed when using the query
      type.
    type: field
    numericValue: 9
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.SearchText
    name: SearchText
    children: []
    langs:
      - typeScript
    summary: The SearchText provided by the user to search for extensions
    type: field
    numericValue: 10
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.FeaturedInCategory
    name: FeaturedInCategory
    children: []
    langs:
      - typeScript
    summary: >-
      Query for extensions that are featured in their own category, The
      filterValue for this is name of category of extensions.
    type: field
    numericValue: 11
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.ExcludeWithFlags
    name: ExcludeWithFlags
    children: []
    langs:
      - typeScript
    summary: >-
      When retrieving extensions from a query, exclude the extensions which are
      having the given flags. The value specified for this filter should be a
      string representing the integer values of the flags to be excluded. In
      case of mulitple flags to be specified, a logical OR of the interger
      values should be given as value for this filter This should be at most one
      filter of this type. This only acts as a restrictive filter after. In case
      of having a particular flag in both IncludeWithFlags and ExcludeWithFlags,
      excludeFlags will remove the included extensions giving empty result for
      that flag.
    type: field
    numericValue: 12
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.IncludeWithFlags
    name: IncludeWithFlags
    children: []
    langs:
      - typeScript
    summary: >-
      When retrieving extensions from a query, include the extensions which are
      having the given flags. The value specified for this filter should be a
      string representing the integer values of the flags to be included. In
      case of mulitple flags to be specified, a logical OR of the interger
      values should be given as value for this filter This should be at most one
      filter of this type. This only acts as a restrictive filter after. In case
      of having a particular flag in both IncludeWithFlags and ExcludeWithFlags,
      excludeFlags will remove the included extensions giving empty result for
      that flag. In case of multiple flags given in IncludeWithFlags in ORed
      fashion, extensions having any of the given flags will be included.
    type: field
    numericValue: 13
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.Lcid
    name: Lcid
    children: []
    langs:
      - typeScript
    summary: >-
      Fitler the extensions based on the LCID values applicable. Any extensions
      which are not having any LCID values will also be filtered. This is
      currenlty only supported for VS extensions.
    type: field
    numericValue: 14
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.InstallationTargetVersion
    name: InstallationTargetVersion
    children: []
    langs:
      - typeScript
    summary: >-
      Filter to provide the version of the installation target. This filter will
      be used along with InstallationTarget filter. The value should be a valid
      version string. Currently supported only if search text is provided.
    type: field
    numericValue: 15
  - uid: >-
      vss-web-extension-sdk.ExtensionQueryFilterType.InstallationTargetVersionRange
    name: InstallationTargetVersionRange
    children: []
    langs:
      - typeScript
    summary: >-
      Filter type for specifying a range of installation target version. The
      filter will be used along with InstallationTarget filter. The value should
      be a pair of well formed version values separated by hyphen(-). Currently
      supported only if search text is provided.
    type: field
    numericValue: 16
  - uid: vss-web-extension-sdk.ExtensionQueryFilterType.VsixMetadata
    name: VsixMetadata
    children: []
    langs:
      - typeScript
    summary: >-
      Filter type for specifying metadata key and value to be used for
      filtering.
    type: field
    numericValue: 17
