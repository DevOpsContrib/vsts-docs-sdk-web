### YamlMime:UniversalReference
items:
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService
    name: INavigationHistoryService
    fullName: INavigationHistoryService
    children:
      - >-
        vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService.generateUrl
      - >-
        vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService.getCurrentRouteValues
      - >-
        vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService.getState
      - >-
        vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService.pushState
      - >-
        vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService.replaceState
      - >-
        vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService.subscribe
      - >-
        vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService.unsubscribe
    langs:
      - typeScript
    type: interface
    summary: Service to manage browser history and navigation state
    package: vss-web-extension-sdk
    module: VSS/Navigation/NavigationHistoryService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService.generateUrl
    name: >-
      generateUrl(state: [key: string]: string, mergeOptions?:
      StateMergeOptions)
    children: []
    langs:
      - typeScript
    summary: Generate a URL given the current navigation state values
    syntax:
      parameters:
        - id: state
          type:
            - '[key: string]: string'
          description: State values (query parameters and route values)
        - id: mergeOptions
          type:
            - StateMergeOptions
          description: >
            Options around whether the provided state just provides overrides
            for the current navigation
                   state or a full set of state values. The default is to merge with the current navigation state.
          optional: true
      content: >-
        function generateUrl(state: [key: string]: string, mergeOptions?:
        StateMergeOptions)
      return:
        type:
          - string
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService.getCurrentRouteValues
    name: getCurrentRouteValues()
    children: []
    langs:
      - typeScript
    summary: Get the current value for all the routeValues used for the current page.
    syntax:
      parameters: []
      content: function getCurrentRouteValues()
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService.getState
    name: getState()
    children: []
    langs:
      - typeScript
    summary: >-
      Get the current dictionary of all URL state parameters. This includes
      route values as well as query parameters.
    syntax:
      parameters: []
      content: function getState()
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService.pushState
    name: >-
      pushState(state: [key: string]: string, url?: string, routeId?: string,
      navigationElementId?: string)
    children: []
    langs:
      - typeScript
    summary: 'Adds a new history entry, updating the address bar with a new url'
    syntax:
      parameters:
        - id: state
          type:
            - '[key: string]: string'
          description: >-
            Optional set of current URL state parameters (route values and query
            parameters). If not specified, computed from the given url.
        - id: url
          type:
            - string
          description: >-
            Optional url to update the address bar with. If not specified,
            computed from the given state (and current page's route template).
          optional: true
        - id: routeId
          type:
            - string
          description: >-
            Optional route id to set for this entry. If not specified, the
            current page's route id is used.
          optional: true
        - id: navigationElementId
          type:
            - string
          description: >
            Optional id of the navigation element that this entry targets. If
            not specified the current page's hub id is used.
          optional: true
      content: >-
        function pushState(state: [key: string]: string, url?: string, routeId?:
        string, navigationElementId?: string)
      return:
        type:
          - any
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService.replaceState
    name: >-
      replaceState(state: [key: string]: string, url?: string, routeId?: string,
      navigationElementId?: string)
    children: []
    langs:
      - typeScript
    summary: >-
      Updates (replaces) the current history entry, optionally updating the
      address bar with a new url
    syntax:
      parameters:
        - id: state
          type:
            - '[key: string]: string'
          description: >-
            Optional set of current URL state parameters (route values and query
            parameters). If not specified, computed from the given url.
        - id: url
          type:
            - string
          description: >-
            Optional url to update the address bar with. If not specified,
            computed from the given state (and current page's route template).
          optional: true
        - id: routeId
          type:
            - string
          description: >-
            Optional route id to set for this entry. If not specified, the
            current page's route id is used.
          optional: true
        - id: navigationElementId
          type:
            - string
          description: >
            Optional id of the navigation element that this entry targets. If
            not specified the current page's hub id is used.
          optional: true
      content: >-
        function replaceState(state: [key: string]: string, url?: string,
        routeId?: string, navigationElementId?: string)
      return:
        type:
          - any
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService.subscribe
    name: 'subscribe(listener: function)'
    children: []
    langs:
      - typeScript
    summary: >-
      Subscribe to pop state events. The provided listener is invoked whenever a
      forward or back navigation

      has occurred to a push-state entry that this service is managing.
    syntax:
      parameters:
        - id: listener
          type: []
          description: |
            Method invoked when a forward or back navigation has occurred.
      content: 'function subscribe(listener: function)'
      return:
        type:
          - any
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryService.unsubscribe
    name: 'unsubscribe(listener: function)'
    children: []
    langs:
      - typeScript
    summary: Remove a pop-state listener.
    syntax:
      parameters:
        - id: listener
          type: []
          description: |
            Listener to remove.
      content: 'function unsubscribe(listener: function)'
      return:
        type:
          - any
    type: method
