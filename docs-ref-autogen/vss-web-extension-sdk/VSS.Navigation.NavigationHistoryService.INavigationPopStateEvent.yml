### YamlMime:UniversalReference
items:
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationPopStateEvent
    name: INavigationPopStateEvent
    fullName: INavigationPopStateEvent
    children:
      - >-
        vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationPopStateEvent.isNewRouteId
      - >-
        vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationPopStateEvent.newState
      - >-
        vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationPopStateEvent.oldState
    langs:
      - typeScript
    type: interface
    summary: >-
      Event triggered when a browser history entry has been popped (back or
      forward navigate)
    source:
      path: vss.d.ts
      startLine: 28752
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Navigation/NavigationHistoryService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationPopStateEvent.isNewRouteId
    name: isNewRouteId
    fullName: isNewRouteId
    children: []
    langs:
      - typeScript
    type: property
    summary: True if the new state has a different route id than the previous state.
    syntax:
      content: boolean isNewRouteId
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationPopStateEvent.newState
    name: newState
    fullName: newState
    children: []
    langs:
      - typeScript
    type: property
    summary: The new/current history entry
    syntax:
      content: >-
        @vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryEntry
        newState
      return:
        type:
          - >-
            @vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryEntry
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationPopStateEvent.oldState
    name: oldState
    fullName: oldState
    children: []
    langs:
      - typeScript
    type: property
    summary: The previous history entry that we navigated away from
    syntax:
      content: >-
        @vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryEntry
        oldState
      return:
        type:
          - >-
            @vss-web-extension-sdk.VSS.Navigation.NavigationHistoryService.INavigationHistoryEntry
