### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods3To4
    name: CommonMethods3To4
    fullName: CommonMethods3To4
    children:
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods3To4.assignExtensionToAllEligibleUsers
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods3To4.assignExtensionToUsers
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods3To4.constructor
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods3To4.getEligibleUsersForExtension
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods3To4.getExtensionsAssignedToUser
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods3To4.getExtensionStatusForUsers
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4'
    source:
      path: vss.d.ts
      startLine: 27921
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Licensing/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods3To4.assignExtensionToAllEligibleUsers
    name: 'assignExtensionToAllEligibleUsers(extensionId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Assigns the access to the given extension for all eligible
      users in the account that do not already have access to the extension
      though bundle or account assignment
    syntax:
      parameters:
        - id: extensionId
          type:
            - string
          description: The extension id to assign the access to.
      content: 'function assignExtensionToAllEligibleUsers(extensionId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Licensing.Contracts.ExtensionOperationResult[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods3To4.assignExtensionToUsers
    name: 'assignExtensionToUsers(body: ExtensionAssignment)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Assigns the access to the given extension for a given list
      of users
    syntax:
      parameters:
        - id: body
          type:
            - '@vss-web-extension-sdk.VSS.Licensing.Contracts.ExtensionAssignment'
          description: The extension assignment details.
      content: 'function assignExtensionToUsers(body: ExtensionAssignment)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Licensing.Contracts.ExtensionOperationResult[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods3To4.constructor
    name: >-
      CommonMethods3To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new CommonMethods3To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods3To4.getEligibleUsersForExtension
    name: >-
      getEligibleUsersForExtension(extensionId: string, options:
      ExtensionFilterOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns users that are currently eligible to assign the
      extension to. the list is filtered based on the value of
      ExtensionFilterOptions
    syntax:
      parameters:
        - id: extensionId
          type:
            - string
          description: The extension to check the eligibility of the users for.
        - id: options
          type:
            - ExtensionFilterOptions
          description: The options to filter the list.
      content: >-
        function getEligibleUsersForExtension(extensionId: string, options:
        ExtensionFilterOptions)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<string[]>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods3To4.getExtensionsAssignedToUser
    name: 'getExtensionsAssignedToUser(userId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns extensions that are currently assigned to the user
      in the account
    syntax:
      parameters:
        - id: userId
          type:
            - string
          description: The user's identity id.
      content: 'function getExtensionsAssignedToUser(userId: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<[key: string]: function>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods3To4.getExtensionStatusForUsers
    name: 'getExtensionStatusForUsers(extensionId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns extension assignment status of all account users for
      the given extension
    syntax:
      parameters:
        - id: extensionId
          type:
            - string
          description: The extension to check the status of the users for.
      content: 'function getExtensionStatusForUsers(extensionId: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<ExtensionAssignmentDetails>'
    type: method
