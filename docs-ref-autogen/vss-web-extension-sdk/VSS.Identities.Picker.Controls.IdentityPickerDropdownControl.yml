### YamlMime:UniversalReference
items:
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl
    name: IdentityPickerDropdownControl
    fullName: IdentityPickerDropdownControl
    children:
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.addIdentitiesToMru
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.cancelDelayedFunction
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.create
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.createIn
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.delayExecute
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.DROPDOWN_BASE_CLASS
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.enhance
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.ENHANCEMENTS_DATA_KEY
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.ENHANCEMENT_OPTIONPREFIX_KEY
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.ENHANCEMENT_OPTIONS_KEY
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.ensureEnhancement
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.ensureEnhancements
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.focus
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getElement
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getEnhancementOptions
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getId
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getIdentities
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getInstance
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getOptionPrefix
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getTypeName
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getTypeName
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.hide
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.HIDE_DROPDOWN_EVENT_INTERNAL
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.constructor
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.IMAGE_MARGINS_PX
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.initializeOptionsInternal
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.isDisposed
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.isFiltered
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.isVisible
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.optionsPrefix
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.registerEnhancement
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.registerJQueryWidget
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.setAttribute
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.setEnhancementOptions
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.setRole
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.show
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.SHOW_DROPDOWN_EVENT_INTERNAL
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.updatePrefix
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.UPDATE_ACTIVE_DESCENDANT_ID
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._bind
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._disposed
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._element
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._enhance
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._enhancementOptions
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._ensureInitialized
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._fire
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._fireChange
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._getEventNameSpace
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._getInDomPromise
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._getUniqueId
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._initialized
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._options
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._setElement
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._setId
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._unbind
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.addIdentitiesToMru
    name: 'addIdentitiesToMru(localIds: function)'
    children: []
    langs:
      - typeScript
    summary: Adds the identity to the querying identity's MRU
    syntax:
      parameters:
        - id: localIds
          type:
            - function
          description: ''
      content: 'function addIdentitiesToMru(localIds: function)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.cancelDelayedFunction
    name: 'cancelDelayedFunction(name: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Cancels any pending delayed functions (delayExecute calls) with the
      specified name
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: Name (supplied in the delayExecute call) of the operations to cancel
      content: 'function cancelDelayedFunction(name: string)'
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.create
    name: >-
      create(controlType: function, container: JQuery, controlOptions: TOptions,
      enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: Creates a the control specified by TControl in the given container.
    syntax:
      parameters:
        - id: controlType
          type: []
          description: ''
        - id: container
          type:
            - JQuery
          description: ''
        - id: controlOptions
          type:
            - TOptions
          description: ''
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function create(controlType: function, container: JQuery,
        controlOptions: TOptions, enhancementOptions?: EnhancementOptions)
      return:
        type:
          - TControl
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.createIn
    name: >-
      createIn(type?: any, container?: any, options?: TOptions, koCompatable?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: container
          type:
            - any
          description: ''
          optional: true
        - id: options
          type:
            - TOptions
          description: ''
          optional: true
        - id: koCompatable
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function createIn(type?: any, container?: any, options?: TOptions,
        koCompatable?: boolean)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Control
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.delayExecute
    name: >-
      delayExecute(name?: string, msDelay?: number, cancelPendingOps?: boolean,
      func?: Function)
    children: []
    langs:
      - typeScript
    summary: Executes the provided function after the specified amount of time
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: >-
            (Optional) Name for this operation. Allows subsequent calls to
            cancel this action.
          optional: true
        - id: msDelay
          type:
            - number
          description: Delay in milliseconds to wait before executing the Function
          optional: true
        - id: cancelPendingOps
          type:
            - boolean
          description: >-
            If true, cancel any pending requests with this name. If false, and
            there are outstanding requests with this name already in progress,
            then do nothing.
          optional: true
        - id: func
          type:
            - Function
          description: |
            Method to execute after the delay
          optional: true
      content: >-
        function delayExecute(name?: string, msDelay?: number,
        cancelPendingOps?: boolean, func?: Function)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.DROPDOWN_BASE_CLASS
    name: DROPDOWN_BASE_CLASS
    fullName: DROPDOWN_BASE_CLASS
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.enhance
    name: >-
      enhance(type: function, element: Enhancement, options?: function,
      enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type: []
          description: ''
        - id: element
          type:
            - Enhancement
          description: ''
        - id: options
          type:
            - function
          description: ''
          optional: true
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function enhance(type: function, element: Enhancement, options?:
        function, enhancementOptions?: EnhancementOptions)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.ENHANCEMENTS_DATA_KEY
    name: ENHANCEMENTS_DATA_KEY
    fullName: ENHANCEMENTS_DATA_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.ENHANCEMENT_OPTIONPREFIX_KEY
    name: ENHANCEMENT_OPTIONPREFIX_KEY
    fullName: ENHANCEMENT_OPTIONPREFIX_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.ENHANCEMENT_OPTIONS_KEY
    name: ENHANCEMENT_OPTIONS_KEY
    fullName: ENHANCEMENT_OPTIONS_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.ensureEnhancement
    name: 'ensureEnhancement(type?: any, context?: any, errorCallback?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: context
          type:
            - any
          description: ''
          optional: true
        - id: errorCallback
          type:
            - any
          description: ''
          optional: true
      content: >-
        function ensureEnhancement(type?: any, context?: any, errorCallback?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.ensureEnhancements
    name: 'ensureEnhancements(type?: any, context?: any, errorCallback?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: context
          type:
            - any
          description: ''
          optional: true
        - id: errorCallback
          type:
            - any
          description: ''
          optional: true
      content: >-
        function ensureEnhancements(type?: any, context?: any, errorCallback?:
        any)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.focus
    name: focus()
    children: []
    langs:
      - typeScript
    summary: Set Focus to the control
    syntax:
      parameters: []
      content: function focus()
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getElement
    name: getElement()
    children: []
    langs:
      - typeScript
    summary: Gets the element associated with this control.
    syntax:
      parameters: []
      content: function getElement()
      return:
        type:
          - JQuery
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getEnhancementOptions
    name: 'getEnhancementOptions(type: any, element: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
        - id: element
          type:
            - any
          description: |+

      content: 'function getEnhancementOptions(type: any, element: any)'
      return:
        type:
          - any
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getId
    name: getId()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getId()
      return:
        type:
          - string
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getIdentities
    name: 'getIdentities(prefix: string, selectFirstByDefault?: boolean)'
    children: []
    langs:
      - typeScript
    summary: Get Identities
    syntax:
      parameters:
        - id: prefix
          type:
            - string
          description: ''
        - id: selectFirstByDefault
          type:
            - boolean
          description: ''
          optional: true
      content: 'function getIdentities(prefix: string, selectFirstByDefault?: boolean)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getInstance
    name: 'getInstance(type?: any, element?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: element
          type:
            - any
          description: ''
          optional: true
      content: 'function getInstance(type?: any, element?: any)'
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getOptionPrefix
    name: 'getOptionPrefix(type: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
      content: 'function getOptionPrefix(type: any)'
      return:
        type:
          - string
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getTypeName
    name: getTypeName()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getTypeName()
      return:
        type:
          - string
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.getTypeName
    name: 'getTypeName(type?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
      content: 'function getTypeName(type?: any)'
      return:
        type:
          - string
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.hide
    name: 'hide(e?: JQueryEventObject, suppressHideEvent?: boolean)'
    children: []
    langs:
      - typeScript
    summary: Hide the dropdown
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
        - id: suppressHideEvent
          type:
            - boolean
          description: ''
          optional: true
      content: 'function hide(e?: JQueryEventObject, suppressHideEvent?: boolean)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.HIDE_DROPDOWN_EVENT_INTERNAL
    name: HIDE_DROPDOWN_EVENT_INTERNAL
    fullName: HIDE_DROPDOWN_EVENT_INTERNAL
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.constructor
    name: 'IdentityPickerDropdownControl(options?: IIdentityPickerDropdownOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - >-
              vss-web-extension-sdk.VSS.Identities.Picker.Controls.IIdentityPickerDropdownOptions
          description: ''
          optional: true
      content: >-
        new IdentityPickerDropdownControl(options?:
        IIdentityPickerDropdownOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.IMAGE_MARGINS_PX
    name: IMAGE_MARGINS_PX
    fullName: IMAGE_MARGINS_PX
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - number
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.initializeOptionsInternal
    name: 'initializeOptionsInternal(options?: IIdentityPickerDropdownOptions)'
    children: []
    langs:
      - typeScript
    summary: For internal / unit testing use only
    syntax:
      parameters:
        - id: options
          type:
            - >-
              vss-web-extension-sdk.VSS.Identities.Picker.Controls.IIdentityPickerDropdownOptions
          description: ''
          optional: true
      content: >-
        function initializeOptionsInternal(options?:
        IIdentityPickerDropdownOptions)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.isDisposed
    name: isDisposed()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function isDisposed()
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.isFiltered
    name: isFiltered()
    children: []
    langs:
      - typeScript
    summary: >-
      Returns true if the prefix was used for filtering the identities in the
      dropdown
    syntax:
      parameters: []
      content: function isFiltered()
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.isVisible
    name: isVisible()
    children: []
    langs:
      - typeScript
    summary: Returns true if the dropdown is currently being shown
    syntax:
      parameters: []
      content: function isVisible()
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.optionsPrefix
    name: optionsPrefix
    fullName: optionsPrefix
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.registerEnhancement
    name: >-
      registerEnhancement(type?: function, selector?: string, options?:
      TOptions, errorCallback?: IErrorCallback, enhancementOptions?:
      EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type: []
          description: ''
          optional: true
        - id: selector
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - TOptions
          description: ''
          optional: true
        - id: errorCallback
          type:
            - vss-web-extension-sdk.IErrorCallback
          description: |+

          optional: true
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function registerEnhancement(type?: function, selector?: string,
        options?: TOptions, errorCallback?: IErrorCallback, enhancementOptions?:
        EnhancementOptions)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.registerJQueryWidget
    name: >-
      registerJQueryWidget(type?: any, widgetName?: any, widgetOptions?:
      TOptions, enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: widgetName
          type:
            - any
          description: ''
          optional: true
        - id: widgetOptions
          type:
            - TOptions
          description: |+

          optional: true
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function registerJQueryWidget(type?: any, widgetName?: any,
        widgetOptions?: TOptions, enhancementOptions?: EnhancementOptions)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.setAttribute
    name: 'setAttribute(attribute: string, value: string, element?: JQuery)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets the attribute for the current control using the specified attribute
      name, value on the specified element.

      If no element specified, default element is used.
    syntax:
      parameters:
        - id: attribute
          type:
            - string
          description: Attribute name to set value.
        - id: value
          type:
            - string
          description: Attribute value to set.
        - id: element
          type:
            - JQuery
          description: |
            Element to apply the attribute (default is root element).
          optional: true
      content: >-
        function setAttribute(attribute: string, value: string, element?:
        JQuery)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.setEnhancementOptions
    name: 'setEnhancementOptions(enhancementOptions: EnhancementOptions)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets options related to the creation of this control or enhancement of an
      element as this control.

      Note: Options are merged.
    syntax:
      parameters:
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
      content: 'function setEnhancementOptions(enhancementOptions: EnhancementOptions)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.setRole
    name: 'setRole(role: string, element?: JQuery)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets the role for the current control using the specified role value on
      the specified element.

      If no element specified, default element is used.
    syntax:
      parameters:
        - id: role
          type:
            - string
          description: Role to assign.
        - id: element
          type:
            - JQuery
          description: |
            Element to apply the role (default is root element).
          optional: true
      content: 'function setRole(role: string, element?: JQuery)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.show
    name: show()
    children: []
    langs:
      - typeScript
    summary: Show the dropdown
    syntax:
      parameters: []
      content: function show()
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.SHOW_DROPDOWN_EVENT_INTERNAL
    name: SHOW_DROPDOWN_EVENT_INTERNAL
    fullName: SHOW_DROPDOWN_EVENT_INTERNAL
    children: []
    langs:
      - typeScript
    type: property
    summary: This is intended for usage by unit tests only
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.updatePrefix
    name: 'updatePrefix(prefix: string)'
    children: []
    langs:
      - typeScript
    summary: Set the prefix but does not update the list
    syntax:
      parameters:
        - id: prefix
          type:
            - string
          description: ''
      content: 'function updatePrefix(prefix: string)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl.UPDATE_ACTIVE_DESCENDANT_ID
    name: UPDATE_ACTIVE_DESCENDANT_ID
    fullName: UPDATE_ACTIVE_DESCENDANT_ID
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._bind
    name: '_bind(element?: any, eventType?: any, handler?: any, track?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: handler
          type:
            - any
          description: ''
          optional: true
        - id: track
          type:
            - any
          description: |+

          optional: true
      content: >-
        function _bind(element?: any, eventType?: any, handler?: any, track?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._disposed
    name: _disposed
    fullName: _disposed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._element
    name: _element
    fullName: _element
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - JQuery
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._enhance
    name: '_enhance(element: JQuery)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - JQuery
          description: |+

      content: 'function _enhance(element: JQuery)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._enhancementOptions
    name: _enhancementOptions
    fullName: _enhancementOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._ensureInitialized
    name: _ensureInitialized()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _ensureInitialized()
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._fire
    name: '_fire(element?: any, eventType?: any, args?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: args
          type:
            - any
          description: |+

          optional: true
      content: 'function _fire(element?: any, eventType?: any, args?: any)'
      return:
        type:
          - any
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._fireChange
    name: '_fireChange(sender?: any)'
    children: []
    langs:
      - typeScript
    summary: Fires the change event for the control immediately
    syntax:
      parameters:
        - id: sender
          type:
            - any
          description: |
            Source element of the event
          optional: true
      content: 'function _fireChange(sender?: any)'
      return:
        type:
          - any
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._getEventNameSpace
    name: _getEventNameSpace()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _getEventNameSpace()
      return:
        type:
          - string
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._getInDomPromise
    name: _getInDomPromise()
    children: []
    langs:
      - typeScript
    summary: |-
      Get a promise that is resolved once the containing element for this
      control has been added to the DOM hierarchy.
    syntax:
      parameters: []
      content: function _getInDomPromise()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._getUniqueId
    name: _getUniqueId()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _getUniqueId()
      return:
        type:
          - string
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._initialized
    name: _initialized
    fullName: _initialized
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._options
    name: _options
    fullName: _options
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - >-
            vss-web-extension-sdk.VSS.Identities.Picker.Controls.IIdentityPickerDropdownOptions
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._setElement
    name: '_setElement(element: JQuery)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - JQuery
          description: |+

      content: 'function _setElement(element: JQuery)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._setId
    name: '_setId(id: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: |+

      content: 'function _setId(id: string)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerDropdownControl._unbind
    name: '_unbind(element?: any, eventType?: any, handler?: any, track?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: handler
          type:
            - any
          description: ''
          optional: true
        - id: track
          type:
            - any
          description: |+

          optional: true
      content: >-
        function _unbind(element?: any, eventType?: any, handler?: any, track?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
