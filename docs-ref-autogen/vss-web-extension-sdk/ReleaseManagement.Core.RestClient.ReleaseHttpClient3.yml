### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.ReleaseManagement.Core.RestClient.ReleaseHttpClient3
    name: ReleaseHttpClient3
    fullName: ReleaseHttpClient3
    children:
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.RestClient.ReleaseHttpClient3.getQueuedReleases
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.RestClient.ReleaseHttpClient3.getReleases
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.RestClient.ReleaseHttpClient3.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - >-
        @vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3To4
    source:
      path: rmo.d.ts
      startLine: 3022
      remote:
        path: typings\rmo.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: ReleaseManagement/Core/RestClient
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.ReleaseHttpClient3.getQueuedReleases
    name: 'getQueuedReleases(projectId?: string, releaseId?: number)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns throttled queue as per the task hub license of
      parallel releases
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
          optional: true
        - id: releaseId
          type:
            - number
          description: ''
          optional: true
      content: 'function getQueuedReleases(projectId?: string, releaseId?: number)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.ReleaseManagement.Core.Contracts.QueuedReleaseData[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.ReleaseHttpClient3.getReleases
    name: >-
      getReleases(project: string, definitionId?: number,
      definitionEnvironmentId?: number, searchText?: string, createdBy?: string,
      statusFilter?: ReleaseStatus, environmentStatusFilter?: number,
      minCreatedTime?: Date, maxCreatedTime?: Date, queryOrder?:
      ReleaseQueryOrder, top?: number, continuationToken?: number, expand?:
      ReleaseExpands, artifactTypeId?: string, sourceId?: string,
      artifactVersionId?: string, sourceBranchFilter?: string, isDeleted?:
      boolean, tagFilter?: string[], propertyFilters?: string[])
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get Releases'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: Releases from this release definition Id.
          optional: true
        - id: definitionEnvironmentId
          type:
            - number
          description: ''
          optional: true
        - id: searchText
          type:
            - string
          description: Releases with names starting with searchText.
          optional: true
        - id: createdBy
          type:
            - string
          description: Releases created by this user.
          optional: true
        - id: statusFilter
          type:
            - ReleaseStatus
          description: Releases that have this status.
          optional: true
        - id: environmentStatusFilter
          type:
            - number
          description: ''
          optional: true
        - id: minCreatedTime
          type:
            - Date
          description: Releases that were created after this time.
          optional: true
        - id: maxCreatedTime
          type:
            - Date
          description: Releases that were created before this time.
          optional: true
        - id: queryOrder
          type:
            - ReleaseQueryOrder
          description: >-
            Gets the results in the defined order of created date for releases.
            Default is descending.
          optional: true
        - id: top
          type:
            - number
          description: Number of releases to get. Default is 50.
          optional: true
        - id: continuationToken
          type:
            - number
          description: Gets the releases after the continuation token provided.
          optional: true
        - id: expand
          type:
            - ReleaseExpands
          description: The property that should be expanded in the list of releases.
          optional: true
        - id: artifactTypeId
          type:
            - string
          description: >-
            Releases with given artifactTypeId will be returned. Values can be
            Build, Jenkins, GitHub, Nuget, Team Build (external),
            ExternalTFSBuild, Git, TFVC, ExternalTfsXamlBuild.
          optional: true
        - id: sourceId
          type:
            - string
          description: >-
            Unique identifier of the artifact used. e.g. For build it would be
            {projectGuid}:{BuildDefinitionId}, for Jenkins it would be
            {JenkinsConnectionId}:{JenkinsDefinitionId}, for TfsOnPrem it would
            be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}.
            For third-party artifacts e.g. TeamCity, BitBucket you may refer
            'uniqueSourceIdentifier' inside vss-extension.json
            https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.
          optional: true
        - id: artifactVersionId
          type:
            - string
          description: >-
            Releases with given artifactVersionId will be returned. E.g. in case
            of Build artifactType, it is buildId.
          optional: true
        - id: sourceBranchFilter
          type:
            - string
          description: Releases with given sourceBranchFilter will be returned.
          optional: true
        - id: isDeleted
          type:
            - boolean
          description: 'Gets the soft deleted releases, if true.'
          optional: true
        - id: tagFilter
          type:
            - 'string[]'
          description: >-
            A comma-delimited list of tags. Only releases with these tags will
            be returned.
          optional: true
        - id: propertyFilters
          type:
            - 'string[]'
          description: A comma-delimited list of extended properties to retrieve.
          optional: true
      content: >-
        function getReleases(project: string, definitionId?: number,
        definitionEnvironmentId?: number, searchText?: string, createdBy?:
        string, statusFilter?: ReleaseStatus, environmentStatusFilter?: number,
        minCreatedTime?: Date, maxCreatedTime?: Date, queryOrder?:
        ReleaseQueryOrder, top?: number, continuationToken?: number, expand?:
        ReleaseExpands, artifactTypeId?: string, sourceId?: string,
        artifactVersionId?: string, sourceBranchFilter?: string, isDeleted?:
        boolean, tagFilter?: string[], propertyFilters?: string[])
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.ReleaseManagement.Core.Contracts.Release[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.ReleaseHttpClient3.constructor
    name: >-
      ReleaseHttpClient3(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new ReleaseHttpClient3(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
