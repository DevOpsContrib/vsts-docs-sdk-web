### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource
    name: TreeDataSource
    fullName: TreeDataSource
    children:
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.collapseNode
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.expandNode
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.getItemIndex
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.getItemText
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.prepareSource
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.root
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.setSource
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.constructor
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.updateItemsFromSource
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.Controls.BaseDataSource'
    source:
      path: vss.d.ts
      startLine: 17332
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/TreeView
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.collapseNode
    name: 'collapseNode(node: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: node
          type:
            - any
          description: ''
      content: 'function collapseNode(node: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.expandNode
    name: 'expandNode(node: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: node
          type:
            - any
          description: ''
      content: 'function expandNode(node: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.getItemIndex
    name: 'getItemIndex(itemText: any, startsWith?: any, all?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: itemText
          type:
            - any
          description: ''
        - id: startsWith
          type:
            - any
          description: ''
          optional: true
        - id: all
          type:
            - any
          description: |+

          optional: true
      content: 'function getItemIndex(itemText: any, startsWith?: any, all?: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.getItemText
    name: 'getItemText(index: any, all?: any, textOnly?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: index
          type:
            - any
          description: ''
        - id: all
          type:
            - any
          description: ''
          optional: true
        - id: textOnly
          type:
            - any
          description: ''
          optional: true
      content: 'function getItemText(index: any, all?: any, textOnly?: any)'
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.prepareSource
    name: 'prepareSource(source?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: source
          type:
            - any
          description: |+

          optional: true
      content: 'function prepareSource(source?: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.root
    name: root
    fullName: root
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.setSource
    name: 'setSource(source: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: source
          type:
            - any
          description: ''
      content: 'function setSource(source: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.constructor
    name: 'TreeDataSource(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'new TreeDataSource(options?: any)'
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TreeView.TreeDataSource.updateItemsFromSource
    name: updateItemsFromSource()
    children: []
    langs:
      - typeScript
    summary: Update the flat content representation from the current tree
    syntax:
      parameters: []
      content: function updateItemsFromSource()
    type: method
