### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Flux.AsyncLoadedComponent.Global
    package: vss-web-extension-sdk
    name: Global
    module: VSS/Flux/AsyncLoadedComponent
    children:
      - >-
        vss-web-extension-sdk.VSS.Flux.AsyncLoadedComponent.getAsyncLoadedComponent
    type: package
    langs:
      - typeScript
  - uid: >-
      vss-web-extension-sdk.VSS.Flux.AsyncLoadedComponent.getAsyncLoadedComponent
    name: getAsyncLoadedComponent
    children: []
    type: function
    langs:
      - typeScript
    summary: Create a method returning a delay loaded component instance
    syntax:
      content: >-
        function getAsyncLoadedComponent<TProps>(modules: string[],
        moduleComponentSelector: ModuleComponentSelector<TProps>,
        componentWhileLoading?: () => Element, onLoadStart?: () => void,
        onLoadEnd?: () => void)
      parameters:
        - id: modules
          type:
            - 'string[]'
          description: Paths of modules to load
        - id: moduleComponentSelector
          type:
            - ModuleComponentSelector<TProps>
          description: >-
            Selector function, given the imported modules to return the
            type/constructor method to create
                                           the desired component.
        - id: componentWhileLoading
          type:
            - () => Element
          description: Optional function to return a component to display while loading
          optional: true
        - id: onLoadStart
          type:
            - () => void
          description: >-
            Optional callback function that will be called once the component
            async load starts
          optional: true
        - id: onLoadEnd
          type:
            - () => void
          description: >
            Optional callback function that will be called once the component
            async load ends
          optional: true
    module: VSS/Flux/AsyncLoadedComponent
