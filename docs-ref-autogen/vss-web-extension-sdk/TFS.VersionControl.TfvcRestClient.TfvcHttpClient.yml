### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient
    name: TfvcHttpClient
    fullName: TfvcHttpClient
    children:
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.authTokenManager
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.branchesApiVersion
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.changesetChangesApiVersion
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.changesetsApiVersion
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.changesetsBatchApiVersion
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.changesetWorkItemsApiVersion
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.createChangeset
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.forceOptionsCallForAutoNegotiate
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getBatchedChangesets
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getBranch
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getBranches
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getBranchRefs
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getChangeset
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getChangesetChanges
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getChangesets
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getChangesetWorkItems
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getItem
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getItemContent
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getItems
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getItemsBatch
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getItemsBatchZip
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getItemText
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getItemZip
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getLabel
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getLabelItems
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getLabels
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getShelveset
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getShelvesetChanges
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getShelvesets
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getShelvesetWorkItems
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.itemBatchApiVersion
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.itemsApiVersion
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.labelItemsApiVersion
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.labelsApiVersion
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.serviceInstanceId
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.shelvesetChangesApiVersion
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.shelvesetsApiVersion
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.shelvesetWorkItemsApiVersion
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.constructor
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient._beginGetLocation
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient._beginRequest
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient._beginRequestWithAjaxResult
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient._issueAjaxRequest
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient._rootRequestPath
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: TFS/VersionControl/TfvcRestClient
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.authTokenManager
    name: authTokenManager
    fullName: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.branchesApiVersion
    name: branchesApiVersion
    fullName: branchesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.changesetChangesApiVersion
    name: changesetChangesApiVersion
    fullName: changesetChangesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.changesetsApiVersion
    name: changesetsApiVersion
    fullName: changesetsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.changesetsBatchApiVersion
    name: changesetsBatchApiVersion
    fullName: changesetsBatchApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.changesetWorkItemsApiVersion
    name: changesetWorkItemsApiVersion
    fullName: changesetWorkItemsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.createChangeset
    name: 'createChangeset(changeset: TfvcChangeset, project?: string)'
    children: []
    langs:
      - typeScript
    summary: Create a new changeset.
    syntax:
      parameters:
        - id: changeset
          type:
            - vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcChangeset
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function createChangeset(changeset: TfvcChangeset, project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    fullName: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getBatchedChangesets
    name: 'getBatchedChangesets(changesetsRequestData: TfvcChangesetsRequestData)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: changesetsRequestData
          type:
            - >-
              vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcChangesetsRequestData
          description: ''
      content: >-
        function getBatchedChangesets(changesetsRequestData:
        TfvcChangesetsRequestData)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getBranch
    name: >-
      getBranch(path: string, project?: string, includeParent?: boolean,
      includeChildren?: boolean)
    children: []
    langs:
      - typeScript
    summary: >-
      Get a single branch hierarchy at the given path with parents or children
      (if specified)
    syntax:
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: includeParent
          type:
            - boolean
          description: ''
          optional: true
        - id: includeChildren
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getBranch(path: string, project?: string, includeParent?:
        boolean, includeChildren?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getBranches
    name: >-
      getBranches(project?: string, includeParent?: boolean, includeChildren?:
      boolean, includeDeleted?: boolean, includeLinks?: boolean)
    children: []
    langs:
      - typeScript
    summary: >-
      Get a collection of branch roots -- first-level children, branches with no
      parents
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: includeParent
          type:
            - boolean
          description: ''
          optional: true
        - id: includeChildren
          type:
            - boolean
          description: ''
          optional: true
        - id: includeDeleted
          type:
            - boolean
          description: ''
          optional: true
        - id: includeLinks
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getBranches(project?: string, includeParent?: boolean,
        includeChildren?: boolean, includeDeleted?: boolean, includeLinks?:
        boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getBranchRefs
    name: >-
      getBranchRefs(scopePath: string, project?: string, includeDeleted?:
      boolean, includeLinks?: boolean)
    children: []
    langs:
      - typeScript
    summary: Get branch hierarchies below the specified scopePath
    syntax:
      parameters:
        - id: scopePath
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: includeDeleted
          type:
            - boolean
          description: ''
          optional: true
        - id: includeLinks
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getBranchRefs(scopePath: string, project?: string,
        includeDeleted?: boolean, includeLinks?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getChangeset
    name: >-
      getChangeset(id: number, project?: string, maxChangeCount?: number,
      includeDetails?: boolean, includeWorkItems?: boolean, maxCommentLength?:
      number, includeSourceRename?: boolean, skip?: number, top?: number,
      orderby?: string, searchCriteria?: TfvcChangesetSearchCriteria)
    children: []
    langs:
      - typeScript
    summary: Retrieve a Tfvc Changeset
    syntax:
      parameters:
        - id: id
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: maxChangeCount
          type:
            - number
          description: ''
          optional: true
        - id: includeDetails
          type:
            - boolean
          description: ''
          optional: true
        - id: includeWorkItems
          type:
            - boolean
          description: ''
          optional: true
        - id: maxCommentLength
          type:
            - number
          description: ''
          optional: true
        - id: includeSourceRename
          type:
            - boolean
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: orderby
          type:
            - string
          description: ''
          optional: true
        - id: searchCriteria
          type:
            - >-
              vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcChangesetSearchCriteria
          description: ''
          optional: true
      content: >-
        function getChangeset(id: number, project?: string, maxChangeCount?:
        number, includeDetails?: boolean, includeWorkItems?: boolean,
        maxCommentLength?: number, includeSourceRename?: boolean, skip?: number,
        top?: number, orderby?: string, searchCriteria?:
        TfvcChangesetSearchCriteria)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getChangesetChanges
    name: 'getChangesetChanges(id?: number, skip?: number, top?: number)'
    children: []
    langs:
      - typeScript
    summary: Retrieve Tfvc changes for a given changeset
    syntax:
      parameters:
        - id: id
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
      content: 'function getChangesetChanges(id?: number, skip?: number, top?: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getChangesets
    name: >-
      getChangesets(project?: string, maxCommentLength?: number, skip?: number,
      top?: number, orderby?: string, searchCriteria?:
      TfvcChangesetSearchCriteria)
    children: []
    langs:
      - typeScript
    summary: >-
      Retrieve Tfvc changesets Note: This is a new version of the GetChangesets
      API that doesn't expose the unneeded queryParams present in the 1.0
      version of the API.
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: maxCommentLength
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: orderby
          type:
            - string
          description: ''
          optional: true
        - id: searchCriteria
          type:
            - >-
              vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcChangesetSearchCriteria
          description: ''
          optional: true
      content: >-
        function getChangesets(project?: string, maxCommentLength?: number,
        skip?: number, top?: number, orderby?: string, searchCriteria?:
        TfvcChangesetSearchCriteria)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getChangesetWorkItems
    name: 'getChangesetWorkItems(id?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - number
          description: ''
          optional: true
      content: 'function getChangesetWorkItems(id?: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getItem
    name: >-
      getItem(path: string, project?: string, fileName?: string, download?:
      boolean, scopePath?: string, recursionLevel?: VersionControlRecursionType,
      versionDescriptor?: TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    syntax:
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: ''
          optional: true
        - id: download
          type:
            - boolean
          description: ''
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - VersionControlRecursionType
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - >-
              vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcVersionDescriptor
          description: ''
          optional: true
      content: >-
        function getItem(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getItemContent
    name: >-
      getItemContent(path: string, project?: string, fileName?: string,
      download?: boolean, scopePath?: string, recursionLevel?:
      VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    syntax:
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: ''
          optional: true
        - id: download
          type:
            - boolean
          description: ''
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - VersionControlRecursionType
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - >-
              vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcVersionDescriptor
          description: ''
          optional: true
      content: >-
        function getItemContent(path: string, project?: string, fileName?:
        string, download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getItems
    name: >-
      getItems(project?: string, scopePath?: string, recursionLevel?:
      VersionControlRecursionType, includeLinks?: boolean, versionDescriptor?:
      TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: Get a list of Tfvc items
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - VersionControlRecursionType
          description: ''
          optional: true
        - id: includeLinks
          type:
            - boolean
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - >-
              vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcVersionDescriptor
          description: ''
          optional: true
      content: >-
        function getItems(project?: string, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, includeLinks?: boolean, versionDescriptor?:
        TfvcVersionDescriptor)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getItemsBatch
    name: 'getItemsBatch(itemRequestData: TfvcItemRequestData, project?: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Post for retrieving a set of items given a list of paths or a long path.
      Allows for specifying the recursionLevel and version descriptors for each
      path.
    syntax:
      parameters:
        - id: itemRequestData
          type:
            - >-
              vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcItemRequestData
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getItemsBatch(itemRequestData: TfvcItemRequestData, project?:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getItemsBatchZip
    name: 'getItemsBatchZip(itemRequestData: TfvcItemRequestData, project?: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Post for retrieving a set of items given a list of paths or a long path.
      Allows for specifying the recursionLevel and version descriptors for each
      path.
    syntax:
      parameters:
        - id: itemRequestData
          type:
            - >-
              vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcItemRequestData
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getItemsBatchZip(itemRequestData: TfvcItemRequestData,
        project?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getItemText
    name: >-
      getItemText(path: string, project?: string, fileName?: string, download?:
      boolean, scopePath?: string, recursionLevel?: VersionControlRecursionType,
      versionDescriptor?: TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    syntax:
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: ''
          optional: true
        - id: download
          type:
            - boolean
          description: ''
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - VersionControlRecursionType
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - >-
              vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcVersionDescriptor
          description: ''
          optional: true
      content: >-
        function getItemText(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getItemZip
    name: >-
      getItemZip(path: string, project?: string, fileName?: string, download?:
      boolean, scopePath?: string, recursionLevel?: VersionControlRecursionType,
      versionDescriptor?: TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    syntax:
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: ''
          optional: true
        - id: download
          type:
            - boolean
          description: ''
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - VersionControlRecursionType
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - >-
              vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcVersionDescriptor
          description: ''
          optional: true
      content: >-
        function getItemZip(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getLabel
    name: >-
      getLabel(labelId: string, requestData: TfvcLabelRequestData, project?:
      string)
    children: []
    langs:
      - typeScript
    summary: Get a single deep label.
    syntax:
      parameters:
        - id: labelId
          type:
            - string
          description: Unique identifier of label
        - id: requestData
          type:
            - >-
              vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcLabelRequestData
          description: maxItemCount
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getLabel(labelId: string, requestData: TfvcLabelRequestData,
        project?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getLabelItems
    name: 'getLabelItems(labelId: string, top?: number, skip?: number)'
    children: []
    langs:
      - typeScript
    summary: Get items under a label.
    syntax:
      parameters:
        - id: labelId
          type:
            - string
          description: Unique identifier of label
        - id: top
          type:
            - number
          description: Max number of items to return
          optional: true
        - id: skip
          type:
            - number
          description: Number of items to skip
          optional: true
      content: 'function getLabelItems(labelId: string, top?: number, skip?: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getLabels
    name: >-
      getLabels(requestData: TfvcLabelRequestData, project?: string, top?:
      number, skip?: number)
    children: []
    langs:
      - typeScript
    summary: Get a collection of shallow label references.
    syntax:
      parameters:
        - id: requestData
          type:
            - >-
              vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcLabelRequestData
          description: 'labelScope, name, owner, and itemLabelFilter'
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: top
          type:
            - number
          description: Max number of labels to return
          optional: true
        - id: skip
          type:
            - number
          description: Number of labels to skip
          optional: true
      content: >-
        function getLabels(requestData: TfvcLabelRequestData, project?: string,
        top?: number, skip?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getShelveset
    name: 'getShelveset(shelvesetId: string, requestData?: TfvcShelvesetRequestData)'
    children: []
    langs:
      - typeScript
    summary: Get a single deep shelveset.
    syntax:
      parameters:
        - id: shelvesetId
          type:
            - string
          description: Shelveset's unique ID
        - id: requestData
          type:
            - >-
              vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcShelvesetRequestData
          description: >-
            includeDetails, includeWorkItems, maxChangeCount, and
            maxCommentLength
          optional: true
      content: >-
        function getShelveset(shelvesetId: string, requestData?:
        TfvcShelvesetRequestData)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getShelvesetChanges
    name: 'getShelvesetChanges(shelvesetId: string, top?: number, skip?: number)'
    children: []
    langs:
      - typeScript
    summary: Get changes included in a shelveset.
    syntax:
      parameters:
        - id: shelvesetId
          type:
            - string
          description: Shelveset's unique ID
        - id: top
          type:
            - number
          description: Max number of changes to return
          optional: true
        - id: skip
          type:
            - number
          description: Number of changes to skip
          optional: true
      content: >-
        function getShelvesetChanges(shelvesetId: string, top?: number, skip?:
        number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getShelvesets
    name: >-
      getShelvesets(requestData?: TfvcShelvesetRequestData, top?: number, skip?:
      number)
    children: []
    langs:
      - typeScript
    summary: Return a collection of shallow shelveset references.
    syntax:
      parameters:
        - id: requestData
          type:
            - >-
              vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcShelvesetRequestData
          description: 'name, owner, and maxCommentLength'
          optional: true
        - id: top
          type:
            - number
          description: Max number of shelvesets to return
          optional: true
        - id: skip
          type:
            - number
          description: Number of shelvesets to skip
          optional: true
      content: >-
        function getShelvesets(requestData?: TfvcShelvesetRequestData, top?:
        number, skip?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.getShelvesetWorkItems
    name: 'getShelvesetWorkItems(shelvesetId: string)'
    children: []
    langs:
      - typeScript
    summary: Get work items associated with a shelveset.
    syntax:
      parameters:
        - id: shelvesetId
          type:
            - string
          description: Shelveset's unique ID
      content: 'function getShelvesetWorkItems(shelvesetId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.itemBatchApiVersion
    name: itemBatchApiVersion
    fullName: itemBatchApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.itemsApiVersion
    name: itemsApiVersion
    fullName: itemsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.labelItemsApiVersion
    name: labelItemsApiVersion
    fullName: labelItemsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.labelsApiVersion
    name: labelsApiVersion
    fullName: labelsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.shelvesetChangesApiVersion
    name: shelvesetChangesApiVersion
    fullName: shelvesetChangesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.shelvesetsApiVersion
    name: shelvesetsApiVersion
    fullName: shelvesetsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.shelvesetWorkItemsApiVersion
    name: shelvesetWorkItemsApiVersion
    fullName: shelvesetWorkItemsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient.constructor
    name: 'TfvcHttpClient(rootRequestPath: string, options?: IVssHttpClientOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new TfvcHttpClient(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vssRequestOptions
          type:
            - vss-web-extension-sdk.IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient._rootRequestPath
    name: _rootRequestPath
    fullName: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.TfvcHttpClient._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: promise
          type:
            - vss-web-extension-sdk.IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
