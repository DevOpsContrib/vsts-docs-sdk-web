### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Utils.Core.Cancelable
    name: Cancelable
    fullName: Cancelable
    children:
      - vss-web-extension-sdk.VSS.Utils.Core.Cancelable.cancel
      - vss-web-extension-sdk.VSS.Utils.Core.Cancelable.constructor
      - vss-web-extension-sdk.VSS.Utils.Core.Cancelable.canceled
      - vss-web-extension-sdk.VSS.Utils.Core.Cancelable.context
      - vss-web-extension-sdk.VSS.Utils.Core.Cancelable.perform
      - vss-web-extension-sdk.VSS.Utils.Core.Cancelable.register
      - vss-web-extension-sdk.VSS.Utils.Core.Cancelable.wrap
    langs:
      - typeScript
    type: class
    summary: ''
    source:
      path: vss.d.ts
      startLine: 33081
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Utils/Core
  - uid: vss-web-extension-sdk.VSS.Utils.Core.Cancelable.cancel
    name: cancel
    children: []
    type: method
    langs:
      - typeScript
    summary: Cancel the operation.
    syntax:
      content: function cancel()
      parameters: []
    module: VSS/Utils/Core
  - uid: vss-web-extension-sdk.VSS.Utils.Core.Cancelable.constructor
    name: Cancelable
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Manage cancellable operations.
    syntax:
      content: 'new Cancelable(context: any)'
      parameters:
        - id: context
          type:
            - any
          description: |
            The context for the cancellable operation.
            The context is passed to actions when they are called.
    module: VSS/Utils/Core
  - uid: vss-web-extension-sdk.VSS.Utils.Core.Cancelable.canceled
    name: canceled
    fullName: canceled
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean canceled
      return:
        type:
          - boolean
    module: VSS/Utils/Core
  - uid: vss-web-extension-sdk.VSS.Utils.Core.Cancelable.context
    name: context
    fullName: context
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: any context
      return:
        type:
          - any
    module: VSS/Utils/Core
  - uid: vss-web-extension-sdk.VSS.Utils.Core.Cancelable.perform
    name: perform
    children: []
    type: method
    langs:
      - typeScript
    summary: Perform the action if not cancelled.
    syntax:
      content: 'function perform(action: Function)'
      parameters:
        - id: action
          type:
            - Function
          description: |
            The action to call if the current operation has not been cancelled.
    module: VSS/Utils/Core
  - uid: vss-web-extension-sdk.VSS.Utils.Core.Cancelable.register
    name: register
    children: []
    type: method
    langs:
      - typeScript
    summary: Register a callback to be called when the object is cancelled.
    syntax:
      content: 'function register(callback: Function)'
      parameters:
        - id: callback
          type:
            - Function
          description: |
            The callback function.
    module: VSS/Utils/Core
  - uid: vss-web-extension-sdk.VSS.Utils.Core.Cancelable.wrap
    name: wrap
    children: []
    type: method
    langs:
      - typeScript
    summary: Wrap an action to make it cancellable.
    syntax:
      content: 'function wrap(action: Function)'
      parameters:
        - id: action
          type:
            - Function
          description: The action to wrap.
      return:
        type:
          - Function
    module: VSS/Utils/Core
