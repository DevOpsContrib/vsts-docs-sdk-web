### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.CoreHttpClient4
    name: CoreHttpClient4
    fullName: CoreHttpClient4
    children:
      - vss-web-extension-sdk.CoreHttpClient4.constructor
      - vss-web-extension-sdk.CoreHttpClient4.createConnectedService
      - vss-web-extension-sdk.CoreHttpClient4.createIdentityMru
      - vss-web-extension-sdk.CoreHttpClient4.createOrUpdateProxy
      - vss-web-extension-sdk.CoreHttpClient4.createTeam
      - vss-web-extension-sdk.CoreHttpClient4.deleteIdentityMru
      - vss-web-extension-sdk.CoreHttpClient4.deleteProxy
      - vss-web-extension-sdk.CoreHttpClient4.deleteTeam
      - vss-web-extension-sdk.CoreHttpClient4.getConnectedServiceDetails
      - vss-web-extension-sdk.CoreHttpClient4.getConnectedServices
      - vss-web-extension-sdk.CoreHttpClient4.getIdentityMru
      - vss-web-extension-sdk.CoreHttpClient4.getProcessById
      - vss-web-extension-sdk.CoreHttpClient4.getProcesses
      - vss-web-extension-sdk.CoreHttpClient4.getProject
      - vss-web-extension-sdk.CoreHttpClient4.getProjectCollection
      - vss-web-extension-sdk.CoreHttpClient4.getProjectCollections
      - vss-web-extension-sdk.CoreHttpClient4.getProjectHistoryEntries
      - vss-web-extension-sdk.CoreHttpClient4.getProjectProperties
      - vss-web-extension-sdk.CoreHttpClient4.getProjects
      - vss-web-extension-sdk.CoreHttpClient4.getProxies
      - vss-web-extension-sdk.CoreHttpClient4.getTeam
      - vss-web-extension-sdk.CoreHttpClient4.getTeamMembers
      - vss-web-extension-sdk.CoreHttpClient4.getTeams
      - vss-web-extension-sdk.CoreHttpClient4.queueCreateProject
      - vss-web-extension-sdk.CoreHttpClient4.queueDeleteProject
      - vss-web-extension-sdk.CoreHttpClient4.setProjectProperties
      - vss-web-extension-sdk.CoreHttpClient4.updateIdentityMru
      - vss-web-extension-sdk.CoreHttpClient4.updateProject
      - vss-web-extension-sdk.CoreHttpClient4.updateTeam
      - vss-web-extension-sdk.CoreHttpClient4._beginGetLocation
      - vss-web-extension-sdk.CoreHttpClient4._beginRequest
      - vss-web-extension-sdk.CoreHttpClient4._beginRequestWithAjaxResult
      - vss-web-extension-sdk.CoreHttpClient4._issueAjaxRequest
      - vss-web-extension-sdk.CoreHttpClient4._setInitializationPromise
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vss-web-extension-sdk.CoreHttpClient4.constructor
    name: 'CoreHttpClient4(rootRequestPath: string, options?: IVssHttpClientOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new CoreHttpClient4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      return:
        type:
          - CoreHttpClient4
    type: constructor
  - uid: vss-web-extension-sdk.CoreHttpClient4.createConnectedService
    name: >-
      createConnectedService(connectedServiceCreationData:
      WebApiConnectedServiceDetails, projectId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: connectedServiceCreationData
          type:
            - WebApiConnectedServiceDetails
          description: ''
        - id: projectId
          type:
            - string
          description: ''
      content: >-
        function createConnectedService(connectedServiceCreationData:
        WebApiConnectedServiceDetails, projectId: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.createIdentityMru
    name: 'createIdentityMru(mruData: IdentityData, mruName: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: mruData
          type:
            - IdentityData
          description: ''
        - id: mruName
          type:
            - string
          description: ''
      content: 'function createIdentityMru(mruData: IdentityData, mruName: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.createOrUpdateProxy
    name: 'createOrUpdateProxy(proxy: Proxy)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: proxy
          type:
            - Proxy
          description: ''
      content: 'function createOrUpdateProxy(proxy: Proxy)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.createTeam
    name: 'createTeam(team: WebApiTeam, projectId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: team
          type:
            - WebApiTeam
          description: The team data used to create the team.
        - id: projectId
          type:
            - string
          description: >-
            The name or id (GUID) of the team project in which to create the
            team.
      content: 'function createTeam(team: WebApiTeam, projectId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.deleteIdentityMru
    name: 'deleteIdentityMru(mruData: IdentityData, mruName: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: mruData
          type:
            - IdentityData
          description: ''
        - id: mruName
          type:
            - string
          description: ''
      content: 'function deleteIdentityMru(mruData: IdentityData, mruName: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.deleteProxy
    name: 'deleteProxy(proxyUrl: string, site?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: proxyUrl
          type:
            - string
          description: ''
        - id: site
          type:
            - string
          description: ''
          optional: true
      content: 'function deleteProxy(proxyUrl: string, site?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.deleteTeam
    name: 'deleteTeam(projectId: string, teamId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: >-
            The name or id (GUID) of the team project containing the team to
            delete.
        - id: teamId
          type:
            - string
          description: The name of id of the team to delete.
      content: 'function deleteTeam(projectId: string, teamId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getConnectedServiceDetails
    name: 'getConnectedServiceDetails(projectId: string, name: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: name
          type:
            - string
          description: ''
      content: 'function getConnectedServiceDetails(projectId: string, name: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getConnectedServices
    name: 'getConnectedServices(projectId: string, kind?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: kind
          type:
            - function
          description: ''
          optional: true
      content: 'function getConnectedServices(projectId: string, kind?: function)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getIdentityMru
    name: 'getIdentityMru(mruName: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: mruName
          type:
            - string
          description: ''
      content: 'function getIdentityMru(mruName: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getProcessById
    name: 'getProcessById(processId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: processId
          type:
            - string
          description: ''
      content: 'function getProcessById(processId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getProcesses
    name: getProcesses()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getProcesses()
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getProject
    name: >-
      getProject(projectId: string, includeCapabilities?: boolean,
      includeHistory?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: includeCapabilities
          type:
            - boolean
          description: >-
            Include capabilities (such as source control) in the team project
            result (default: false).
          optional: true
        - id: includeHistory
          type:
            - boolean
          description: Search within renamed projects (that had such name in the past).
          optional: true
      content: >-
        function getProject(projectId: string, includeCapabilities?: boolean,
        includeHistory?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getProjectCollection
    name: 'getProjectCollection(collectionId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: collectionId
          type:
            - string
          description: ''
      content: 'function getProjectCollection(collectionId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getProjectCollections
    name: 'getProjectCollections(top?: number, skip?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
      content: 'function getProjectCollections(top?: number, skip?: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getProjectHistoryEntries
    name: 'getProjectHistoryEntries(minRevision?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: minRevision
          type:
            - number
          description: ''
          optional: true
      content: 'function getProjectHistoryEntries(minRevision?: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getProjectProperties
    name: 'getProjectProperties(projectId: string, keys?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: The team project ID.
        - id: keys
          type:
            - function
          description: >-
            A comma-delimited string of team project property names. Wildcard
            characters ("?" and "*") are supported. If no key is specified, all
            properties will be returned.
          optional: true
      content: 'function getProjectProperties(projectId: string, keys?: function)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getProjects
    name: >-
      getProjects(stateFilter?: any, top?: number, skip?: number,
      continuationToken?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: stateFilter
          type:
            - any
          description: >-
            Filter on team projects in a specific team project state (default:
            WellFormed).
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getProjects(stateFilter?: any, top?: number, skip?: number,
        continuationToken?: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getProxies
    name: 'getProxies(proxyUrl?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: proxyUrl
          type:
            - string
          description: ''
          optional: true
      content: 'function getProxies(proxyUrl?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getTeam
    name: 'getTeam(projectId: string, teamId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: teamId
          type:
            - string
          description: ''
      content: 'function getTeam(projectId: string, teamId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getTeamMembers
    name: >-
      getTeamMembers(projectId: string, teamId: string, top?: number, skip?:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: teamId
          type:
            - string
          description: ''
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getTeamMembers(projectId: string, teamId: string, top?: number,
        skip?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.getTeams
    name: 'getTeams(projectId: string, top?: number, skip?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
      content: 'function getTeams(projectId: string, top?: number, skip?: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.queueCreateProject
    name: 'queueCreateProject(projectToCreate: TeamProject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectToCreate
          type:
            - TeamProject
          description: The project to create.
      content: 'function queueCreateProject(projectToCreate: TeamProject)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.queueDeleteProject
    name: 'queueDeleteProject(projectId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: The project id of the project to delete.
      content: 'function queueDeleteProject(projectId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.setProjectProperties
    name: 'setProjectProperties(projectId: string, patchDocument: JsonPatchDocument)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: The team project ID.
        - id: patchDocument
          type:
            - JsonPatchDocument
          description: >-
            A JSON Patch document that represents an array of property
            operations. See RFC 6902 for more details on JSON Patch. The
            accepted operation verbs are Add and Remove, where Add is used for
            both creating and updating properties. The path consists of a
            forward slash and a property name.
      content: >-
        function setProjectProperties(projectId: string, patchDocument:
        JsonPatchDocument)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.updateIdentityMru
    name: 'updateIdentityMru(mruData: IdentityData, mruName: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: mruData
          type:
            - IdentityData
          description: ''
        - id: mruName
          type:
            - string
          description: ''
      content: 'function updateIdentityMru(mruData: IdentityData, mruName: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.updateProject
    name: 'updateProject(projectUpdate: TeamProject, projectId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectUpdate
          type:
            - TeamProject
          description: The updates for the project.
        - id: projectId
          type:
            - string
          description: The project id of the project to update.
      content: 'function updateProject(projectUpdate: TeamProject, projectId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4.updateTeam
    name: 'updateTeam(teamData: WebApiTeam, projectId: string, teamId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamData
          type:
            - WebApiTeam
          description: ''
        - id: projectId
          type:
            - string
          description: >-
            The name or id (GUID) of the team project containing the team to
            update.
        - id: teamId
          type:
            - string
          description: The name of id of the team to update.
      content: >-
        function updateTeam(teamData: WebApiTeam, projectId: string, teamId:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestParams
          type:
            - VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestParams
          type:
            - VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vssRequestOptions
          type:
            - IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient4._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: promise
          type:
            - IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
