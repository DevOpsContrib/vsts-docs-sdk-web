### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO
    name: MessageAreaControlO
    fullName: MessageAreaControlO
    children:
      - >-
        vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.clear
      - >-
        vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.ERROR_DETAILS_TOGGLED
      - >-
        vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.EVENT_CLOSE_ICON_CLICKED
      - >-
        vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.EVENT_DISPLAY_CLEARED
      - >-
        vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.EVENT_DISPLAY_COMPLETE
      - >-
        vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.getMessageType
      - >-
        vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.initialize
      - >-
        vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.initializeOptions
      - >-
        vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.setError
      - >-
        vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.setErrorDetailsVisibility
      - >-
        vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.setMessage
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.Controls.Control<TOptions>'
    package: vss-web-extension-sdk
    module: VSS/Controls/Notifications
  - uid: vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.clear
    name: clear()
    children: []
    langs:
      - typeScript
    summary: Clear the shown message
    syntax:
      parameters: []
      content: function clear()
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.ERROR_DETAILS_TOGGLED
    name: ERROR_DETAILS_TOGGLED
    fullName: ERROR_DETAILS_TOGGLED
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.EVENT_CLOSE_ICON_CLICKED
    name: EVENT_CLOSE_ICON_CLICKED
    fullName: EVENT_CLOSE_ICON_CLICKED
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.EVENT_DISPLAY_CLEARED
    name: EVENT_DISPLAY_CLEARED
    fullName: EVENT_DISPLAY_CLEARED
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.EVENT_DISPLAY_COMPLETE
    name: EVENT_DISPLAY_COMPLETE
    fullName: EVENT_DISPLAY_COMPLETE
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.getMessageType
    name: getMessageType()
    children: []
    langs:
      - typeScript
    summary: Gets the current message type.
    syntax:
      parameters: []
      content: function getMessageType()
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.initialize
    name: initialize()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function initialize()
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.initializeOptions
    name: 'initializeOptions(options?: TOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - TOptions
          description: |+

          optional: true
      content: 'function initializeOptions(options?: TOptions)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.setError
    name: 'setError(message: any, clickCallback?: Function)'
    children: []
    langs:
      - typeScript
    summary: Set the error message
    syntax:
      parameters:
        - id: message
          type:
            - any
          description: |
            Message string (plain text), jQuery (html) or
                message = {
                    type: MessageAreaType,
                    header: String for plain text or jQuery for html,
                    content: String for plain text or jQuery for html,
                    click: function
                }
        - id: clickCallback
          type:
            - Function
          description: |
            Click callback function
          optional: true
      content: 'function setError(message: any, clickCallback?: Function)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.setErrorDetailsVisibility
    name: 'setErrorDetailsVisibility(show: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: show
          type:
            - any
          description: ''
      content: 'function setErrorDetailsVisibility(show: any)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Notifications.MessageAreaControlO.setMessage
    name: 'setMessage(message: any, messageType?: MessageAreaType)'
    children: []
    langs:
      - typeScript
    summary: Set the message
    syntax:
      parameters:
        - id: message
          type:
            - any
          description: |
            Message string (plain text), jQuery (html) or
                message = {
                    type: MessageAreaType,
                    header: String for plain text or jQuery for html,
                    content: String for plain text or jQuery for html,
                    click: function
                }
        - id: messageType
          type:
            - MessageAreaType
          description: |
            Type of message
          optional: true
      content: 'function setMessage(message: any, messageType?: MessageAreaType)'
    type: method
