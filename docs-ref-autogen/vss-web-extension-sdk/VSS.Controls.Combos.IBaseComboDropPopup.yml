### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup
    name: IBaseComboDropPopup
    fullName: IBaseComboDropPopup
    children:
      - vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup.dispose
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup.getSelectedIndex
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup.getSelectedValue
      - vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup.selectNext
      - vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup.selectPrev
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup.setSelectedValue
      - vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup.update
    langs:
      - typeScript
    type: interface
    summary: ''
    source:
      path: vss.d.ts
      startLine: 9686
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup.dispose
    name: dispose()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function dispose()
      parameters: []
      return:
        type:
          - any
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup.getSelectedIndex
    name: getSelectedIndex()
    children: []
    langs:
      - typeScript
    summary: >-
      Returns the selected index of the drop popup. If nothing is selected
      return -1
    syntax:
      content: function getSelectedIndex()
      parameters: []
      return:
        type:
          - number
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup.getSelectedValue
    name: getSelectedValue()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getSelectedValue()
      parameters: []
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup.selectNext
    name: 'selectNext(page?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function selectNext(page?: boolean)'
      parameters:
        - id: page
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup.selectPrev
    name: 'selectPrev(page?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function selectPrev(page?: boolean)'
      parameters:
        - id: page
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup.setSelectedValue
    name: 'setSelectedValue(value: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setSelectedValue(value: string)'
      parameters:
        - id: value
          type:
            - string
          description: ''
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.IBaseComboDropPopup.update
    name: update()
    children: []
    langs:
      - typeScript
    summary: Updates drop popup rendering based on current data
    syntax:
      content: function update()
      parameters: []
    type: method
