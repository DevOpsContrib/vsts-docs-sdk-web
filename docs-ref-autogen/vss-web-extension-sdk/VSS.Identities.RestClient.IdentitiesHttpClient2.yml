### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2
    name: IdentitiesHttpClient2
    fullName: IdentitiesHttpClient2
    children:
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.addMember
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.authTokenManager
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.claimsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.createGroups
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.createIdentity
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.createOrBindWithClaims
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.createScope
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.deleteGroup
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.deleteScope
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.descriptorsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.forceOptionsCallForAutoNegotiate
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getDescriptorById
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getIdentityChanges
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getIdentitySnapshot
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getMaxSequenceId
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getScopeById
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getScopeByName
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getSelf
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getSignedInToken
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getSignoutToken
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getTenant
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getUserIdentityIdsByDomainId
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.groupsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.identitiesApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.constructor
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.identityApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.identityBatchApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.identitySnapshotApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.listGroups
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.maxSequenceIdApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.meApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.membersApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.membersOfApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readIdentities
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readIdentitiesByScope
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readIdentity
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readIdentityBatch
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readMember
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readMemberOf
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readMembers
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readMembersOf
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.removeMember
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.renameScope
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.scopesApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.signedInTokenApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.signoutTokenApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.tenantApiVersion
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.updateIdentities
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.updateIdentity
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2._beginGetLocation
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2._beginRequest
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2._beginRequestWithAjaxResult
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2._issueAjaxRequest
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2._rootRequestPath
      - >-
        vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS/Identities/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.addMember
    name: 'addMember(containerId: string, memberId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: containerId
          type:
            - string
          description: ''
        - id: memberId
          type:
            - string
          description: ''
      content: 'function addMember(containerId: string, memberId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.authTokenManager
    name: authTokenManager
    fullName: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.claimsApiVersion
    name: claimsApiVersion
    fullName: claimsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.createGroups
    name: 'createGroups(container: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: container
          type:
            - any
          description: ''
      content: 'function createGroups(container: any)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.createIdentity
    name: 'createIdentity(frameworkIdentityInfo: FrameworkIdentityInfo)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: frameworkIdentityInfo
          type:
            - >-
              vss-web-extension-sdk.VSS.Identities.Contracts.FrameworkIdentityInfo
          description: ''
      content: 'function createIdentity(frameworkIdentityInfo: FrameworkIdentityInfo)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.createOrBindWithClaims
    name: 'createOrBindWithClaims(sourceIdentity: Identity)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: sourceIdentity
          type:
            - vss-web-extension-sdk.VSS.Identities.Contracts.Identity
          description: ''
      content: 'function createOrBindWithClaims(sourceIdentity: Identity)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.createScope
    name: 'createScope(info: CreateScopeInfo, scopeId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: info
          type:
            - vss-web-extension-sdk.VSS.Identities.Contracts.CreateScopeInfo
          description: ''
        - id: scopeId
          type:
            - string
          description: ''
      content: 'function createScope(info: CreateScopeInfo, scopeId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.deleteGroup
    name: 'deleteGroup(groupId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: groupId
          type:
            - string
          description: ''
      content: 'function deleteGroup(groupId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.deleteScope
    name: 'deleteScope(scopeId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeId
          type:
            - string
          description: ''
      content: 'function deleteScope(scopeId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.descriptorsApiVersion
    name: descriptorsApiVersion
    fullName: descriptorsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    fullName: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getDescriptorById
    name: 'getDescriptorById(id: string, isMasterId?: boolean)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: ''
        - id: isMasterId
          type:
            - boolean
          description: ''
          optional: true
      content: 'function getDescriptorById(id: string, isMasterId?: boolean)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getIdentityChanges
    name: >-
      getIdentityChanges(identitySequenceId: number, groupSequenceId: number,
      scopeId?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: identitySequenceId
          type:
            - number
          description: ''
        - id: groupSequenceId
          type:
            - number
          description: ''
        - id: scopeId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getIdentityChanges(identitySequenceId: number, groupSequenceId:
        number, scopeId?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getIdentitySnapshot
    name: 'getIdentitySnapshot(scopeId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeId
          type:
            - string
          description: ''
      content: 'function getIdentitySnapshot(scopeId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getMaxSequenceId
    name: getMaxSequenceId()
    children: []
    langs:
      - typeScript
    summary: Read the max sequence id of all the identities.
    syntax:
      parameters: []
      content: function getMaxSequenceId()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getScopeById
    name: 'getScopeById(scopeId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeId
          type:
            - string
          description: ''
      content: 'function getScopeById(scopeId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getScopeByName
    name: 'getScopeByName(scopeName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeName
          type:
            - string
          description: ''
      content: 'function getScopeByName(scopeName: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getSelf
    name: getSelf()
    children: []
    langs:
      - typeScript
    summary: Read identity of the home tenant request user.
    syntax:
      parameters: []
      content: function getSelf()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getSignedInToken
    name: getSignedInToken()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getSignedInToken()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getSignoutToken
    name: getSignoutToken()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getSignoutToken()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getTenant
    name: 'getTenant(tenantId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: tenantId
          type:
            - string
          description: ''
      content: 'function getTenant(tenantId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.getUserIdentityIdsByDomainId
    name: 'getUserIdentityIdsByDomainId(domainId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: domainId
          type:
            - string
          description: ''
      content: 'function getUserIdentityIdsByDomainId(domainId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.groupsApiVersion
    name: groupsApiVersion
    fullName: groupsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.identitiesApiVersion
    name: identitiesApiVersion
    fullName: identitiesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.constructor
    name: >-
      IdentitiesHttpClient2(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new IdentitiesHttpClient2(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.identityApiVersion
    name: identityApiVersion
    fullName: identityApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.identityBatchApiVersion
    name: identityBatchApiVersion
    fullName: identityBatchApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.identitySnapshotApiVersion
    name: identitySnapshotApiVersion
    fullName: identitySnapshotApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.listGroups
    name: >-
      listGroups(scopeIds?: string, recurse?: boolean, deleted?: boolean,
      properties?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIds
          type:
            - string
          description: ''
          optional: true
        - id: recurse
          type:
            - boolean
          description: ''
          optional: true
        - id: deleted
          type:
            - boolean
          description: ''
          optional: true
        - id: properties
          type:
            - string
          description: ''
          optional: true
      content: >-
        function listGroups(scopeIds?: string, recurse?: boolean, deleted?:
        boolean, properties?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.maxSequenceIdApiVersion
    name: maxSequenceIdApiVersion
    fullName: maxSequenceIdApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.meApiVersion
    name: meApiVersion
    fullName: meApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.membersApiVersion
    name: membersApiVersion
    fullName: membersApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.membersOfApiVersion
    name: membersOfApiVersion
    fullName: membersOfApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readIdentities
    name: >-
      readIdentities(descriptors?: string, identityIds?: string, searchFilter?:
      string, filterValue?: string, queryMembership?: function, properties?:
      string, includeRestrictedVisibility?: boolean, options?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: descriptors
          type:
            - string
          description: ''
          optional: true
        - id: identityIds
          type:
            - string
          description: ''
          optional: true
        - id: searchFilter
          type:
            - string
          description: ''
          optional: true
        - id: filterValue
          type:
            - string
          description: ''
          optional: true
        - id: queryMembership
          type:
            - function
          description: ''
          optional: true
        - id: properties
          type:
            - string
          description: ''
          optional: true
        - id: includeRestrictedVisibility
          type:
            - boolean
          description: ''
          optional: true
        - id: options
          type:
            - function
          description: ''
          optional: true
      content: >-
        function readIdentities(descriptors?: string, identityIds?: string,
        searchFilter?: string, filterValue?: string, queryMembership?: function,
        properties?: string, includeRestrictedVisibility?: boolean, options?:
        function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readIdentitiesByScope
    name: >-
      readIdentitiesByScope(scopeId: string, queryMembership?: function,
      properties?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeId
          type:
            - string
          description: ''
        - id: queryMembership
          type:
            - function
          description: ''
          optional: true
        - id: properties
          type:
            - string
          description: ''
          optional: true
      content: >-
        function readIdentitiesByScope(scopeId: string, queryMembership?:
        function, properties?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readIdentity
    name: >-
      readIdentity(identityId: string, queryMembership?: function, properties?:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: identityId
          type:
            - string
          description: ''
        - id: queryMembership
          type:
            - function
          description: ''
          optional: true
        - id: properties
          type:
            - string
          description: ''
          optional: true
      content: >-
        function readIdentity(identityId: string, queryMembership?: function,
        properties?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readIdentityBatch
    name: 'readIdentityBatch(batchInfo: IdentityBatchInfo)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: batchInfo
          type:
            - vss-web-extension-sdk.VSS.Identities.Contracts.IdentityBatchInfo
          description: ''
      content: 'function readIdentityBatch(batchInfo: IdentityBatchInfo)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readMember
    name: >-
      readMember(containerId: string, memberId: string, queryMembership?:
      function)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: containerId
          type:
            - string
          description: ''
        - id: memberId
          type:
            - string
          description: ''
        - id: queryMembership
          type:
            - function
          description: ''
          optional: true
      content: >-
        function readMember(containerId: string, memberId: string,
        queryMembership?: function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readMemberOf
    name: >-
      readMemberOf(memberId: string, containerId: string, queryMembership?:
      function)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: memberId
          type:
            - string
          description: ''
        - id: containerId
          type:
            - string
          description: ''
        - id: queryMembership
          type:
            - function
          description: ''
          optional: true
      content: >-
        function readMemberOf(memberId: string, containerId: string,
        queryMembership?: function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readMembers
    name: 'readMembers(containerId: string, queryMembership?: function)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: containerId
          type:
            - string
          description: ''
        - id: queryMembership
          type:
            - function
          description: ''
          optional: true
      content: 'function readMembers(containerId: string, queryMembership?: function)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.readMembersOf
    name: 'readMembersOf(memberId: string, queryMembership?: function)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: memberId
          type:
            - string
          description: ''
        - id: queryMembership
          type:
            - function
          description: ''
          optional: true
      content: 'function readMembersOf(memberId: string, queryMembership?: function)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.removeMember
    name: 'removeMember(containerId: string, memberId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: containerId
          type:
            - string
          description: ''
        - id: memberId
          type:
            - string
          description: ''
      content: 'function removeMember(containerId: string, memberId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.renameScope
    name: 'renameScope(renameScope: IdentityScope, scopeId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: renameScope
          type:
            - vss-web-extension-sdk.VSS.Identities.Contracts.IdentityScope
          description: ''
        - id: scopeId
          type:
            - string
          description: ''
      content: 'function renameScope(renameScope: IdentityScope, scopeId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.scopesApiVersion
    name: scopesApiVersion
    fullName: scopesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.signedInTokenApiVersion
    name: signedInTokenApiVersion
    fullName: signedInTokenApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.signoutTokenApiVersion
    name: signoutTokenApiVersion
    fullName: signoutTokenApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.tenantApiVersion
    name: tenantApiVersion
    fullName: tenantApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.updateIdentities
    name: 'updateIdentities(identities: VssJsonCollectionWrapperV)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: identities
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.Contracts.VssJsonCollectionWrapperV
          description: ''
      content: 'function updateIdentities(identities: VssJsonCollectionWrapperV)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2.updateIdentity
    name: 'updateIdentity(identity: Identity, identityId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: identity
          type:
            - vss-web-extension-sdk.VSS.Identities.Contracts.Identity
          description: ''
        - id: identityId
          type:
            - string
          description: ''
      content: 'function updateIdentity(identity: Identity, identityId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vssRequestOptions
          type:
            - vss-web-extension-sdk.IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2._rootRequestPath
    name: _rootRequestPath
    fullName: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.RestClient.IdentitiesHttpClient2._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: promise
          type:
            - vss-web-extension-sdk.IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
