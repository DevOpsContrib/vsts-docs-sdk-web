### YamlMime:UniversalReference
items:
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade
    name: EntityOperationsFacade
    fullName: EntityOperationsFacade
    children:
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.constructor
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.filterEntities
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.getImagesForEntities
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.getMruEntitiesUnchecked
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.isUserMruReady
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.load
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.mergeEntities
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.queryTokenEntityImageCache
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.refreshUserMru
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.registerSyncSource
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.search
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.Service.VssService'
    source:
      path: vss.d.ts
      startLine: 25993
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.constructor
    name: EntityOperationsFacade
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new EntityOperationsFacade()
      parameters: []
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.filterEntities
    name: filterEntities
    children: []
    langs:
      - typeScript
    summary: Return only the MRU users or groups that have the prefix
    syntax:
      content: 'static function filterEntities(identities: IEntity[], prefix: string)'
      parameters:
        - id: identities
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.RestClient.IEntity[]'
          description: ''
        - id: prefix
          type:
            - string
          description: ''
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.getImagesForEntities
    name: getImagesForEntities
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getImagesForEntities(entities: IEntity[], request?:
        IEntityOperationsFacadeRequest)
      parameters:
        - id: entities
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.RestClient.IEntity[]'
          description: ''
        - id: request
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Controls.IEntityOperationsFacadeRequest
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.IDictionaryStringTo<string>>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.getMruEntitiesUnchecked
    name: getMruEntitiesUnchecked
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMruEntitiesUnchecked(filterByScope: FilterByScope)'
      parameters:
        - id: filterByScope
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.Common.FilterByScope'
          description: ''
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.isUserMruReady
    name: isUserMruReady
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isUserMruReady(filterByScope: FilterByScope)'
      parameters:
        - id: filterByScope
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.Common.FilterByScope'
          description: ''
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.load
    name: load
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function load(options?: IEntityOperationsFacadeOptions)'
      parameters:
        - id: options
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Controls.IEntityOperationsFacadeOptions
          description: ''
          optional: true
      return:
        type:
          - Promise<boolean>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.mergeEntities
    name: mergeEntities
    children: []
    langs:
      - typeScript
    summary: >-
      This is the default way the controls internally merge MRU and DDS entities
      entities.
        Assumes that list1 and list2 are lists of distinct entities.
        Use-cases apart from calls by the controls here are not supported; provided as a example of merging logic.
    syntax:
      content: >-
        static function mergeEntities(list1: IEntity[], list2: IEntity[],
        mergePreference?: string)
      parameters:
        - id: list1
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.RestClient.IEntity[]'
          description: ''
        - id: list2
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.RestClient.IEntity[]'
          description: ''
        - id: mergePreference
          type:
            - string
          description: ''
          optional: true
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.queryTokenEntityImageCache
    name: queryTokenEntityImageCache
    fullName: queryTokenEntityImageCache
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: HashCache<string> queryTokenEntityImageCache
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Identities.Picker.Cache.HashCache<string>'
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.refreshUserMru
    name: refreshUserMru
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function refreshUserMru(filterByScope: FilterByScope)'
      parameters:
        - id: filterByScope
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.Common.FilterByScope'
          description: ''
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<boolean>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.registerSyncSource
    name: registerSyncSource
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function registerSyncSource(source: ISyncSource)'
      parameters:
        - id: source
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.Controls.ISyncSource'
          description: ''
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.EntityOperationsFacade.search
    name: search
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function search(request: IEntityOperationsFacadeRequest)'
      parameters:
        - id: request
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Controls.IEntityOperationsFacadeRequest
          description: ''
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Picker.Controls.IEntityOperationsFacadeResponse>
    type: method
