### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4
    name: CommonMethods3To4
    fullName: CommonMethods3To4
    children:
      - vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.constructor
      - vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.createPlan
      - vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.deletePlan
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.getBoardFilterSettings
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.getBoardMappingParentItems
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.getBoardUserSettings
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.getDeliveryTimelineData
      - vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.getPlan
      - vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.getPlans
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.updateBoardFilterSettings
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.updateBoardUserSettings
      - vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.updatePlan
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods2To4'
    source:
      path: tfs.d.ts
      startLine: 22872
      remote:
        path: typings\tfs.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: TFS/Work/RestClient
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.constructor
    name: >-
      CommonMethods3To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new CommonMethods3To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.createPlan
    name: 'createPlan(postedPlan: CreatePlan, project: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Add a new plan for the team'
    syntax:
      parameters:
        - id: postedPlan
          type:
            - '@vss-web-extension-sdk.TFS.Work.Contracts.CreatePlan'
          description: Plan definition
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function createPlan(postedPlan: CreatePlan, project: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Work.Contracts.Plan>
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.deletePlan
    name: 'deletePlan(project: string, id: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Delete the specified plan'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: id
          type:
            - string
          description: Identifier of the plan
      content: 'function deletePlan(project: string, id: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.getBoardFilterSettings
    name: 'getBoardFilterSettings(teamContext: TeamContext, board: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns the board filter settings for the given board id or
      board by name
    syntax:
      parameters:
        - id: teamContext
          type:
            - '@vss-web-extension-sdk.TFS.Core.Contracts.TeamContext'
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: 'function getBoardFilterSettings(teamContext: TeamContext, board: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Work.Contracts.BoardFilterSettings>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.getBoardMappingParentItems
    name: >-
      getBoardMappingParentItems(teamContext: TeamContext,
      childBacklogContextCategoryRefName: string, workitemIds: number[])
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns the list of parent field filter model for the given
      list of workitem ids
    syntax:
      parameters:
        - id: teamContext
          type:
            - '@vss-web-extension-sdk.TFS.Core.Contracts.TeamContext'
          description: The team context for the operation
        - id: childBacklogContextCategoryRefName
          type:
            - string
          description: ''
        - id: workitemIds
          type:
            - 'number[]'
          description: ''
      content: >-
        function getBoardMappingParentItems(teamContext: TeamContext,
        childBacklogContextCategoryRefName: string, workitemIds: number[])
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Work.Contracts.ParentChildWIMap[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.getBoardUserSettings
    name: 'getBoardUserSettings(teamContext: TeamContext, board: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: teamContext
          type:
            - '@vss-web-extension-sdk.TFS.Core.Contracts.TeamContext'
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: 'function getBoardUserSettings(teamContext: TeamContext, board: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Work.Contracts.BoardUserSettings>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.getDeliveryTimelineData
    name: >-
      getDeliveryTimelineData(project: string, id: string, revision?: number,
      startDate?: Date, endDate?: Date)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get Delivery View Data'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: id
          type:
            - string
          description: Identifier for delivery view
        - id: revision
          type:
            - number
          description: >-
            Revision of the plan for which you want data. If the current plan is
            a different revision you will get an ViewRevisionMismatchException
            exception. If you do not supply a revision you will get data for the
            latest revision.
          optional: true
        - id: startDate
          type:
            - Date
          description: The start date of timeline
          optional: true
        - id: endDate
          type:
            - Date
          description: The end date of timeline
          optional: true
      content: >-
        function getDeliveryTimelineData(project: string, id: string, revision?:
        number, startDate?: Date, endDate?: Date)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Work.Contracts.DeliveryViewData>
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.getPlan
    name: 'getPlan(project: string, id: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get the information for the specified plan'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: id
          type:
            - string
          description: Identifier of the plan
      content: 'function getPlan(project: string, id: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Work.Contracts.Plan>
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.getPlans
    name: 'getPlans(project: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Get the information for all the plans configured for the
      given team
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function getPlans(project: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Work.Contracts.Plan[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.updateBoardFilterSettings
    name: >-
      updateBoardFilterSettings(filterSettings: BoardFilterSettings,
      teamContext: TeamContext, board: string)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Update board filter settings for the board id or board by
      name
    syntax:
      parameters:
        - id: filterSettings
          type:
            - '@vss-web-extension-sdk.TFS.Work.Contracts.BoardFilterSettings'
          description: ''
        - id: teamContext
          type:
            - '@vss-web-extension-sdk.TFS.Core.Contracts.TeamContext'
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: >-
        function updateBoardFilterSettings(filterSettings: BoardFilterSettings,
        teamContext: TeamContext, board: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Work.Contracts.BoardFilterSettings>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.updateBoardUserSettings
    name: >-
      updateBoardUserSettings(boardUserSettings: [key: string]: string,
      teamContext: TeamContext, board: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Update board user settings for the board id'
    syntax:
      parameters:
        - id: boardUserSettings
          type:
            - '[key: string]: string'
          description: ''
        - id: teamContext
          type:
            - '@vss-web-extension-sdk.TFS.Core.Contracts.TeamContext'
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: >-
        function updateBoardUserSettings(boardUserSettings: [key: string]:
        string, teamContext: TeamContext, board: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Work.Contracts.BoardUserSettings>
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.CommonMethods3To4.updatePlan
    name: 'updatePlan(updatedPlan: UpdatePlan, project: string, id: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Update the information for the specified plan'
    syntax:
      parameters:
        - id: updatedPlan
          type:
            - '@vss-web-extension-sdk.TFS.Work.Contracts.UpdatePlan'
          description: Plan definition to be updated
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: id
          type:
            - string
          description: Identifier of the plan
      content: >-
        function updatePlan(updatedPlan: UpdatePlan, project: string, id:
        string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Work.Contracts.Plan>
    type: method
