### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu
    name: Menu<TOptions>
    fullName: Menu
    children:
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.appendItem
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.appendItems
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.attach
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.Menu.CONTRIBUTION_ITEMS_UPDATED_EVENT
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.enhancementTypeName
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.escape
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.executeAction
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.getCommandState
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.getGroupedItems
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.getItem
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.getItemByTag
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.getItems
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.getMenuItemAlignment
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.getMenuItemOptions
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.getMenuItemSpecs
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.getMenuPinningOptions
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.getParentMenu
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.hide
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.hideChildren
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.initialize
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.initializeOptions
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.constructor
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.moveMenuItemAfter
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.openSubMenuOnHover
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.ownFocus
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.refreshContributedItems
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.removeItem
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.removeMenuItem
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectDefaultItem
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectDown
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectFirstItem
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectLastItem
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectLeft
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectNextItem
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectPrevItem
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectRight
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectUp
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.setContributedItemOptions
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.show
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.shownTime
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.updateAriaSetProperties
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.updateCommandStates
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.updateContributedMenuItems
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.updateItems
      - vss-web-extension-sdk.VSS.Controls.Menus.Menu.updateMenuItemStates
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.Controls.Menus.MenuBase<TOptions>'
    source:
      path: vss.d.ts
      startLine: 14067
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/Menus
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.appendItem
    name: 'appendItem(item: IMenuItemSpec)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: item
          type:
            - '@vss-web-extension-sdk.VSS.Controls.Menus.IMenuItemSpec'
          description: ''
      content: 'function appendItem(item: IMenuItemSpec)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.appendItems
    name: 'appendItems(appendedItems: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: appendedItems
          type:
            - any
          description: ''
      content: 'function appendItems(appendedItems: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.attach
    name: 'attach(parent: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: parent
          type:
            - any
          description: ''
      content: 'function attach(parent: any)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Menus.Menu.CONTRIBUTION_ITEMS_UPDATED_EVENT
    name: CONTRIBUTION_ITEMS_UPDATED_EVENT
    fullName: CONTRIBUTION_ITEMS_UPDATED_EVENT
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string CONTRIBUTION_ITEMS_UPDATED_EVENT
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.enhancementTypeName
    name: enhancementTypeName
    fullName: enhancementTypeName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string enhancementTypeName
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.escape
    name: 'escape(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function escape(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.executeAction
    name: 'executeAction(eventArgs: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: eventArgs
          type:
            - any
          description: ''
      content: 'function executeAction(eventArgs: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.getCommandState
    name: 'getCommandState(commandId: string, context?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: commandId
          type:
            - string
          description: ''
        - id: context
          type:
            - any
          description: ''
          optional: true
      content: 'function getCommandState(commandId: string, context?: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.getGroupedItems
    name: getGroupedItems()
    children: []
    langs:
      - typeScript
    summary: >-
      Create a list from itemsSource to reflect the order of items after
      grouping is done.

      Groups of items come before all ungrouped items.

      A separator goes between each group of items.

      Ungrouped items remain at the end of the menu with their
      manually-specified separators still in tact.

      If any groups are defined, separators are guaranteed not to be the first
      or last item in the menu.
    syntax:
      parameters: []
      content: function getGroupedItems()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.getItem
    name: 'getItem(id: string)'
    children: []
    langs:
      - typeScript
    summary: Gets the item which has the specified command id.
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: Id associated with the menu item.
      content: 'function getItem(id: string)'
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.Menus.MenuItem'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.getItemByTag
    name: 'getItemByTag(tag: string)'
    children: []
    langs:
      - typeScript
    summary: Gets the item which has the specified tag
    syntax:
      parameters:
        - id: tag
          type:
            - string
          description: Associated with the menu item
      content: 'function getItemByTag(tag: string)'
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.Menus.MenuItem'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.getItems
    name: getItems()
    children: []
    langs:
      - typeScript
    summary: Gets an array of all menu items.
    syntax:
      parameters: []
      content: function getItems()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.getMenuItemAlignment
    name: getMenuItemAlignment()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getMenuItemAlignment()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.getMenuItemOptions
    name: 'getMenuItemOptions(item: any, extraOptions?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: item
          type:
            - any
          description: ''
        - id: extraOptions
          type:
            - any
          description: ''
          optional: true
      content: 'function getMenuItemOptions(item: any, extraOptions?: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.getMenuItemSpecs
    name: getMenuItemSpecs()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getMenuItemSpecs()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.getMenuPinningOptions
    name: getMenuPinningOptions()
    children: []
    langs:
      - typeScript
    summary: Get the pinning options for this menu.
    syntax:
      parameters: []
      content: function getMenuPinningOptions()
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.Menus.IMenuPinningOptions'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.getParentMenu
    name: getParentMenu()
    children: []
    langs:
      - typeScript
    summary: 'Get the parent menu of this menu, if there is one.'
    syntax:
      parameters: []
      content: function getParentMenu()
      return:
        type:
          - >-
            @vss-web-extension-sdk.VSS.Controls.Menus.Menu<@vss-web-extension-sdk.VSS.Controls.Menus.MenuOptions>
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.hide
    name: 'hide(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: |+

          optional: true
      content: 'function hide(options?: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.hideChildren
    name: 'hideChildren(excludedItem: MenuItem, options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: excludedItem
          type:
            - '@vss-web-extension-sdk.VSS.Controls.Menus.MenuItem'
          description: ''
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function hideChildren(excludedItem: MenuItem, options?: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.initialize
    name: initialize()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function initialize()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.initializeOptions
    name: 'initializeOptions(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: |+

          optional: true
      content: 'function initializeOptions(options?: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.constructor
    name: 'Menu(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: |+

          optional: true
      content: 'new Menu(options?: any)'
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.moveMenuItemAfter
    name: 'moveMenuItemAfter(item: MenuItem, after: MenuItem)'
    children: []
    langs:
      - typeScript
    summary: Move a menu item to appear immediately after the other given menu item.
    syntax:
      parameters:
        - id: item
          type:
            - '@vss-web-extension-sdk.VSS.Controls.Menus.MenuItem'
          description: ''
        - id: after
          type:
            - '@vss-web-extension-sdk.VSS.Controls.Menus.MenuItem'
          description: |+

      content: 'function moveMenuItemAfter(item: MenuItem, after: MenuItem)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.openSubMenuOnHover
    name: openSubMenuOnHover
    fullName: openSubMenuOnHover
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean openSubMenuOnHover
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.ownFocus
    name: ownFocus()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function ownFocus()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.refreshContributedItems
    name: refreshContributedItems()
    children: []
    langs:
      - typeScript
    summary: Load contributed menu items.
    syntax:
      parameters: []
      content: function refreshContributedItems()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.removeItem
    name: 'removeItem(item: IMenuItemSpec)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: item
          type:
            - '@vss-web-extension-sdk.VSS.Controls.Menus.IMenuItemSpec'
          description: ''
      content: 'function removeItem(item: IMenuItemSpec)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.removeMenuItem
    name: 'removeMenuItem(menuItem: MenuItem)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: menuItem
          type:
            - '@vss-web-extension-sdk.VSS.Controls.Menus.MenuItem'
          description: ''
      content: 'function removeMenuItem(menuItem: MenuItem)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectDefaultItem
    name: 'selectDefaultItem(ignoreFocus?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: ignoreFocus
          type:
            - boolean
          description: ''
          optional: true
      content: 'function selectDefaultItem(ignoreFocus?: boolean)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectDown
    name: 'selectDown(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function selectDown(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectFirstItem
    name: selectFirstItem()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function selectFirstItem()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectLastItem
    name: selectLastItem()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function selectLastItem()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectLeft
    name: 'selectLeft(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function selectLeft(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectNextItem
    name: selectNextItem()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function selectNextItem()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectPrevItem
    name: selectPrevItem()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function selectPrevItem()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectRight
    name: 'selectRight(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function selectRight(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.selectUp
    name: 'selectUp(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function selectUp(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.setContributedItemOptions
    name: >-
      setContributedItemOptions(contributionIds: string[], contributionType?:
      string, contributionQueryOptions?: ContributionQueryOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Change the contribution options for this menu and reload the contributed
      menu items
    syntax:
      parameters:
        - id: contributionIds
          type:
            - 'string[]'
          description: The contribution ids to query for this menu
        - id: contributionType
          type:
            - string
          description: Optional type of contributions to include
          optional: true
        - id: contributionQueryOptions
          type:
            - ContributionQueryOptions
          description: |
            Optional contribution query options
          optional: true
      content: >-
        function setContributedItemOptions(contributionIds: string[],
        contributionType?: string, contributionQueryOptions?:
        ContributionQueryOptions)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.show
    name: 'show(options?: any)'
    children: []
    langs:
      - typeScript
    summary: |
      Show the menu.
      Options:
       immediate: whether to show the menu immediately or after a short delay (default false)
       showTimeout: optional number of milliseconds to wait before showing when immediate is false
       callback: function to call after menu is shown
       align: how to align the menu with its parent
       setFocus: whether to set the focus to the menu (default true)
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'function show(options?: any)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.shownTime
    name: shownTime
    fullName: shownTime
    children: []
    langs:
      - typeScript
    type: property
    summary: Time the Menu was last displayed.
    syntax:
      content: number shownTime
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.updateAriaSetProperties
    name: updateAriaSetProperties()
    children: []
    langs:
      - typeScript
    summary: >-
      Updates aria set related properties, use after modifying the child items
      of the menu.
    syntax:
      parameters: []
      content: function updateAriaSetProperties()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.updateCommandStates
    name: 'updateCommandStates(commands: ICommand[])'
    children: []
    langs:
      - typeScript
    summary: Updates the command states of the items with the specified ids.
    syntax:
      parameters:
        - id: commands
          type:
            - '@vss-web-extension-sdk.VSS.Controls.Menus.ICommand[]'
          description: List of commands to update.
      content: 'function updateCommandStates(commands: ICommand[])'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.updateContributedMenuItems
    name: 'updateContributedMenuItems(contributedMenuItems: IMenuItemSpec[])'
    children: []
    langs:
      - typeScript
    summary: >-
      Update contributed menu items that have already been added to this menu.

      Menu items must have an id set in order to be updated. Extensions can only
      update menu items that they contributed.


      Exposed to extensions as the updateMenuItems() method on the context
      object passed to getMenuItems().
    syntax:
      parameters:
        - id: contributedMenuItems
          type:
            - '@vss-web-extension-sdk.VSS.Controls.Menus.IMenuItemSpec[]'
          description: |+

      content: >-
        function updateContributedMenuItems(contributedMenuItems:
        IMenuItemSpec[])
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.updateItems
    name: 'updateItems(items: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: items
          type:
            - any
          description: ''
      content: 'function updateItems(items: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.Menu.updateMenuItemStates
    name: updateMenuItemStates()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function updateMenuItemStates()
    type: method
