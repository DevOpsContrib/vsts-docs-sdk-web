### YamlMime:UniversalReference
items:
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.ExtensionContracts.IDeploymentWidgetDataExtension
    name: IDeploymentWidgetDataExtension
    fullName: IDeploymentWidgetDataExtension
    children:
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.ExtensionContracts.IDeploymentWidgetDataExtension.triggerFetchingContributionData
    langs:
      - typeScript
    type: interface
    summary: ''
    source:
      path: rmo.d.ts
      startLine: 2238
      remote:
        path: typings\rmo.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: ReleaseManagement/Core/ExtensionContracts
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.ExtensionContracts.IDeploymentWidgetDataExtension.triggerFetchingContributionData
    name: triggerFetchingContributionData
    fullName: triggerFetchingContributionData
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Deployment widget will call this function whenever it tries to
      render/refresh the widget view.

      As the amount of data being fetched is too huge, we need to batch it.

      Calling triggerFetchData will only start the process of fetching required
      data in batches.

      The extension will be calling updateContributionData as and when it has
      finished fetching results for one of the batches.
    syntax:
      content: >-
        (releaseEnvironments: function[]) => void
        triggerFetchingContributionData
      return:
        type:
          - '(releaseEnvironments: function[]) => void'
