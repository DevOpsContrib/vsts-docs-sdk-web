### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement
    name: Enhancement
    fullName: Enhancement<TOptions>
    children:
      - vss-web-extension-sdk.VSS.Controls.Enhancement.cancelDelayedFunction
      - vss-web-extension-sdk.VSS.Controls.Enhancement.delayExecute
      - vss-web-extension-sdk.VSS.Controls.Enhancement.dispose
      - vss-web-extension-sdk.VSS.Controls.Enhancement.enhance
      - vss-web-extension-sdk.VSS.Controls.Enhancement.enhance
      - vss-web-extension-sdk.VSS.Controls.Enhancement.constructor
      - vss-web-extension-sdk.VSS.Controls.Enhancement.ENHANCEMENTS_DATA_KEY
      - >-
        vss-web-extension-sdk.VSS.Controls.Enhancement.ENHANCEMENT_OPTIONPREFIX_KEY
      - vss-web-extension-sdk.VSS.Controls.Enhancement.ENHANCEMENT_OPTIONS_KEY
      - vss-web-extension-sdk.VSS.Controls.Enhancement.ensureEnhancement
      - vss-web-extension-sdk.VSS.Controls.Enhancement.ensureEnhancements
      - vss-web-extension-sdk.VSS.Controls.Enhancement.getElement
      - vss-web-extension-sdk.VSS.Controls.Enhancement.getEnhancementOptions
      - vss-web-extension-sdk.VSS.Controls.Enhancement.getId
      - vss-web-extension-sdk.VSS.Controls.Enhancement.getInstance
      - vss-web-extension-sdk.VSS.Controls.Enhancement.getInstanceO
      - vss-web-extension-sdk.VSS.Controls.Enhancement.getOptionPrefix
      - vss-web-extension-sdk.VSS.Controls.Enhancement.getType
      - vss-web-extension-sdk.VSS.Controls.Enhancement.getTypeName
      - vss-web-extension-sdk.VSS.Controls.Enhancement.getTypeName
      - vss-web-extension-sdk.VSS.Controls.Enhancement.initialize
      - vss-web-extension-sdk.VSS.Controls.Enhancement.initializeOptions
      - vss-web-extension-sdk.VSS.Controls.Enhancement.isDisposed
      - vss-web-extension-sdk.VSS.Controls.Enhancement.optionsPrefix
      - vss-web-extension-sdk.VSS.Controls.Enhancement.registerEnhancement
      - vss-web-extension-sdk.VSS.Controls.Enhancement.registerJQueryWidget
      - vss-web-extension-sdk.VSS.Controls.Enhancement.setEnhancementOptions
    langs:
      - typeScript
    type: class
    summary: ''
    source:
      path: vss.d.ts
      startLine: 9139
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.cancelDelayedFunction
    name: cancelDelayedFunction
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Cancels any pending delayed functions (delayExecute calls) with the
      specified name
    syntax:
      content: 'function cancelDelayedFunction(name: string)'
      parameters:
        - id: name
          type:
            - string
          description: Name (supplied in the delayExecute call) of the operations to cancel
      return:
        type:
          - boolean
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.delayExecute
    name: delayExecute
    children: []
    type: method
    langs:
      - typeScript
    summary: Executes the provided function after the specified amount of time
    syntax:
      content: >-
        function delayExecute(name?: string, msDelay?: number,
        cancelPendingOps?: boolean, func?: Function)
      parameters:
        - id: name
          type:
            - string
          description: >-
            (Optional) Name for this operation. Allows subsequent calls to
            cancel this action.
          optional: true
        - id: msDelay
          type:
            - number
          description: Delay in milliseconds to wait before executing the Function
          optional: true
        - id: cancelPendingOps
          type:
            - boolean
          description: >-
            If true, cancel any pending requests with this name. If false, and
            there are outstanding requests with this name already in progress,
            then do nothing.
          optional: true
        - id: func
          type:
            - Function
          description: |
            Method to execute after the delay
          optional: true
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.dispose
    name: dispose
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function dispose()
      parameters: []
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.enhance
    name: enhance
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enhance($element: any)'
      parameters:
        - id: $element
          type:
            - any
          description: ''
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.enhance
    name: enhance
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function enhance<TOptions>(type: function, element: Enhancement,
        options?: function, enhancementOptions?: EnhancementOptions)
      parameters:
        - id: type
          type:
            - function
          description: ''
        - id: element
          type:
            - Enhancement
          description: ''
        - id: options
          type:
            - function
          description: ''
          optional: true
        - id: enhancementOptions
          type:
            - '@vss-web-extension-sdk.VSS.Controls.EnhancementOptions'
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.Enhancement<TOptions>'
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.constructor
    name: Enhancement
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new Enhancement(options?: TOptions, enhancementOptions?:
        EnhancementOptions)
      parameters:
        - id: options
          type:
            - TOptions
          description: |+

          optional: true
        - id: enhancementOptions
          type:
            - '@vss-web-extension-sdk.VSS.Controls.EnhancementOptions'
          description: ''
          optional: true
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.ENHANCEMENTS_DATA_KEY
    name: ENHANCEMENTS_DATA_KEY
    fullName: ENHANCEMENTS_DATA_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string ENHANCEMENTS_DATA_KEY
      return:
        type:
          - string
    module: VSS/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Enhancement.ENHANCEMENT_OPTIONPREFIX_KEY
    name: ENHANCEMENT_OPTIONPREFIX_KEY
    fullName: ENHANCEMENT_OPTIONPREFIX_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string ENHANCEMENT_OPTIONPREFIX_KEY
      return:
        type:
          - string
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.ENHANCEMENT_OPTIONS_KEY
    name: ENHANCEMENT_OPTIONS_KEY
    fullName: ENHANCEMENT_OPTIONS_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string ENHANCEMENT_OPTIONS_KEY
      return:
        type:
          - string
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.ensureEnhancement
    name: ensureEnhancement
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function ensureEnhancement(type?: any, context?: any,
        errorCallback?: any)
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: context
          type:
            - any
          description: ''
          optional: true
        - id: errorCallback
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.Enhancement<any>'
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.ensureEnhancements
    name: ensureEnhancements
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function ensureEnhancements(type?: any, context?: any,
        errorCallback?: any)
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: context
          type:
            - any
          description: ''
          optional: true
        - id: errorCallback
          type:
            - any
          description: ''
          optional: true
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.getElement
    name: getElement
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the element associated with this control.
    syntax:
      content: function getElement()
      parameters: []
      return:
        type:
          - JQuery
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.getEnhancementOptions
    name: getEnhancementOptions
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function getEnhancementOptions(type: any, element: any)'
      parameters:
        - id: type
          type:
            - any
          description: ''
        - id: element
          type:
            - any
          description: |+

      return:
        type:
          - any
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.getId
    name: getId
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getId()
      parameters: []
      return:
        type:
          - string
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.getInstance
    name: getInstance
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function getInstance(type?: any, element?: any)'
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: element
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.Enhancement<any>'
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.getInstanceO
    name: getInstanceO
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function getInstanceO<TOptions>(type?: any, element?: any)'
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: element
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.Enhancement<TOptions>'
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.getOptionPrefix
    name: getOptionPrefix
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function getOptionPrefix(type: any)'
      parameters:
        - id: type
          type:
            - any
          description: ''
      return:
        type:
          - string
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.getType
    name: getType
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getType()
      parameters: []
      return:
        type:
          - Function
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.getTypeName
    name: getTypeName
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getTypeName()
      parameters: []
      return:
        type:
          - string
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.getTypeName
    name: getTypeName
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'static function getTypeName(type?: any)'
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - string
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.initialize
    name: initialize
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function initialize()
      parameters: []
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.initializeOptions
    name: initializeOptions
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function initializeOptions(options?: TOptions)'
      parameters:
        - id: options
          type:
            - TOptions
          description: |+

          optional: true
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.isDisposed
    name: isDisposed
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isDisposed()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.optionsPrefix
    name: optionsPrefix
    fullName: optionsPrefix
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string optionsPrefix
      return:
        type:
          - string
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.registerEnhancement
    name: registerEnhancement
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function registerEnhancement<TOptions>(type?: function,
        selector?: string, options?: TOptions, errorCallback?: IErrorCallback,
        enhancementOptions?: EnhancementOptions)
      parameters:
        - id: type
          type:
            - function
          description: ''
          optional: true
        - id: selector
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - TOptions
          description: ''
          optional: true
        - id: errorCallback
          type:
            - '@vss-web-extension-sdk.IErrorCallback'
          description: |+

          optional: true
        - id: enhancementOptions
          type:
            - '@vss-web-extension-sdk.VSS.Controls.EnhancementOptions'
          description: ''
          optional: true
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.registerJQueryWidget
    name: registerJQueryWidget
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function registerJQueryWidget<TOptions>(type?: any, widgetName?:
        any, widgetOptions?: TOptions, enhancementOptions?: EnhancementOptions)
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: widgetName
          type:
            - any
          description: ''
          optional: true
        - id: widgetOptions
          type:
            - TOptions
          description: |+

          optional: true
        - id: enhancementOptions
          type:
            - '@vss-web-extension-sdk.VSS.Controls.EnhancementOptions'
          description: ''
          optional: true
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Enhancement.setEnhancementOptions
    name: setEnhancementOptions
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Sets options related to the creation of this control or enhancement of an
      element as this control.

      Note: Options are merged.
    syntax:
      content: 'function setEnhancementOptions(enhancementOptions: EnhancementOptions)'
      parameters:
        - id: enhancementOptions
          type:
            - '@vss-web-extension-sdk.VSS.Controls.EnhancementOptions'
          description: ''
    module: VSS/Controls
