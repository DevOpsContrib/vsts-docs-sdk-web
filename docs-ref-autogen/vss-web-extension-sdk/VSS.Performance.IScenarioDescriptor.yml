### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor
    name: IScenarioDescriptor
    fullName: IScenarioDescriptor
    children:
      - vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.abort
      - >-
        vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.addAjaxCallStart
      - vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.addData
      - vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.addSplitTiming
      - vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.end
      - vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getAjaxCalls
      - >-
        vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getCorrelationId
      - vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getData
      - vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getDuration
      - vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getFeatureArea
      - vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getName
      - >-
        vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getSplitTimings
      - vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getStartTime
      - vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getTelemetry
      - vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.isActive
      - >-
        vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.isPageInteractive
      - vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.log
    langs:
      - typeScript
    type: interface
    summary: Describes single scenario
    source:
      path: vss.d.ts
      startLine: 29611
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Performance
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.abort
    name: abort
    children: []
    langs:
      - typeScript
    summary: Aborts this scenario
    syntax:
      content: function abort()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.addAjaxCallStart
    name: addAjaxCallStart
    children: []
    langs:
      - typeScript
    summary: Add information about ajax call to scenario
    syntax:
      content: function addAjaxCallStart()
      parameters: []
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Performance.IEndAjaxCallTiming'
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.addData
    name: addData
    children: []
    langs:
      - typeScript
    summary: Add additional data to the scenario.
    syntax:
      content: 'function addData(data: any)'
      parameters:
        - id: data
          type:
            - any
          description: |
            Property bag of additional data
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.addSplitTiming
    name: addSplitTiming
    children: []
    langs:
      - typeScript
    summary: Add split timing at current timestamp
    syntax:
      content: 'function addSplitTiming(name: string, elapsedTime?: number)'
      parameters:
        - id: name
          type:
            - string
          description: Name of split timing
        - id: elapsedTime
          type:
            - number
          description: |
            Optional: Deprecated: Store elapsed time in addition to split
          optional: true
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.end
    name: end
    children: []
    langs:
      - typeScript
    summary: Ends this scenario
    syntax:
      content: 'function end(endTime?: number)'
      parameters:
        - id: endTime
          type:
            - number
          description: >
            Optional Scenario End Time. IMPORTANT: Has to be obtained using
            getTimestamp
          optional: true
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getAjaxCalls
    name: getAjaxCalls
    children: []
    langs:
      - typeScript
    summary: Return ajax call timings
    syntax:
      content: function getAjaxCalls()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getCorrelationId
    name: getCorrelationId
    children: []
    langs:
      - typeScript
    summary: Returns scenario's correlation id
    syntax:
      content: function getCorrelationId()
      parameters: []
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getData
    name: getData
    children: []
    langs:
      - typeScript
    summary: Return the data associated with the scenario
    syntax:
      content: function getData()
      parameters: []
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getDuration
    name: getDuration
    children: []
    langs:
      - typeScript
    summary: Returns scenario duration in ms
    syntax:
      content: function getDuration()
      parameters: []
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getFeatureArea
    name: getFeatureArea
    children: []
    langs:
      - typeScript
    summary: Returns scenario area
    syntax:
      content: function getFeatureArea()
      parameters: []
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getName
    name: getName
    children: []
    langs:
      - typeScript
    summary: Returns scenario name
    syntax:
      content: function getName()
      parameters: []
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getSplitTimings
    name: getSplitTimings
    children: []
    langs:
      - typeScript
    summary: Return split timings
    syntax:
      content: function getSplitTimings()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getStartTime
    name: getStartTime
    children: []
    langs:
      - typeScript
    summary: Get the scenario start timestamp
    syntax:
      content: function getStartTime()
      parameters: []
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.getTelemetry
    name: getTelemetry
    children: []
    langs:
      - typeScript
    summary: Returns telemetry data for scenario
    syntax:
      content: function getTelemetry()
      parameters: []
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Telemetry.Services.TelemetryEventData'
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.isActive
    name: isActive
    children: []
    langs:
      - typeScript
    summary: Returns a value indicating whether the scenario is active
    syntax:
      content: function isActive()
      parameters: []
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.isPageInteractive
    name: isPageInteractive
    children: []
    langs:
      - typeScript
    summary: |-
      Determines whether or not the scenario is the primary indicator
      of Time-to-Interactive on the page
    syntax:
      content: function isPageInteractive()
      parameters: []
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Performance.IScenarioDescriptor.log
    name: log
    children: []
    langs:
      - typeScript
    summary: Logs scenario data to the browser's console
    syntax:
      content: function log()
      parameters: []
    type: method
