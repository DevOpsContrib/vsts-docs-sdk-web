### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy
    name: IndexedSearchStrategy
    fullName: IndexedSearchStrategy<T>
    children:
      - >-
        vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy.clearStrategyStore
      - vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy.dataExists
      - >-
        vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy.getIndexedItemsCount
      - vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy.getIndexTotalSize
      - vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy.constructor
      - vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy.processItems
      - vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy.search
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.Search.SearchStrategy<T>'
    source:
      path: vss.d.ts
      startLine: 30927
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Search
  - uid: vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy.clearStrategyStore
    name: clearStrategyStore
    children: []
    langs:
      - typeScript
    summary: Clears the items stored in the strategy.
    syntax:
      content: function clearStrategyStore()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy.dataExists
    name: dataExists
    children: []
    langs:
      - typeScript
    summary: Checks whether data exists in the search strategy
    syntax:
      content: function dataExists()
      parameters: []
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy.getIndexedItemsCount
    name: getIndexedItemsCount
    children: []
    langs:
      - typeScript
    summary: Return the total count of item indexed.
    syntax:
      content: function getIndexedItemsCount()
      parameters: []
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy.getIndexTotalSize
    name: getIndexTotalSize
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getIndexTotalSize()
      parameters: []
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy.constructor
    name: IndexedSearchStrategy
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new IndexedSearchStrategy(store?: IndexedSearchStore<T>, options?:
        ISearchStrategyOptions<T>)
      parameters:
        - id: store
          type:
            - '@vss-web-extension-sdk.VSS.Search.IndexedSearchStore<T>'
          description: ''
          optional: true
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.Search.ISearchStrategyOptions<T>'
          description: ''
          optional: true
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy.processItems
    name: processItems
    children: []
    langs:
      - typeScript
    summary: Processes all SearchableObjects and adds them to the index
    syntax:
      content: 'function processItems(searchableObjects: SearchableObject<T>[])'
      parameters:
        - id: searchableObjects
          type:
            - '@vss-web-extension-sdk.VSS.Search.SearchableObject<T>[]'
          description: |
            SearchableObjects to add
    type: method
  - uid: vss-web-extension-sdk.VSS.Search.IndexedSearchStrategy.search
    name: search
    children: []
    langs:
      - typeScript
    summary: >-
      Performs a search using the Indexer and then runs the resultHandler on the
      results.
    syntax:
      content: 'function search(query: string)'
      parameters:
        - id: query
          type:
            - string
          description: Query to run search on
    type: method
