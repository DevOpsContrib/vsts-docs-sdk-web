### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter
    name: QueryFilter
    fullName: QueryFilter
    children:
      - vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter.criteria
      - vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter.direction
      - vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter.pageNumber
      - vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter.pageSize
      - vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter.pagingToken
      - vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter.sortBy
      - vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter.sortOrder
    langs:
      - typeScript
    type: interface
    summary: A filter used to define a set of extensions to return during a query.
    package: vss-web-extension-sdk
    module: VSS/Gallery/Contracts
  - uid: vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter.criteria
    name: criteria
    fullName: criteria
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The filter values define the set of values in this query. They are applied
      based on the QueryFilterType.
    syntax:
      return:
        type:
          - function
  - uid: vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter.direction
    name: direction
    fullName: direction
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The PagingDirection is applied to a paging token if one exists. If not the
      direction is ignored, and Forward from the start of the resultset is used.
      Direction should be left out of the request unless a paging token is used
      to help prevent future issues.
    syntax:
      return:
        type:
          - PagingDirection
  - uid: vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter.pageNumber
    name: pageNumber
    fullName: pageNumber
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The page number requested by the user. If not provided 1 is assumed by
      default.
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter.pageSize
    name: pageSize
    fullName: pageSize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The page size defines the number of results the caller wants for this
      filter. The count can't exceed the overall query size limits.
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter.pagingToken
    name: pagingToken
    fullName: pagingToken
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The paging token is a distinct type of filter and the other filter fields
      are ignored. The paging token represents the continuation of a previously
      executed query. The information about where in the result and what fields
      are being filtered are embeded in the token.
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter.sortBy
    name: sortBy
    fullName: sortBy
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Defines the type of sorting to be applied on the results. The page slice
      is cut of the sorted results only.
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.VSS.Gallery.Contracts.QueryFilter.sortOrder
    name: sortOrder
    fullName: sortOrder
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Defines the order of sorting, 1 for Ascending, 2 for Descending, else
      default ordering based on the SortBy value
    syntax:
      return:
        type:
          - number
