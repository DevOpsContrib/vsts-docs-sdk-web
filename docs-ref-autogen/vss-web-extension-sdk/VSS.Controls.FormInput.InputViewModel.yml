### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel
    name: InputViewModel
    fullName: InputViewModel
    children:
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.addDeleteCallback
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.addDependenciesSatisfiedCallback
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.addDependency
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.addValidityFollower
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.addValueChangedCallback
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.checkDependenciesSatisfied
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.deleteViewModel
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.dependsOn
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.getDependenciesSatisfied
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.getId
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.getInputDescriptor
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.getPossibleValueAtIndex
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.getSelectedIndex
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.getValidationMessage
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.getValue
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.inputDependenciesSatisfied
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.constructor
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.invalidateOnDependencyChange
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.invalidateValues
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.isDirty
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.isDropList
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.isEmpty
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.isRequired
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.isValid
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.onBlur
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.refresh
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.removeValidityFollower
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.removeValueChangedCallback
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.setSelectedIndex
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.setValidityDelegate
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.setValue
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.suppressValidityChangeNotifications
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.updateValues
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.validate
    langs:
      - typeScript
    type: class
    summary: ''
    source:
      path: vss.d.ts
      startLine: 11849
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.addDeleteCallback
    name: addDeleteCallback
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addDeleteCallback(callback: () => void, addToFront?: boolean)'
      parameters:
        - id: callback
          type:
            - () => void
          description: ''
        - id: addToFront
          type:
            - boolean
          description: ''
          optional: true
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.addDependenciesSatisfiedCallback
    name: addDependenciesSatisfiedCallback
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addDependenciesSatisfiedCallback(callback: (satisfied: boolean)
        => void, addToFront?: boolean)
      parameters:
        - id: callback
          type:
            - '(satisfied: boolean) => void'
          description: ''
        - id: addToFront
          type:
            - boolean
          description: ''
          optional: true
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.addDependency
    name: addDependency
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addDependency(dependency: InputViewModelDelegate<boolean>,
        addToFront?: boolean)
      parameters:
        - id: dependency
          type:
            - >-
              @vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModelDelegate<boolean>
          description: ''
        - id: addToFront
          type:
            - boolean
          description: ''
          optional: true
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.addValidityFollower
    name: addValidityFollower
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addValidityFollower(follower: InputViewModel, addToFront?:
        boolean)
      parameters:
        - id: follower
          type:
            - '@vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel'
          description: ''
        - id: addToFront
          type:
            - boolean
          description: ''
          optional: true
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.addValueChangedCallback
    name: addValueChangedCallback
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addValueChangedCallback(callback: InputViewModelDelegate<void>,
        addToFront?: boolean)
      parameters:
        - id: callback
          type:
            - >-
              @vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModelDelegate<void>
          description: ''
        - id: addToFront
          type:
            - boolean
          description: ''
          optional: true
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.checkDependenciesSatisfied
    name: checkDependenciesSatisfied
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function checkDependenciesSatisfied()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.deleteViewModel
    name: deleteViewModel
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function deleteViewModel()
      parameters: []
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.dependsOn
    name: dependsOn
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function dependsOn(inputValueId: string)'
      parameters:
        - id: inputValueId
          type:
            - string
          description: ''
      return:
        type:
          - boolean
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.getDependenciesSatisfied
    name: getDependenciesSatisfied
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getDependenciesSatisfied()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.getId
    name: getId
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getId()
      parameters: []
      return:
        type:
          - string
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.getInputDescriptor
    name: getInputDescriptor
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getInputDescriptor()
      parameters: []
      return:
        type:
          - >-
            @vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.getPossibleValueAtIndex
    name: getPossibleValueAtIndex
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPossibleValueAtIndex(index: number)'
      parameters:
        - id: index
          type:
            - number
          description: ''
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Common.Contracts.FormInput.InputValue'
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.getSelectedIndex
    name: getSelectedIndex
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getSelectedIndex()
      parameters: []
      return:
        type:
          - number
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.getValidationMessage
    name: getValidationMessage
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getValidationMessage()
      parameters: []
      return:
        type:
          - string
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.getValue
    name: getValue
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getValue()
      parameters: []
      return:
        type:
          - any
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.inputDependenciesSatisfied
    name: inputDependenciesSatisfied
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function inputDependenciesSatisfied(satisfied: boolean)'
      parameters:
        - id: satisfied
          type:
            - boolean
          description: ''
      return:
        type:
          - boolean
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.constructor
    name: InputViewModel
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new InputViewModel(inputDescriptor: InputDescriptor, inputValue: any,
        inputValidChangedCallback: InputViewModelDelegate<void>, blurCallback:
        InputViewModelDelegate<void>, valueChangedCallbacks:
        InputViewModelDelegate<void>[], valuesChangedCallback:
        InputViewModelDelegate<void>, dependencies?:
        InputViewModelDelegate<boolean>[], dependenciesSatisfiedCallbacks?:
        (satisfied: boolean) => void[], deleteCallbacks?: () => void[])
      parameters:
        - id: inputDescriptor
          type:
            - >-
              @vss-web-extension-sdk.VSS.Common.Contracts.FormInput.InputDescriptor
          description: ''
        - id: inputValue
          type:
            - any
          description: ''
        - id: inputValidChangedCallback
          type:
            - >-
              @vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModelDelegate<void>
          description: ''
        - id: blurCallback
          type:
            - >-
              @vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModelDelegate<void>
          description: ''
        - id: valueChangedCallbacks
          type:
            - >-
              @vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModelDelegate<void>[]
          description: ''
        - id: valuesChangedCallback
          type:
            - >-
              @vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModelDelegate<void>
          description: ''
        - id: dependencies
          type:
            - >-
              @vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModelDelegate<boolean>[]
          description: ''
          optional: true
        - id: dependenciesSatisfiedCallbacks
          type:
            - '(satisfied: boolean) => void[]'
          description: ''
          optional: true
        - id: deleteCallbacks
          type:
            - '() => void[]'
          description: ''
          optional: true
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.invalidateOnDependencyChange
    name: invalidateOnDependencyChange
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function invalidateOnDependencyChange()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.invalidateValues
    name: invalidateValues
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function invalidateValues()
      parameters: []
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.isDirty
    name: isDirty
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isDirty()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.isDropList
    name: isDropList
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isDropList()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.isEmpty
    name: isEmpty
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isEmpty()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.isRequired
    name: isRequired
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isRequired()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.isValid
    name: isValid
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isValid()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.onBlur
    name: onBlur
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function onBlur()
      parameters: []
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.refresh
    name: refresh
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function refresh()
      parameters: []
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.removeValidityFollower
    name: removeValidityFollower
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeValidityFollower(follower: InputViewModel)'
      parameters:
        - id: follower
          type:
            - '@vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel'
          description: ''
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.removeValueChangedCallback
    name: removeValueChangedCallback
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeValueChangedCallback(callback:
        InputViewModelDelegate<void>)
      parameters:
        - id: callback
          type:
            - >-
              @vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModelDelegate<void>
          description: ''
      return:
        type:
          - boolean
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.setSelectedIndex
    name: setSelectedIndex
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setSelectedIndex(index: number)'
      parameters:
        - id: index
          type:
            - number
          description: ''
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.setValidityDelegate
    name: setValidityDelegate
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setValidityDelegate(validityDelegate: InputViewModel)'
      parameters:
        - id: validityDelegate
          type:
            - '@vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel'
          description: ''
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.setValue
    name: setValue
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setValue(value: any)'
      parameters:
        - id: value
          type:
            - any
          description: ''
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.suppressValidityChangeNotifications
    name: suppressValidityChangeNotifications
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function suppressValidityChangeNotifications(suppress: boolean)'
      parameters:
        - id: suppress
          type:
            - boolean
          description: ''
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.updateValues
    name: updateValues
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateValues(values: InputValues)'
      parameters:
        - id: values
          type:
            - '@vss-web-extension-sdk.VSS.Common.Contracts.FormInput.InputValues'
          description: ''
    module: VSS/Controls/FormInput
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel.validate
    name: validate
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function validate()
      parameters: []
    module: VSS/Controls/FormInput
