### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4
    name: CommonMethods2To4
    fullName: CommonMethods2To4
    children:
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.cancelOfferSubscription
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.changeSubscriptionAccount
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.constructor
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.createOfferMeterDefinition
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.createOfferSubscription
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.decreaseResourceQuantity
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.enableTrialOfferSubscriptionExtension
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.enableTrialOrPreviewOfferSubscription
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAccountRegions
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAccounts
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAccountsByIdentity
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAccountsByIdentityForOfferId
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAllOfferSubscriptionsForUser
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAzureSubscriptionForPurchase
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAzureSubscriptionForUser
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAzureSubscriptions
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getOfferMeter
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getOfferMeterPrice
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getOfferMeters
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getOfferSubscription
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getOfferSubscriptionForRenewalGroup
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getOfferSubscriptions
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getOfferSubscriptionsForGalleryItem
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getPurchasableOfferMeter
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getResourceStatus
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getResourceStatusByResourceName
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getSubscriptionAccount
      - vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getUsage
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.linkAccount
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.reportUsage
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.serviceInstanceId
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.unlinkAccount
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.updateMeter
      - >-
        vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.updateOfferSubscription
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.WebApi.RestClient.VssHttpClient'
    package: vss-web-extension-sdk
    module: VSS/Commerce/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.cancelOfferSubscription
    name: >-
      cancelOfferSubscription(offerSubscription: OfferSubscription,
      cancelReason: string, billingTarget?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: offerSubscription
          type:
            - '@vss-web-extension-sdk.VSS.Commerce.Contracts.OfferSubscription'
          description: ''
        - id: cancelReason
          type:
            - string
          description: ''
        - id: billingTarget
          type:
            - string
          description: ''
          optional: true
      content: >-
        function cancelOfferSubscription(offerSubscription: OfferSubscription,
        cancelReason: string, billingTarget?: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.changeSubscriptionAccount
    name: >-
      changeSubscriptionAccount(subscriptionId: string, providerNamespaceId:
      AccountProviderNamespace, accountId: string, hydrate?: boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Swaps the subscriptions for an account'
    syntax:
      parameters:
        - id: subscriptionId
          type:
            - string
          description: The subscription identifier.
        - id: providerNamespaceId
          type:
            - AccountProviderNamespace
          description: The provider namespace identifier.
        - id: accountId
          type:
            - string
          description: The account identifier.
        - id: hydrate
          type:
            - boolean
          description: Whether or not the hydrate the account into ARM.
          optional: true
      content: >-
        function changeSubscriptionAccount(subscriptionId: string,
        providerNamespaceId: AccountProviderNamespace, accountId: string,
        hydrate?: boolean)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.constructor
    name: >-
      CommonMethods2To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new CommonMethods2To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.createOfferMeterDefinition
    name: 'createOfferMeterDefinition(offerConfig: OfferMeter)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: offerConfig
          type:
            - '@vss-web-extension-sdk.VSS.Commerce.Contracts.OfferMeter'
          description: ''
      content: 'function createOfferMeterDefinition(offerConfig: OfferMeter)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.createOfferSubscription
    name: >-
      createOfferSubscription(offerSubscription: OfferSubscription, offerCode?:
      string, tenantId?: string, objectId?: string, billingTarget?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: offerSubscription
          type:
            - '@vss-web-extension-sdk.VSS.Commerce.Contracts.OfferSubscription'
          description: ''
        - id: offerCode
          type:
            - string
          description: ''
          optional: true
        - id: tenantId
          type:
            - string
          description: ''
          optional: true
        - id: objectId
          type:
            - string
          description: ''
          optional: true
        - id: billingTarget
          type:
            - string
          description: ''
          optional: true
      content: >-
        function createOfferSubscription(offerSubscription: OfferSubscription,
        offerCode?: string, tenantId?: string, objectId?: string,
        billingTarget?: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.decreaseResourceQuantity
    name: >-
      decreaseResourceQuantity(offerMeterName: string, renewalGroup:
      ResourceRenewalGroup, quantity: number, shouldBeImmediate: boolean,
      azureSubscriptionId: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: offerMeterName
          type:
            - string
          description: ''
        - id: renewalGroup
          type:
            - ResourceRenewalGroup
          description: ''
        - id: quantity
          type:
            - number
          description: ''
        - id: shouldBeImmediate
          type:
            - boolean
          description: ''
        - id: azureSubscriptionId
          type:
            - string
          description: ''
      content: >-
        function decreaseResourceQuantity(offerMeterName: string, renewalGroup:
        ResourceRenewalGroup, quantity: number, shouldBeImmediate: boolean,
        azureSubscriptionId: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.enableTrialOfferSubscriptionExtension
    name: >-
      enableTrialOfferSubscriptionExtension(offerMeterName: string,
      renewalGroup: ResourceRenewalGroup, endDate: Date)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: offerMeterName
          type:
            - string
          description: ''
        - id: renewalGroup
          type:
            - ResourceRenewalGroup
          description: ''
        - id: endDate
          type:
            - Date
          description: ''
      content: >-
        function enableTrialOfferSubscriptionExtension(offerMeterName: string,
        renewalGroup: ResourceRenewalGroup, endDate: Date)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.enableTrialOrPreviewOfferSubscription
    name: >-
      enableTrialOrPreviewOfferSubscription(offerMeterName: string,
      renewalGroup: ResourceRenewalGroup)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Creates the trial or preview offer subscription.'
    syntax:
      parameters:
        - id: offerMeterName
          type:
            - string
          description: Name of the offer meter.
        - id: renewalGroup
          type:
            - ResourceRenewalGroup
          description: The renewal group.
      content: >-
        function enableTrialOrPreviewOfferSubscription(offerMeterName: string,
        renewalGroup: ResourceRenewalGroup)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAccountRegions
    name: getAccountRegions()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getAccountRegions()
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.AzureRegion[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAccounts
    name: >-
      getAccounts(subscriptionId: string, providerNamespaceId:
      AccountProviderNamespace)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets the accounts by subscription.'
    syntax:
      parameters:
        - id: subscriptionId
          type:
            - string
          description: The subscription identifier.
        - id: providerNamespaceId
          type:
            - AccountProviderNamespace
          description: The provider namespace identifier.
      content: >-
        function getAccounts(subscriptionId: string, providerNamespaceId:
        AccountProviderNamespace)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.ISubscriptionAccount[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAccountsByIdentity
    name: >-
      getAccountsByIdentity(providerNamespaceId: AccountProviderNamespace,
      memberId: string, queryOnlyOwnerAccounts: boolean,
      inlcudeDisabledAccounts: boolean, includeMSAAccounts: boolean,
      serviceOwners: string[])
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets the accounts owned by identity.'
    syntax:
      parameters:
        - id: providerNamespaceId
          type:
            - AccountProviderNamespace
          description: The provider namespace identifier.
        - id: memberId
          type:
            - string
          description: The owner identifier.
        - id: queryOnlyOwnerAccounts
          type:
            - boolean
          description: 'if set to true [query only owner accounts].'
        - id: inlcudeDisabledAccounts
          type:
            - boolean
          description: 'if set to true [inlcude disabled accounts].'
        - id: includeMSAAccounts
          type:
            - boolean
          description: ''
        - id: serviceOwners
          type:
            - 'string[]'
          description: ''
      content: >-
        function getAccountsByIdentity(providerNamespaceId:
        AccountProviderNamespace, memberId: string, queryOnlyOwnerAccounts:
        boolean, inlcudeDisabledAccounts: boolean, includeMSAAccounts: boolean,
        serviceOwners: string[])
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.ISubscriptionAccount[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAccountsByIdentityForOfferId
    name: >-
      getAccountsByIdentityForOfferId(providerNamespaceId:
      AccountProviderNamespace, memberId: string, queryOnlyOwnerAccounts:
      boolean, inlcudeDisabledAccounts: boolean, includeMSAAccounts: boolean,
      serviceOwners: string[], galleryId: string, addUnlinkedSubscription?:
      boolean, queryAccountsByUpn?: boolean)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Get accounts and associated subscriptions by identity and
      offer id
    syntax:
      parameters:
        - id: providerNamespaceId
          type:
            - AccountProviderNamespace
          description: account provider namespace id
        - id: memberId
          type:
            - string
          description: owner identifier
        - id: queryOnlyOwnerAccounts
          type:
            - boolean
          description: 'if set to true [query only owner accounts].'
        - id: inlcudeDisabledAccounts
          type:
            - boolean
          description: 'if set to true [inlcude disabled accounts].'
        - id: includeMSAAccounts
          type:
            - boolean
          description: 'if set to true [inlcude MSA accounts].'
        - id: serviceOwners
          type:
            - 'string[]'
          description: ''
        - id: galleryId
          type:
            - string
          description: gallery id of resource
        - id: addUnlinkedSubscription
          type:
            - boolean
          description: 'if set to true [inlcude azure subscriptions own by user].'
          optional: true
        - id: queryAccountsByUpn
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getAccountsByIdentityForOfferId(providerNamespaceId:
        AccountProviderNamespace, memberId: string, queryOnlyOwnerAccounts:
        boolean, inlcudeDisabledAccounts: boolean, includeMSAAccounts: boolean,
        serviceOwners: string[], galleryId: string, addUnlinkedSubscription?:
        boolean, queryAccountsByUpn?: boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.ISubscriptionAccount[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAllOfferSubscriptionsForUser
    name: >-
      getAllOfferSubscriptionsForUser(validateAzuresubscription: boolean,
      nextBillingPeriod: boolean)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Get all offer subscriptions for user for valid azure
      subscriptions. This may be span across multiple accounts
    syntax:
      parameters:
        - id: validateAzuresubscription
          type:
            - boolean
          description: ''
        - id: nextBillingPeriod
          type:
            - boolean
          description: True to return next billing cycle committed quantity
      content: >-
        function getAllOfferSubscriptionsForUser(validateAzuresubscription:
        boolean, nextBillingPeriod: boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.IOfferSubscription[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAzureSubscriptionForPurchase
    name: >-
      getAzureSubscriptionForPurchase(subscriptionId: string, galleryItemId:
      string, accountId?: string)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Validates specified azure subscription for purchase. Rules
      such as msdn subscription, spending limit checks, etc are performed by
      this method.
    syntax:
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Azure Subscription Id
        - id: galleryItemId
          type:
            - string
          description: Fully qualified gallery id
        - id: accountId
          type:
            - string
          description: Collection id
          optional: true
      content: >-
        function getAzureSubscriptionForPurchase(subscriptionId: string,
        galleryItemId: string, accountId?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.ISubscriptionAccount>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAzureSubscriptionForUser
    name: >-
      getAzureSubscriptionForUser(subscriptionId?: string, queryAcrossTenants?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Returns azure subscriptions across tenants.'
    syntax:
      parameters:
        - id: subscriptionId
          type:
            - string
          description: Azure subscription id
          optional: true
        - id: queryAcrossTenants
          type:
            - boolean
          description: >-
            Query across multiple tenants if the logged in user is member of
            multiple tenants
          optional: true
      content: >-
        function getAzureSubscriptionForUser(subscriptionId?: string,
        queryAcrossTenants?: boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.ISubscriptionAccount[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getAzureSubscriptions
    name: >-
      getAzureSubscriptions(subscriptionIds: string[], providerNamespaceId:
      AccountProviderNamespace)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get a list of Azure Subscriptions.'
    syntax:
      parameters:
        - id: subscriptionIds
          type:
            - 'string[]'
          description: List of Subscriptions.
        - id: providerNamespaceId
          type:
            - AccountProviderNamespace
          description: Namespace id.
      content: >-
        function getAzureSubscriptions(subscriptionIds: string[],
        providerNamespaceId: AccountProviderNamespace)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.IAzureSubscription[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getOfferMeter
    name: 'getOfferMeter(resourceName: string, resourceNameResolveMethod: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns resource information like status, committed
      quantity, included quantity, reset date, etc.
    syntax:
      parameters:
        - id: resourceName
          type:
            - string
          description: ''
        - id: resourceNameResolveMethod
          type:
            - string
          description: Method of how to retrieve the resource
      content: >-
        function getOfferMeter(resourceName: string, resourceNameResolveMethod:
        string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.OfferMeter>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getOfferMeterPrice
    name: 'getOfferMeterPrice(galleryId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns an enumerable of instances of price for the
      specified offer meter in each region available
    syntax:
      parameters:
        - id: galleryId
          type:
            - string
          description: 'The name of the meter, e.g ms.testmanager-web'
      content: 'function getOfferMeterPrice(galleryId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.OfferMeterPrice[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getOfferMeters
    name: getOfferMeters()
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns resource information like status, committed
      quantity, included quantity, reset date, etc. about all available
      resources
    syntax:
      parameters: []
      content: function getOfferMeters()
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.OfferMeter[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getOfferSubscription
    name: 'getOfferSubscription(galleryId: string, nextBillingPeriod?: boolean)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns resource information like status, committed
      quantity, included quantity, reset date, etc.
    syntax:
      parameters:
        - id: galleryId
          type:
            - string
          description: Name of the resource
        - id: nextBillingPeriod
          type:
            - boolean
          description: True to return next billing cycle committed quantity
          optional: true
      content: >-
        function getOfferSubscription(galleryId: string, nextBillingPeriod?:
        boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.IOfferSubscription>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getOfferSubscriptionForRenewalGroup
    name: >-
      getOfferSubscriptionForRenewalGroup(galleryId: string, renewalGroup:
      ResourceRenewalGroup, nextBillingPeriod?: boolean)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns resource information like status, committed
      quantity, included quantity, reset date, etc.
    syntax:
      parameters:
        - id: galleryId
          type:
            - string
          description: Name of the resource
        - id: renewalGroup
          type:
            - ResourceRenewalGroup
          description: The renewal group.
        - id: nextBillingPeriod
          type:
            - boolean
          description: True to return next billing cycle committed quantity
          optional: true
      content: >-
        function getOfferSubscriptionForRenewalGroup(galleryId: string,
        renewalGroup: ResourceRenewalGroup, nextBillingPeriod?: boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.IOfferSubscription>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getOfferSubscriptions
    name: 'getOfferSubscriptions(nextBillingPeriod?: boolean)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns resource information like status, committed
      quantity, included quantity, reset date, etc.
    syntax:
      parameters:
        - id: nextBillingPeriod
          type:
            - boolean
          description: True to return next billing cycle committed quantity
          optional: true
      content: 'function getOfferSubscriptions(nextBillingPeriod?: boolean)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.IOfferSubscription[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getOfferSubscriptionsForGalleryItem
    name: >-
      getOfferSubscriptionsForGalleryItem(galleryItemId: string,
      azureSubscriptionId: string, nextBillingPeriod?: boolean)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Get all offer subscriptions for user for valid azure
      subscriptions. This may be span across multiple accounts
    syntax:
      parameters:
        - id: galleryItemId
          type:
            - string
          description: ''
        - id: azureSubscriptionId
          type:
            - string
          description: ''
        - id: nextBillingPeriod
          type:
            - boolean
          description: True to return next billing cycle committed quantity
          optional: true
      content: >-
        function getOfferSubscriptionsForGalleryItem(galleryItemId: string,
        azureSubscriptionId: string, nextBillingPeriod?: boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.IOfferSubscription[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getPurchasableOfferMeter
    name: >-
      getPurchasableOfferMeter(resourceName: string, resourceNameResolveMethod:
      string, subscriptionId: string, includeMeterPricing: boolean, offerCode?:
      string, tenantId?: string, objectId?: string)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns resource information like status, committed
      quantity, included quantity, reset date, etc.
    syntax:
      parameters:
        - id: resourceName
          type:
            - string
          description: ''
        - id: resourceNameResolveMethod
          type:
            - string
          description: ''
        - id: subscriptionId
          type:
            - string
          description: ''
        - id: includeMeterPricing
          type:
            - boolean
          description: ''
        - id: offerCode
          type:
            - string
          description: ''
          optional: true
        - id: tenantId
          type:
            - string
          description: ''
          optional: true
        - id: objectId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getPurchasableOfferMeter(resourceName: string,
        resourceNameResolveMethod: string, subscriptionId: string,
        includeMeterPricing: boolean, offerCode?: string, tenantId?: string,
        objectId?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.PurchasableOfferMeter>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getResourceStatus
    name: 'getResourceStatus(nextBillingPeriod?: boolean)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns resource information like status, committed
      quantity, included quantity, reset date, etc.
    syntax:
      parameters:
        - id: nextBillingPeriod
          type:
            - boolean
          description: True to return next billing cycle committed quantity
          optional: true
      content: 'function getResourceStatus(nextBillingPeriod?: boolean)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.ISubscriptionResource[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getResourceStatusByResourceName
    name: >-
      getResourceStatusByResourceName(resourceName: ResourceName,
      nextBillingPeriod?: boolean)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns resource information like status, committed
      quantity, included quantity, reset date, etc.
    syntax:
      parameters:
        - id: resourceName
          type:
            - ResourceName
          description: Name of the resource
        - id: nextBillingPeriod
          type:
            - boolean
          description: True to return next billing cycle committed quantity
          optional: true
      content: >-
        function getResourceStatusByResourceName(resourceName: ResourceName,
        nextBillingPeriod?: boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.ISubscriptionResource>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getSubscriptionAccount
    name: >-
      getSubscriptionAccount(providerNamespaceId: AccountProviderNamespace,
      accountId: string)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Retrieves the subscription id associated to an account or
      null if no subscription is associated.
    syntax:
      parameters:
        - id: providerNamespaceId
          type:
            - AccountProviderNamespace
          description: ''
        - id: accountId
          type:
            - string
          description: ''
      content: >-
        function getSubscriptionAccount(providerNamespaceId:
        AccountProviderNamespace, accountId: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.ISubscriptionAccount>
    type: method
  - uid: vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.getUsage
    name: 'getUsage(startTime: Date, endTime: Date, timeSpan: any)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns the aggregate resource usage over the specified time
      range WARNING: The return value of this method is significantly different
      than the post method on this controller. This is an aggregation of usage
      events over time rather than individual usage event(s).
    syntax:
      parameters:
        - id: startTime
          type:
            - Date
          description: 'Start of the the time range to retrieve, inclusive'
        - id: endTime
          type:
            - Date
          description: 'End of the time range to retrieve, exclusive'
        - id: timeSpan
          type:
            - any
          description: >-
            Interval of the time to retrieve, should be in a multiple of hour or
            day
      content: 'function getUsage(startTime: Date, endTime: Date, timeSpan: any)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Commerce.Contracts.IUsageEventAggregate[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.linkAccount
    name: >-
      linkAccount(subscriptionId: string, providerNamespaceId:
      AccountProviderNamespace, accountId: string, ownerId: string, hydrate?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Links the account to a subscription.'
    syntax:
      parameters:
        - id: subscriptionId
          type:
            - string
          description: The subscription identifier.
        - id: providerNamespaceId
          type:
            - AccountProviderNamespace
          description: The provider namespace identifier.
        - id: accountId
          type:
            - string
          description: The account identifier.
        - id: ownerId
          type:
            - string
          description: The account owner identifier.
        - id: hydrate
          type:
            - boolean
          description: Whether or not the hydrate the account into ARM.
          optional: true
      content: >-
        function linkAccount(subscriptionId: string, providerNamespaceId:
        AccountProviderNamespace, accountId: string, ownerId: string, hydrate?:
        boolean)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.reportUsage
    name: 'reportUsage(usageEvent: UsageEvent)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Saves usage entry of a resource.'
    syntax:
      parameters:
        - id: usageEvent
          type:
            - '@vss-web-extension-sdk.VSS.Commerce.Contracts.UsageEvent'
          description: Detailed usage event
      content: 'function reportUsage(usageEvent: UsageEvent)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.unlinkAccount
    name: >-
      unlinkAccount(subscriptionId: string, providerNamespaceId:
      AccountProviderNamespace, accountId: string, ownerId: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Unlinks an account from the subscription.'
    syntax:
      parameters:
        - id: subscriptionId
          type:
            - string
          description: The subscription identifier.
        - id: providerNamespaceId
          type:
            - AccountProviderNamespace
          description: The provider namespace identifier.
        - id: accountId
          type:
            - string
          description: The account identifier.
        - id: ownerId
          type:
            - string
          description: The account owner identifier.
      content: >-
        function unlinkAccount(subscriptionId: string, providerNamespaceId:
        AccountProviderNamespace, accountId: string, ownerId: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.updateMeter
    name: 'updateMeter(meter: SubscriptionResource)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Sets the maximum and included quantities for a resource'
    syntax:
      parameters:
        - id: meter
          type:
            - '@vss-web-extension-sdk.VSS.Commerce.Contracts.SubscriptionResource'
          description: ''
      content: 'function updateMeter(meter: SubscriptionResource)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Commerce.RestClient.CommonMethods2To4.updateOfferSubscription
    name: 'updateOfferSubscription(offerSubscription: OfferSubscription)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Sets the maximum and included quantities for a resource'
    syntax:
      parameters:
        - id: offerSubscription
          type:
            - '@vss-web-extension-sdk.VSS.Commerce.Contracts.OfferSubscription'
          description: ''
      content: 'function updateOfferSubscription(offerSubscription: OfferSubscription)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
