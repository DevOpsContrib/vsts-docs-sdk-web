### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4
    name: CommonMethods2To4
    fullName: CommonMethods2To4
    children:
      - vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.constructor
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.createChatRoom
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.deleteChatRoom
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.deleteMessage
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.getAllChatRoomMessages
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.getAllChatRoomUsers
      - vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.getAllRooms
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.getChatRoomById
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.getChatRoomMessageById
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.getChatRoomUserById
      - vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.joinRoom
      - vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.leaveRoom
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.sendMessageToRoom
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.serviceInstanceId
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.updateChatMessage
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.updateChatRoom
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.WebApi.RestClient.VssHttpClient'
    source:
      path: tfs.d.ts
      startLine: 4222
      remote:
        path: typings\tfs.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: TFS/Chat/RestClient
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.constructor
    name: >-
      CommonMethods2To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new CommonMethods2To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.createChatRoom
    name: 'createChatRoom(roomUpdate: RoomData)'
    children: []
    langs:
      - typeScript
    summary: Create a single chat room
    syntax:
      parameters:
        - id: roomUpdate
          type:
            - '@vss-web-extension-sdk.TFS.Chat.Contracts.RoomData'
          description: Information to create the room
      content: 'function createChatRoom(roomUpdate: RoomData)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Chat.Contracts.Room>
    type: method
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.deleteChatRoom
    name: 'deleteChatRoom(roomId: number)'
    children: []
    langs:
      - typeScript
    summary: Delete a given chat room
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room
      content: 'function deleteChatRoom(roomId: number)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.deleteMessage
    name: 'deleteMessage(roomId: number, messageId: number)'
    children: []
    langs:
      - typeScript
    summary: Delete a given chat message
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room
        - id: messageId
          type:
            - number
          description: Id of the message to delete
      content: 'function deleteMessage(roomId: number, messageId: number)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.getAllChatRoomMessages
    name: 'getAllChatRoomMessages(roomId: number)'
    children: []
    langs:
      - typeScript
    summary: Retrieve a listing of all chat messages in a given room
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room
      content: 'function getAllChatRoomMessages(roomId: number)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Chat.Contracts.Message[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.getAllChatRoomUsers
    name: 'getAllChatRoomUsers(roomId: number)'
    children: []
    langs:
      - typeScript
    summary: Retrieve a listing of all chat users
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room
      content: 'function getAllChatRoomUsers(roomId: number)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Chat.Contracts.User[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.getAllRooms
    name: getAllRooms()
    children: []
    langs:
      - typeScript
    summary: Retrieve a listing of all chat rooms and the room information
    syntax:
      parameters: []
      content: function getAllRooms()
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Chat.Contracts.Room[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.getChatRoomById
    name: 'getChatRoomById(roomId: number)'
    children: []
    langs:
      - typeScript
    summary: Retrieve information on a single chat room
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room to retrieve
      content: 'function getChatRoomById(roomId: number)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Chat.Contracts.Room>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.getChatRoomMessageById
    name: 'getChatRoomMessageById(roomId: number, messageId: number)'
    children: []
    langs:
      - typeScript
    summary: Retrieve information on a single chat message
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room
        - id: messageId
          type:
            - number
          description: Id of the message to retrieve
      content: 'function getChatRoomMessageById(roomId: number, messageId: number)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Chat.Contracts.Message>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.getChatRoomUserById
    name: 'getChatRoomUserById(roomId: number, userId: string)'
    children: []
    langs:
      - typeScript
    summary: Retrieve information on a single chat user
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room
        - id: userId
          type:
            - string
          description: TfId of the user
      content: 'function getChatRoomUserById(roomId: number, userId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Chat.Contracts.User>
    type: method
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.joinRoom
    name: 'joinRoom(userUpdate: UserData, roomId: number, userId: string)'
    children: []
    langs:
      - typeScript
    summary: Joins a user to a given room
    syntax:
      parameters:
        - id: userUpdate
          type:
            - '@vss-web-extension-sdk.TFS.Chat.Contracts.UserData'
          description: user model information
        - id: roomId
          type:
            - number
          description: Id of the room
        - id: userId
          type:
            - string
          description: TfId of the user
      content: 'function joinRoom(userUpdate: UserData, roomId: number, userId: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.leaveRoom
    name: 'leaveRoom(roomId: number, userId: string)'
    children: []
    langs:
      - typeScript
    summary: Leaves a user from a given room
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room
        - id: userId
          type:
            - string
          description: TfId of the user
      content: 'function leaveRoom(roomId: number, userId: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.sendMessageToRoom
    name: 'sendMessageToRoom(messageUpdate: MessageData, roomId: number)'
    children: []
    langs:
      - typeScript
    summary: Post message to a room
    syntax:
      parameters:
        - id: messageUpdate
          type:
            - '@vss-web-extension-sdk.TFS.Chat.Contracts.MessageData'
          description: Content of the message to post
        - id: roomId
          type:
            - number
          description: Id of the room
      content: 'function sendMessageToRoom(messageUpdate: MessageData, roomId: number)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Chat.Contracts.Message>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string serviceInstanceId
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.updateChatMessage
    name: >-
      updateChatMessage(messageUpdate: MessageData, roomId: number, messageId:
      number)
    children: []
    langs:
      - typeScript
    summary: Update a given chat message
    syntax:
      parameters:
        - id: messageUpdate
          type:
            - '@vss-web-extension-sdk.TFS.Chat.Contracts.MessageData'
          description: New message content
        - id: roomId
          type:
            - number
          description: Id of the room
        - id: messageId
          type:
            - number
          description: Id of the message
      content: >-
        function updateChatMessage(messageUpdate: MessageData, roomId: number,
        messageId: number)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Chat.Contracts.Message>
    type: method
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.CommonMethods2To4.updateChatRoom
    name: 'updateChatRoom(roomUpdate: RoomData, roomId: number)'
    children: []
    langs:
      - typeScript
    summary: Update information on a single chat room
    syntax:
      parameters:
        - id: roomUpdate
          type:
            - '@vss-web-extension-sdk.TFS.Chat.Contracts.RoomData'
          description: Room information
        - id: roomId
          type:
            - number
          description: Id of the room to update
      content: 'function updateChatRoom(roomUpdate: RoomData, roomId: number)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Chat.Contracts.Room>
    type: method
