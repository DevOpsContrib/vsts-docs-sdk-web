### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4
    name: CommonMethods3To4
    fullName: CommonMethods3To4
    children:
      - >-
        vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4.constructor
      - >-
        vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4.getEntries
      - >-
        vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4.getEntriesForScope
      - >-
        vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4.removeEntries
      - >-
        vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4.removeEntriesForScope
      - >-
        vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4.setEntries
      - >-
        vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4.setEntriesForScope
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.WebApi.RestClient.VssHttpClient'
    source:
      path: vss.d.ts
      startLine: 31929
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Settings/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4.constructor
    name: >-
      CommonMethods3To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new CommonMethods3To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4.getEntries
    name: 'getEntries(userScope: string, key?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get all setting entries for the given user/all-users scope'
    syntax:
      content: 'function getEntries(userScope: string, key?: string)'
      parameters:
        - id: userScope
          type:
            - string
          description: >-
            User-Scope at which to get the value. Should be "me" for the current
            user or "host" for all users.
        - id: key
          type:
            - string
          description: Optional key under which to filter all the entries
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<[key: string]: any>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4.getEntriesForScope
    name: >-
      getEntriesForScope(userScope: string, scopeName: string, scopeValue:
      string, key?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get all setting entries for the given named scope'
    syntax:
      content: >-
        function getEntriesForScope(userScope: string, scopeName: string,
        scopeValue: string, key?: string)
      parameters:
        - id: userScope
          type:
            - string
          description: >-
            User-Scope at which to get the value. Should be "me" for the current
            user or "host" for all users.
        - id: scopeName
          type:
            - string
          description: Scope at which to get the setting for (e.g. "project" or "team")
        - id: scopeValue
          type:
            - string
          description: Value of the scope (e.g. the project or team id)
        - id: key
          type:
            - string
          description: Optional key under which to filter all the entries
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<[key: string]: any>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4.removeEntries
    name: 'removeEntries(userScope: string, key: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Remove the entry or entries under the specified path'
    syntax:
      content: 'function removeEntries(userScope: string, key: string)'
      parameters:
        - id: userScope
          type:
            - string
          description: >-
            User-Scope at which to remove the value. Should be "me" for the
            current user or "host" for all users.
        - id: key
          type:
            - string
          description: Root key of the entry or entries to remove
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4.removeEntriesForScope
    name: >-
      removeEntriesForScope(userScope: string, scopeName: string, scopeValue:
      string, key: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Remove the entry or entries under the specified path'
    syntax:
      content: >-
        function removeEntriesForScope(userScope: string, scopeName: string,
        scopeValue: string, key: string)
      parameters:
        - id: userScope
          type:
            - string
          description: >-
            User-Scope at which to remove the value. Should be "me" for the
            current user or "host" for all users.
        - id: scopeName
          type:
            - string
          description: Scope at which to get the setting for (e.g. "project" or "team")
        - id: scopeValue
          type:
            - string
          description: Value of the scope (e.g. the project or team id)
        - id: key
          type:
            - string
          description: Root key of the entry or entries to remove
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4.setEntries
    name: 'setEntries(entries: [key: string]: any, userScope: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Set the specified setting entry values for the given
      user/all-users scope
    syntax:
      content: 'function setEntries(entries: [key: string]: any, userScope: string)'
      parameters:
        - id: entries
          type:
            - '[key: string]: any'
          description: The entries to set
        - id: userScope
          type:
            - string
          description: >-
            User-Scope at which to set the values. Should be "me" for the
            current user or "host" for all users.
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Settings.RestClient.CommonMethods3To4.setEntriesForScope
    name: >-
      setEntriesForScope(entries: [key: string]: any, userScope: string,
      scopeName: string, scopeValue: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Set the specified entries for the given named scope'
    syntax:
      content: >-
        function setEntriesForScope(entries: [key: string]: any, userScope:
        string, scopeName: string, scopeValue: string)
      parameters:
        - id: entries
          type:
            - '[key: string]: any'
          description: The entries to set
        - id: userScope
          type:
            - string
          description: >-
            User-Scope at which to set the values. Should be "me" for the
            current user or "host" for all users.
        - id: scopeName
          type:
            - string
          description: Scope at which to set the settings on (e.g. "project" or "team")
        - id: scopeValue
          type:
            - string
          description: Value of the scope (e.g. the project or team id)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
