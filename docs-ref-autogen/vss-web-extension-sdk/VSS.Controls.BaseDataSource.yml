### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource
    name: BaseDataSource
    fullName: BaseDataSource
    children:
      - vss-web-extension-sdk.VSS.Controls.BaseDataSource.constructor
      - vss-web-extension-sdk.VSS.Controls.BaseDataSource.ensureItems
      - vss-web-extension-sdk.VSS.Controls.BaseDataSource.getComparer
      - vss-web-extension-sdk.VSS.Controls.BaseDataSource.getCount
      - vss-web-extension-sdk.VSS.Controls.BaseDataSource.getItem
      - vss-web-extension-sdk.VSS.Controls.BaseDataSource.getItemIndex
      - vss-web-extension-sdk.VSS.Controls.BaseDataSource.getItemIndexes
      - vss-web-extension-sdk.VSS.Controls.BaseDataSource.getItems
      - vss-web-extension-sdk.VSS.Controls.BaseDataSource.getItemText
      - vss-web-extension-sdk.VSS.Controls.BaseDataSource.getSource
      - vss-web-extension-sdk.VSS.Controls.BaseDataSource.nextIndex
      - vss-web-extension-sdk.VSS.Controls.BaseDataSource.prepareSource
      - vss-web-extension-sdk.VSS.Controls.BaseDataSource.setItems
      - vss-web-extension-sdk.VSS.Controls.BaseDataSource.setSource
    langs:
      - typeScript
    type: class
    summary: ''
    source:
      path: vss.d.ts
      startLine: 9423
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource.constructor
    name: 'BaseDataSource(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'new BaseDataSource(options?: any)'
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource.ensureItems
    name: ensureItems()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function ensureItems()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource.getComparer
    name: getComparer()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getComparer()
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource.getCount
    name: 'getCount(all?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: all
          type:
            - any
          description: |+

          optional: true
      content: 'function getCount(all?: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource.getItem
    name: 'getItem(index: any, all?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: index
          type:
            - any
          description: ''
        - id: all
          type:
            - any
          description: |+

          optional: true
      content: 'function getItem(index: any, all?: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource.getItemIndex
    name: 'getItemIndex(itemText: any, startsWith?: any, all?: any)'
    children: []
    langs:
      - typeScript
    summary: Gets first matching index to text input
    syntax:
      parameters:
        - id: itemText
          type:
            - any
          description: ''
        - id: startsWith
          type:
            - any
          description: ''
          optional: true
        - id: all
          type:
            - any
          description: |+

          optional: true
      content: 'function getItemIndex(itemText: any, startsWith?: any, all?: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource.getItemIndexes
    name: 'getItemIndexes(itemText: string, startsWith?: boolean, all?: boolean)'
    children: []
    langs:
      - typeScript
    summary: Returns an array of all indexes that match the search criteria
    syntax:
      parameters:
        - id: itemText
          type:
            - string
          description: ''
        - id: startsWith
          type:
            - boolean
          description: ''
          optional: true
        - id: all
          type:
            - boolean
          description: |+

          optional: true
      content: >-
        function getItemIndexes(itemText: string, startsWith?: boolean, all?:
        boolean)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource.getItems
    name: 'getItems(all?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: all
          type:
            - any
          description: |+

          optional: true
      content: 'function getItems(all?: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource.getItemText
    name: 'getItemText(index: any, all?: any, textOnly?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: index
          type:
            - any
          description: ''
        - id: all
          type:
            - any
          description: ''
          optional: true
        - id: textOnly
          type:
            - any
          description: ''
          optional: true
      content: 'function getItemText(index: any, all?: any, textOnly?: any)'
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource.getSource
    name: getSource()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getSource()
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource.nextIndex
    name: 'nextIndex(selectedIndex: any, delta: any, all: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: selectedIndex
          type:
            - any
          description: ''
        - id: delta
          type:
            - any
          description: ''
        - id: all
          type:
            - any
          description: ''
      content: 'function nextIndex(selectedIndex: any, delta: any, all: any)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource.prepareSource
    name: 'prepareSource(source?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: source
          type:
            - any
          description: |+

          optional: true
      content: 'function prepareSource(source?: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource.setItems
    name: 'setItems(items: any, allItems?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: items
          type:
            - any
          description: ''
        - id: allItems
          type:
            - any
          description: |+

          optional: true
      content: 'function setItems(items: any, allItems?: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.BaseDataSource.setSource
    name: 'setSource(source: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: source
          type:
            - any
          description: ''
      content: 'function setSource(source: any)'
    type: method
