### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker
    name: DatePicker
    fullName: DatePicker
    children:
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.cancelDelayedFunction
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.create
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.createIn
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.constructor
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.delayExecute
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.enhance
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.ENHANCEMENTS_DATA_KEY
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.enhancementTypeName
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.ENHANCEMENT_OPTIONPREFIX_KEY
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.ENHANCEMENT_OPTIONS_KEY
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.ensureEnhancement
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.ensureEnhancements
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.fireChangeIfNecessary
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getComboType
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getElement
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getEnabled
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getEnhancementOptions
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getId
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getInput
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getInstance
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getMode
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getOptionPrefix
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getSelectedIndex
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getText
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getTypeName
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getTypeName
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getValue
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.initializeOptions
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.invalidAttribute
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.isDisposed
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.isValid
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.optionsPrefix
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.registerEnhancement
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.registerJQueryWidget
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setAttribute
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setEnabled
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setEnhancementOptions
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setInvalid
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setMode
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setRole
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setSource
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setText
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setType
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.showDropPopup
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.toggleDropDown
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._bind
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._blockBlur
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._currentText
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._disposed
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._element
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._enhance
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._enhancementOptions
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._ensureInitialized
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._fire
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._fireChange
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._getEventNameSpace
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._getInDomPromise
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._getUniqueId
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._initialized
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._input
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._onInputBlur
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._onInputClick
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._onInputFocus
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._onInputKeyDown
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._options
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._setElement
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._setId
      - vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._unbind
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.cancelDelayedFunction
    name: 'cancelDelayedFunction(name: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Cancels any pending delayed functions (delayExecute calls) with the
      specified name
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: Name (supplied in the delayExecute call) of the operations to cancel
      content: 'function cancelDelayedFunction(name: string)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.create
    name: >-
      create(controlType: function, container: JQuery, controlOptions: TOptions,
      enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: Creates a the control specified by TControl in the given container.
    syntax:
      parameters:
        - id: controlType
          type: []
          description: ''
        - id: container
          type:
            - JQuery
          description: ''
        - id: controlOptions
          type:
            - TOptions
          description: ''
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function create(controlType: function, container: JQuery,
        controlOptions: TOptions, enhancementOptions?: EnhancementOptions)
      return:
        type:
          - TControl
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.createIn
    name: >-
      createIn(type?: any, container?: any, options?: TOptions, koCompatable?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: container
          type:
            - any
          description: ''
          optional: true
        - id: options
          type:
            - TOptions
          description: ''
          optional: true
        - id: koCompatable
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function createIn(type?: any, container?: any, options?: TOptions,
        koCompatable?: boolean)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Control
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.constructor
    name: 'DatePicker(options?: IComboOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - vss-web-extension-sdk.VSS.Controls.Combos.IComboOptions
          description: |+

          optional: true
      content: 'new DatePicker(options?: IComboOptions)'
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.delayExecute
    name: >-
      delayExecute(name?: string, msDelay?: number, cancelPendingOps?: boolean,
      func?: Function)
    children: []
    langs:
      - typeScript
    summary: Executes the provided function after the specified amount of time
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: >-
            (Optional) Name for this operation. Allows subsequent calls to
            cancel this action.
          optional: true
        - id: msDelay
          type:
            - number
          description: Delay in milliseconds to wait before executing the Function
          optional: true
        - id: cancelPendingOps
          type:
            - boolean
          description: >-
            If true, cancel any pending requests with this name. If false, and
            there are outstanding requests with this name already in progress,
            then do nothing.
          optional: true
        - id: func
          type:
            - Function
          description: |
            Method to execute after the delay
          optional: true
      content: >-
        function delayExecute(name?: string, msDelay?: number,
        cancelPendingOps?: boolean, func?: Function)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.enhance
    name: >-
      enhance(type: function, element: Enhancement, options?: function,
      enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type: []
          description: ''
        - id: element
          type:
            - Enhancement
          description: ''
        - id: options
          type:
            - function
          description: ''
          optional: true
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function enhance(type: function, element: Enhancement, options?:
        function, enhancementOptions?: EnhancementOptions)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.ENHANCEMENTS_DATA_KEY
    name: ENHANCEMENTS_DATA_KEY
    fullName: ENHANCEMENTS_DATA_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.enhancementTypeName
    name: enhancementTypeName
    fullName: enhancementTypeName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.ENHANCEMENT_OPTIONPREFIX_KEY
    name: ENHANCEMENT_OPTIONPREFIX_KEY
    fullName: ENHANCEMENT_OPTIONPREFIX_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.ENHANCEMENT_OPTIONS_KEY
    name: ENHANCEMENT_OPTIONS_KEY
    fullName: ENHANCEMENT_OPTIONS_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.ensureEnhancement
    name: 'ensureEnhancement(type?: any, context?: any, errorCallback?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: context
          type:
            - any
          description: ''
          optional: true
        - id: errorCallback
          type:
            - any
          description: ''
          optional: true
      content: >-
        function ensureEnhancement(type?: any, context?: any, errorCallback?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.ensureEnhancements
    name: 'ensureEnhancements(type?: any, context?: any, errorCallback?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: context
          type:
            - any
          description: ''
          optional: true
        - id: errorCallback
          type:
            - any
          description: ''
          optional: true
      content: >-
        function ensureEnhancements(type?: any, context?: any, errorCallback?:
        any)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.fireChangeIfNecessary
    name: 'fireChangeIfNecessary(newValue?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: newValue
          type:
            - string
          description: |+

          optional: true
      content: 'function fireChangeIfNecessary(newValue?: string)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getComboType
    name: getComboType()
    children: []
    langs:
      - typeScript
    summary: Gets the type of the combo.
    syntax:
      parameters: []
      content: function getComboType()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getElement
    name: getElement()
    children: []
    langs:
      - typeScript
    summary: Gets the element associated with this control.
    syntax:
      parameters: []
      content: function getElement()
      return:
        type:
          - JQuery
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getEnabled
    name: getEnabled()
    children: []
    langs:
      - typeScript
    summary: Gets the enabled state of the combo.
    syntax:
      parameters: []
      content: function getEnabled()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getEnhancementOptions
    name: 'getEnhancementOptions(type: any, element: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
        - id: element
          type:
            - any
          description: |+

      content: 'function getEnhancementOptions(type: any, element: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getId
    name: getId()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getId()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getInput
    name: getInput()
    children: []
    langs:
      - typeScript
    summary: Gets the input element of combo
    syntax:
      parameters: []
      content: function getInput()
      return:
        type:
          - JQuery
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getInstance
    name: 'getInstance(type?: any, element?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: element
          type:
            - any
          description: ''
          optional: true
      content: 'function getInstance(type?: any, element?: any)'
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getMode
    name: getMode()
    children: []
    langs:
      - typeScript
    summary: Gets the mode of the combo.
    syntax:
      parameters: []
      content: function getMode()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getOptionPrefix
    name: 'getOptionPrefix(type: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
      content: 'function getOptionPrefix(type: any)'
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getSelectedIndex
    name: getSelectedIndex()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getSelectedIndex()
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getText
    name: getText()
    children: []
    langs:
      - typeScript
    summary: Gets the current text value of the combo.
    syntax:
      parameters: []
      content: function getText()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getTypeName
    name: getTypeName()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getTypeName()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getTypeName
    name: 'getTypeName(type?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
      content: 'function getTypeName(type?: any)'
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.getValue
    name: getValue()
    children: []
    langs:
      - typeScript
    summary: >-
      Gets the underlying value of the combo. If the type is 'list', value is
      string. If the type is 'date-time', value is Date. If the type is
      'multi-value', value is string[].
    syntax:
      parameters: []
      content: function getValue()
      return:
        type:
          - TValue
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.initializeOptions
    name: 'initializeOptions(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: |+

          optional: true
      content: 'function initializeOptions(options?: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.invalidAttribute
    name: invalidAttribute
    fullName: invalidAttribute
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.isDisposed
    name: isDisposed()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function isDisposed()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.isValid
    name: isValid()
    children: []
    langs:
      - typeScript
    summary: Return true if the combo is in valid state. Otherwise return false.
    syntax:
      parameters: []
      content: function isValid()
      return:
        type:
          - Boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.optionsPrefix
    name: optionsPrefix
    fullName: optionsPrefix
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.registerEnhancement
    name: >-
      registerEnhancement(type?: function, selector?: string, options?:
      TOptions, errorCallback?: IErrorCallback, enhancementOptions?:
      EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type: []
          description: ''
          optional: true
        - id: selector
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - TOptions
          description: ''
          optional: true
        - id: errorCallback
          type:
            - vss-web-extension-sdk.IErrorCallback
          description: |+

          optional: true
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function registerEnhancement(type?: function, selector?: string,
        options?: TOptions, errorCallback?: IErrorCallback, enhancementOptions?:
        EnhancementOptions)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.registerJQueryWidget
    name: >-
      registerJQueryWidget(type?: any, widgetName?: any, widgetOptions?:
      TOptions, enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: widgetName
          type:
            - any
          description: ''
          optional: true
        - id: widgetOptions
          type:
            - TOptions
          description: |+

          optional: true
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function registerJQueryWidget(type?: any, widgetName?: any,
        widgetOptions?: TOptions, enhancementOptions?: EnhancementOptions)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setAttribute
    name: 'setAttribute(attribute: string, value: string, element?: JQuery)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets the attribute for the current control using the specified attribute
      name, value on the specified element.

      If no element specified, default element is used.
    syntax:
      parameters:
        - id: attribute
          type:
            - string
          description: Attribute name to set value.
        - id: value
          type:
            - string
          description: Attribute value to set.
        - id: element
          type:
            - JQuery
          description: |
            Element to apply the attribute (default is root element).
          optional: true
      content: >-
        function setAttribute(attribute: string, value: string, element?:
        JQuery)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setEnabled
    name: 'setEnabled(value: boolean)'
    children: []
    langs:
      - typeScript
    summary: Sets the enabled state of the combo.
    syntax:
      parameters:
        - id: value
          type:
            - boolean
          description: 'True for enabled, false for disabled.'
      content: 'function setEnabled(value: boolean)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setEnhancementOptions
    name: 'setEnhancementOptions(enhancementOptions: EnhancementOptions)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets options related to the creation of this control or enhancement of an
      element as this control.

      Note: Options are merged.
    syntax:
      parameters:
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
      content: 'function setEnhancementOptions(enhancementOptions: EnhancementOptions)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setInvalid
    name: 'setInvalid(value: boolean)'
    children: []
    langs:
      - typeScript
    summary: Sets the invalid state of the combo.
    syntax:
      parameters:
        - id: value
          type:
            - boolean
          description: 'True for invalid, false for valid.'
      content: 'function setInvalid(value: boolean)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setMode
    name: 'setMode(value: string)'
    children: []
    langs:
      - typeScript
    summary: Sets the mode of the combo.
    syntax:
      parameters:
        - id: value
          type:
            - string
          description: '''drop'' or ''text''.'
      content: 'function setMode(value: string)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setRole
    name: 'setRole(role: string, element?: JQuery)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets the role for the current control using the specified role value on
      the specified element.

      If no element specified, default element is used.
    syntax:
      parameters:
        - id: role
          type:
            - string
          description: Role to assign.
        - id: element
          type:
            - JQuery
          description: |
            Element to apply the role (default is root element).
          optional: true
      content: 'function setRole(role: string, element?: JQuery)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setSource
    name: 'setSource(source: function)'
    children: []
    langs:
      - typeScript
    summary: Sets a new source for the combo.
    syntax:
      parameters:
        - id: source
          type:
            - function
          description: New source for the combo.
      content: 'function setSource(source: function)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setText
    name: 'setText(text: string, fireEvent?: boolean)'
    children: []
    langs:
      - typeScript
    summary: Sets the text of the combo.
    syntax:
      parameters:
        - id: text
          type:
            - string
          description: New value to set.
        - id: fireEvent
          type:
            - boolean
          description: Determines whether to fire change event or not (default false).
          optional: true
      content: 'function setText(text: string, fireEvent?: boolean)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.setType
    name: 'setType(type: string)'
    children: []
    langs:
      - typeScript
    summary: Sets the type of the combo.
    syntax:
      parameters:
        - id: type
          type:
            - string
          description: ''
      content: 'function setType(type: string)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.showDropPopup
    name: 'showDropPopup(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function showDropPopup(e?: JQueryEventObject)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker.toggleDropDown
    name: toggleDropDown()
    children: []
    langs:
      - typeScript
    summary: Programmatically toggles the dropdown.
    syntax:
      parameters: []
      content: function toggleDropDown()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._bind
    name: '_bind(element?: any, eventType?: any, handler?: any, track?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: handler
          type:
            - any
          description: ''
          optional: true
        - id: track
          type:
            - any
          description: |+

          optional: true
      content: >-
        function _bind(element?: any, eventType?: any, handler?: any, track?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._blockBlur
    name: _blockBlur
    fullName: _blockBlur
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._currentText
    name: _currentText
    fullName: _currentText
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._disposed
    name: _disposed
    fullName: _disposed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._element
    name: _element
    fullName: _element
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - JQuery
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._enhance
    name: '_enhance(element: JQuery)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - JQuery
          description: |+

      content: 'function _enhance(element: JQuery)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._enhancementOptions
    name: _enhancementOptions
    fullName: _enhancementOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._ensureInitialized
    name: _ensureInitialized()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _ensureInitialized()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._fire
    name: '_fire(element?: any, eventType?: any, args?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: args
          type:
            - any
          description: |+

          optional: true
      content: 'function _fire(element?: any, eventType?: any, args?: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._fireChange
    name: '_fireChange(sender?: any)'
    children: []
    langs:
      - typeScript
    summary: Fires the change event for the control immediately
    syntax:
      parameters:
        - id: sender
          type:
            - any
          description: |
            Source element of the event
          optional: true
      content: 'function _fireChange(sender?: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._getEventNameSpace
    name: _getEventNameSpace()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _getEventNameSpace()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._getInDomPromise
    name: _getInDomPromise()
    children: []
    langs:
      - typeScript
    summary: |-
      Get a promise that is resolved once the containing element for this
      control has been added to the DOM hierarchy.
    syntax:
      parameters: []
      content: function _getInDomPromise()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._getUniqueId
    name: _getUniqueId()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _getUniqueId()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._initialized
    name: _initialized
    fullName: _initialized
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._input
    name: _input
    fullName: _input
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - JQuery
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._onInputBlur
    name: '_onInputBlur(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function _onInputBlur(e?: JQueryEventObject)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._onInputClick
    name: '_onInputClick(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function _onInputClick(e?: JQueryEventObject)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._onInputFocus
    name: '_onInputFocus(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function _onInputFocus(e?: JQueryEventObject)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._onInputKeyDown
    name: '_onInputKeyDown(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function _onInputKeyDown(e?: JQueryEventObject)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._options
    name: _options
    fullName: _options
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Combos.IComboOptions
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._setElement
    name: '_setElement(element: JQuery)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - JQuery
          description: |+

      content: 'function _setElement(element: JQuery)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._setId
    name: '_setId(id: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: |+

      content: 'function _setId(id: string)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.DatePicker._unbind
    name: '_unbind(element?: any, eventType?: any, handler?: any, track?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: handler
          type:
            - any
          description: ''
          optional: true
        - id: track
          type:
            - any
          description: |+

          optional: true
      content: >-
        function _unbind(element?: any, eventType?: any, handler?: any, track?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
