### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.net.Server
    name: Server
    fullName: Server
    children:
      - vss-web-extension-sdk.net.Server.addListener
      - vss-web-extension-sdk.net.Server.address
      - vss-web-extension-sdk.net.Server.close
      - vss-web-extension-sdk.net.Server.connections
      - vss-web-extension-sdk.net.Server.emit
      - vss-web-extension-sdk.net.Server.getConnections
      - vss-web-extension-sdk.net.Server.listen
      - vss-web-extension-sdk.net.Server.listening
      - vss-web-extension-sdk.net.Server.maxConnections
      - vss-web-extension-sdk.net.Server.on
      - vss-web-extension-sdk.net.Server.once
      - vss-web-extension-sdk.net.Server.prependListener
      - vss-web-extension-sdk.net.Server.prependOnceListener
      - vss-web-extension-sdk.net.Server.ref
      - vss-web-extension-sdk.net.Server.constructor
      - vss-web-extension-sdk.net.Server.unref
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.events.internal.EventEmitter'
    package: vss-web-extension-sdk
    module: net
  - uid: vss-web-extension-sdk.net.Server.addListener
    name: 'addListener(event: string, listener: function)'
    children: []
    langs:
      - typeScript
    summary: |-
      events.EventEmitter
        1. close
        2. connection
        3. error
        4. listening
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - function
          description: ''
      content: 'function addListener(event: string, listener: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.net.Server.address
    name: address()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function address()
    type: method
  - uid: vss-web-extension-sdk.net.Server.close
    name: 'close(callback?: Function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: callback
          type:
            - Function
          description: ''
          optional: true
      content: 'function close(callback?: Function)'
      return:
        type:
          - '@vss-web-extension-sdk.net.Server'
    type: method
  - uid: vss-web-extension-sdk.net.Server.connections
    name: connections
    fullName: connections
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.net.Server.emit
    name: 'emit(event: string, args: any[])'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      content: 'function emit(event: string, args: any[])'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.net.Server.getConnections
    name: 'getConnections(cb: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: cb
          type:
            - function
          description: ''
      content: 'function getConnections(cb: function)'
    type: method
  - uid: vss-web-extension-sdk.net.Server.listen
    name: >-
      listen(port?: number, hostname?: string, backlog?: number,
      listeningListener?: Function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: port
          type:
            - number
          description: ''
          optional: true
        - id: hostname
          type:
            - string
          description: ''
          optional: true
        - id: backlog
          type:
            - number
          description: ''
          optional: true
        - id: listeningListener
          type:
            - Function
          description: ''
          optional: true
      content: >-
        function listen(port?: number, hostname?: string, backlog?: number,
        listeningListener?: Function)
      return:
        type:
          - '@vss-web-extension-sdk.net.Server'
    type: method
  - uid: vss-web-extension-sdk.net.Server.listening
    name: listening
    fullName: listening
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.net.Server.maxConnections
    name: maxConnections
    fullName: maxConnections
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.net.Server.on
    name: 'on(event: string, listener: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - function
          description: ''
      content: 'function on(event: string, listener: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.net.Server.once
    name: 'once(event: string, listener: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - function
          description: ''
      content: 'function once(event: string, listener: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.net.Server.prependListener
    name: 'prependListener(event: string, listener: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - function
          description: ''
      content: 'function prependListener(event: string, listener: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.net.Server.prependOnceListener
    name: 'prependOnceListener(event: string, listener: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - function
          description: ''
      content: 'function prependOnceListener(event: string, listener: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.net.Server.ref
    name: ref()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function ref()
      return:
        type:
          - '@vss-web-extension-sdk.net.Server'
    type: method
  - uid: vss-web-extension-sdk.net.Server.constructor
    name: 'Server(connectionListener?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: connectionListener
          type:
            - function
          description: ''
          optional: true
      content: 'new Server(connectionListener?: function)'
    type: constructor
  - uid: vss-web-extension-sdk.net.Server.unref
    name: unref()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function unref()
      return:
        type:
          - '@vss-web-extension-sdk.net.Server'
    type: method
