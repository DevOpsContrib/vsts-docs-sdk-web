### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.VSS.ErrorHandler
    name: ErrorHandler
    fullName: ErrorHandler
    children:
      - vss-web-extension-sdk.VSS.VSS.ErrorHandler.$error
      - vss-web-extension-sdk.VSS.VSS.ErrorHandler.attachErrorPublisher
      - vss-web-extension-sdk.VSS.VSS.ErrorHandler.detachErrorPublisher
      - vss-web-extension-sdk.VSS.VSS.ErrorHandler.constructor
      - vss-web-extension-sdk.VSS.VSS.ErrorHandler.exists
      - vss-web-extension-sdk.VSS.VSS.ErrorHandler.hideError
      - vss-web-extension-sdk.VSS.VSS.ErrorHandler.ignoreRejectedPromiseTag
      - vss-web-extension-sdk.VSS.VSS.ErrorHandler.initialize
      - vss-web-extension-sdk.VSS.VSS.ErrorHandler.show
      - vss-web-extension-sdk.VSS.VSS.ErrorHandler.showError
      - vss-web-extension-sdk.VSS.VSS.ErrorHandler.visible
    langs:
      - typeScript
    type: class
    summary: ''
    source:
      path: vss.d.ts
      startLine: 34610
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/VSS
  - uid: vss-web-extension-sdk.VSS.VSS.ErrorHandler.$error
    name: $error
    fullName: $error
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: JQuery $error
      return:
        type:
          - JQuery
    module: VSS/VSS
  - uid: vss-web-extension-sdk.VSS.VSS.ErrorHandler.attachErrorPublisher
    name: attachErrorPublisher
    children: []
    type: method
    langs:
      - typeScript
    summary: Add error publisher to ErrorHander class
    syntax:
      content: 'function attachErrorPublisher(errorPublisher: errorPublisher)'
      parameters:
        - id: errorPublisher
          type:
            - '@vss-web-extension-sdk.VSS.VSS.errorPublisher'
          description: ''
    module: VSS/VSS
  - uid: vss-web-extension-sdk.VSS.VSS.ErrorHandler.detachErrorPublisher
    name: detachErrorPublisher
    children: []
    type: method
    langs:
      - typeScript
    summary: Remove error publisher to ErrorHander class
    syntax:
      content: 'function detachErrorPublisher(errorPublisher: errorPublisher)'
      parameters:
        - id: errorPublisher
          type:
            - '@vss-web-extension-sdk.VSS.VSS.errorPublisher'
          description: ''
    module: VSS/VSS
  - uid: vss-web-extension-sdk.VSS.VSS.ErrorHandler.constructor
    name: ErrorHandler
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Global error handler class which is attached to TFS
    syntax:
      content: new ErrorHandler()
      parameters: []
    module: VSS/VSS
  - uid: vss-web-extension-sdk.VSS.VSS.ErrorHandler.exists
    name: exists
    children: []
    type: method
    langs:
      - typeScript
    summary: (Internal function) Checks whether error container exists or not
    syntax:
      content: function exists()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/VSS
  - uid: vss-web-extension-sdk.VSS.VSS.ErrorHandler.hideError
    name: hideError
    children: []
    type: method
    langs:
      - typeScript
    summary: (Internal function) Hides the error when clicked
    syntax:
      content: function hideError()
      parameters: []
    module: VSS/VSS
  - uid: vss-web-extension-sdk.VSS.VSS.ErrorHandler.ignoreRejectedPromiseTag
    name: ignoreRejectedPromiseTag
    fullName: ignoreRejectedPromiseTag
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string ignoreRejectedPromiseTag
      return:
        type:
          - string
    module: VSS/VSS
  - uid: vss-web-extension-sdk.VSS.VSS.ErrorHandler.initialize
    name: initialize
    children: []
    type: method
    langs:
      - typeScript
    summary: (Internal function) Initializes error handler
    syntax:
      content: function initialize()
      parameters: []
    module: VSS/VSS
  - uid: vss-web-extension-sdk.VSS.VSS.ErrorHandler.show
    name: show
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Displays error in a container. If no container is found, error
      message is displayed in an alert dialog
    syntax:
      content: 'function show(error: TfsError)'
      parameters:
        - id: error
          type:
            - '@vss-web-extension-sdk.TfsError'
          description: ''
    module: VSS/VSS
  - uid: vss-web-extension-sdk.VSS.VSS.ErrorHandler.showError
    name: showError
    children: []
    type: method
    langs:
      - typeScript
    summary: (Internal function) Shows error in the container
    syntax:
      content: >-
        function showError(message: string, status?: string, stackTrace?:
        string)
      parameters:
        - id: message
          type:
            - string
          description: ''
        - id: status
          type:
            - string
          description: ''
          optional: true
        - id: stackTrace
          type:
            - string
          description: ''
          optional: true
    module: VSS/VSS
  - uid: vss-web-extension-sdk.VSS.VSS.ErrorHandler.visible
    name: visible
    fullName: visible
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean visible
      return:
        type:
          - boolean
    module: VSS/VSS
