### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions
    name: IIdentityPickerSearchOptions
    fullName: IIdentityPickerSearchOptions
    children:
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.ariaLabel
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.callbacks
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.consumerId
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.dialogAppendTo
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.dropdownSize
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.dropdownWidth
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.elementId
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.excludeAriaLabel
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.extensionData
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.forceOpen
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.getFilterByScope
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.highlightResolved
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.httpClient
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.identityType
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.items
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.loadOnCreate
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.maxResults
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.minimumPrefixSize
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.minResults
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.multiIdentitySearch
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.operationScope
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.pageSize
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.placeholderText
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.showContactCard
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.showMru
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.showMruTriangle
      - >-
        vss-web-extension-sdk.IIdentityPickerSearchOptions.showTemporaryDisplayName
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.size
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.smallScreenRender
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.useRemainingSpace
      - vss-web-extension-sdk.IIdentityPickerSearchOptions.watermark
    langs:
      - typeScript
    type: interface
    summary: ''
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.ariaLabel
    name: ariaLabel
    fullName: ariaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      custom value for the aria-label attribute of the input element.
        Defaults to the placeholder value if not set (see option placeholderText for details)
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.callbacks
    name: callbacks
    fullName: callbacks
    children: []
    langs:
      - typeScript
    type: property
    summary: Callbacks supported by the search control
    syntax:
      return:
        type:
          - vss-web-extension-sdk.ISearchControlCallbackOptions
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.consumerId
    name: consumerId
    fullName: consumerId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The source of the request - please update the Common Identity Picker wiki
      with your consumer GUID
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.dialogAppendTo
    name: dialogAppendTo
    fullName: dialogAppendTo
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      (optional) JQuery selector string which specifies a DOM element to render
      all JQueryUI dialogs in.
        Currently the only dialog which is displayed is IdCardDialog, but this should be used for any future
        dialogs as well, in order to work with Fabric's dialog model.
        If this is not specified, JQueryUI's default is to append the dialog element to the <body> element.
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.dropdownSize
    name: dropdownSize
    fullName: dropdownSize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      the size of the dropdown control elements (Medium - most elements are
      24px, Large - 32px). Default: Large
    syntax:
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.dropdownWidth
    name: dropdownWidth
    fullName: dropdownWidth
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      the width of the dropdown control. Default is max(positioningElement
      width, 300px)
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.elementId
    name: elementId
    fullName: elementId
    children: []
    langs:
      - typeScript
    type: property
    summary: a custom id for the input element
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.excludeAriaLabel
    name: excludeAriaLabel
    fullName: excludeAriaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Don't include aria label regardless if aria label is set or is the default
      (the place holder value).
        Defaults to false, which is to include.
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.extensionData
    name: extensionData
    fullName: extensionData
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Details about the control's current environment that might help an
      IEntityOperationsExtension in modifying requests.
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IExtensionData
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.forceOpen
    name: forceOpen
    fullName: forceOpen
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies whether or not the dropdown will be forced open and not closable
      until the control is destroyed.
        This is specifically for the mobile work item form where we want to show the picker in a full screen view
        and we do not want the dropdown to close.
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.getFilterByScope
    name: getFilterByScope
    fullName: getFilterByScope
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The scope over which the search and MRU results are filtered by.
        A consumer must pass a delegate that returns a FilterByScope instance, which can be constructed by passing two arrays of strings
        corresponding to Entity Ids and Ancestor Entity Ids
        over which the scope is restricted.
        Default null.
        NOTE: Null scope and an empty scope (a scope which is not null but whose internal arrays are empty) are treated differently.
              Null scope means no filtering will take place on entities, whereas empty scope means no entities would be returned.
              So an empty FilterByScope will result in no search being issued.
    syntax:
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.highlightResolved
    name: highlightResolved
    fullName: highlightResolved
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      whether for a single-select control a click on the resolved item
      highlights the text (true) or opens the contact card (false - default)
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.httpClient
    name: httpClient
    fullName: httpClient
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The httpClient that should be used instead of the
      CommonIdentityPickerHttpClient
    syntax:
      return:
        type:
          - vss-web-extension-sdk.AbstractIdentityPickerHttpClient
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.identityType
    name: identityType
    fullName: identityType
    children: []
    langs:
      - typeScript
    type: property
    summary: type of identities - one or more of User or Group
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IEntityType
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.items
    name: items
    fullName: items
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      default identities to initialise the dropdown with - if you are
      constructing the IEntity objects, their identifiers (such as entityId,
      localId etc.) have to be valid;
        alternatively the input can be a semi-colon separated sequence of unique identifiers (such as sign-in addresses or aliases).
        We also support the format "DisplayName <UniqueIdentifier>" (see the option showTemporaryDisplayName for details)
    syntax:
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.loadOnCreate
    name: loadOnCreate
    fullName: loadOnCreate
    children: []
    langs:
      - typeScript
    type: property
    summary: whether to preload (e.g. the MRU identities) on control creation.
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.maxResults
    name: maxResults
    fullName: maxResults
    children: []
    langs:
      - typeScript
    type: property
    summary: The maximum results that need to be fetched
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.minimumPrefixSize
    name: minimumPrefixSize
    fullName: minimumPrefixSize
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      DEPRECATED: the minimum length of the prefix to start searching the
      directories - in the absence of an MRU - default 3
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.minResults
    name: minResults
    fullName: minResults
    children: []
    langs:
      - typeScript
    type: property
    summary: The minimum results that need to be fetched
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.multiIdentitySearch
    name: multiIdentitySearch
    fullName: multiIdentitySearch
    children: []
    langs:
      - typeScript
    type: property
    summary: whether the search and dropdown controls should handle multiple identities
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.operationScope
    name: operationScope
    fullName: operationScope
    children: []
    langs:
      - typeScript
    type: property
    summary: 'scope - one or more of AAD, IMS, Source, AD, WMD'
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IOperationScope
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.pageSize
    name: pageSize
    fullName: pageSize
    children: []
    langs:
      - typeScript
    type: property
    summary: restrict displayed identities in dropdown
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.placeholderText
    name: placeholderText
    fullName: placeholderText
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      custom value for the placeholder attribute of the input element.
        Defaults to "Search {identity type(s)}", where {identity type(s)} can be "users", "groups" or "users and groups".
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.showContactCard
    name: showContactCard
    fullName: showContactCard
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      whether to display the contact card icon for each identity in the dropdown
      and for resolved identities. Default false.
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.showMru
    name: showMru
    fullName: showMru
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      whether the dropdown should display the MRU with the search button or just
      search directories directly.
        Default false.
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.showMruTriangle
    name: showMruTriangle
    fullName: showMruTriangle
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      whether to style the search control with a triangle that displays the MRU
      on click or not. Default false. Setting this will also enable the MRU on
      the dropdown.
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.IIdentityPickerSearchOptions.showTemporaryDisplayName
    name: showTemporaryDisplayName
    fullName: showTemporaryDisplayName
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      in case the control gets initialized with items in the format "DisplayName
      <UniqueIdentifier>",
        whether to show the DisplayName until the UniqueIdentifier gets resolved to an IEntity. Default false
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.size
    name: size
    fullName: size
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      the size of the search control elements (Small - most elements are 16px in
      height, Medium - 24px, Large - 32px). Default: Medium
    syntax:
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.smallScreenRender
    name: smallScreenRender
    fullName: smallScreenRender
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optimizations for small screen (mobile) which renders controls with
      additional icons and
        text information suitable for small screens.
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.useRemainingSpace
    name: useRemainingSpace
    fullName: useRemainingSpace
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Specifies whether or not the dropdown will try to use all remaining space
      below the positioning element.
        For internal use only, this is specifically for the mobile work item form where we want to show the picker in a
        full screen view and the behavior may change over time.
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IIdentityPickerSearchOptions.watermark
    name: watermark
    fullName: watermark
    children: []
    langs:
      - typeScript
    type: property
    summary: an IEntity to be displayed by default instead of the empty input element
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IEntity
