### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient3
    name: GalleryHttpClient3
    fullName: GalleryHttpClient3
    children:
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient3.createExtension
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient3.createExtensionWithPublisher
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient3.constructor
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient3.updateExtension
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient3.updateExtensionById
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3To4'
    source:
      path: vss.d.ts
      startLine: 23889
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient3.createExtension
    name: 'createExtension(extensionPackage: ExtensionPackage)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: extensionPackage
          type:
            - '@vss-web-extension-sdk.VSS.Gallery.Contracts.ExtensionPackage'
          description: ''
      content: 'function createExtension(extensionPackage: ExtensionPackage)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.PublishedExtension>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient3.createExtensionWithPublisher
    name: >-
      createExtensionWithPublisher(extensionPackage: ExtensionPackage,
      publisherName: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: extensionPackage
          type:
            - '@vss-web-extension-sdk.VSS.Gallery.Contracts.ExtensionPackage'
          description: ''
        - id: publisherName
          type:
            - string
          description: ''
      content: >-
        function createExtensionWithPublisher(extensionPackage:
        ExtensionPackage, publisherName: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.PublishedExtension>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient3.constructor
    name: >-
      GalleryHttpClient3(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new GalleryHttpClient3(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient3.updateExtension
    name: >-
      updateExtension(extensionPackage: ExtensionPackage, publisherName: string,
      extensionName: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: extensionPackage
          type:
            - '@vss-web-extension-sdk.VSS.Gallery.Contracts.ExtensionPackage'
          description: ''
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
      content: >-
        function updateExtension(extensionPackage: ExtensionPackage,
        publisherName: string, extensionName: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.PublishedExtension>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient3.updateExtensionById
    name: >-
      updateExtensionById(extensionPackage: ExtensionPackage, extensionId:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: extensionPackage
          type:
            - '@vss-web-extension-sdk.VSS.Gallery.Contracts.ExtensionPackage'
          description: ''
        - id: extensionId
          type:
            - string
          description: ''
      content: >-
        function updateExtensionById(extensionPackage: ExtensionPackage,
        extensionId: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.PublishedExtension>
    type: method
