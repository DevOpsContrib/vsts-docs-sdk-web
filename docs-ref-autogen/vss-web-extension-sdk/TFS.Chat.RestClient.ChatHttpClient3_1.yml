### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1
    name: ChatHttpClient3_1
    fullName: ChatHttpClient3_1
    children:
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.authTokenManager
      - vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.constructor
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.createChatRoom
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.deleteChatRoom
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.deleteMessage
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.forceOptionsCallForAutoNegotiate
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.getAllChatRoomMessages
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.getAllChatRoomUsers
      - vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.getAllRooms
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.getChatRoomById
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.getChatRoomMessageById
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.getChatRoomUserById
      - vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.joinRoom
      - vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.leaveRoom
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.messagesApiVersion
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.roomsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.sendMessageToRoom
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.serviceInstanceId
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.updateChatMessage
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.updateChatRoom
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.usersApiVersion
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1._beginGetLocation
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1._beginRequest
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1._beginRequestWithAjaxResult
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1._issueAjaxRequest
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1._rootRequestPath
      - >-
        vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: TFS.Chat.RestClient
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.authTokenManager
    name: authTokenManager
    fullName: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.constructor
    name: >-
      ChatHttpClient3_1(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions
          type:
            - IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new ChatHttpClient3_1(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      return:
        type:
          - vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1
    type: constructor
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.createChatRoom
    name: 'createChatRoom(roomUpdate: RoomData)'
    children: []
    langs:
      - typeScript
    summary: Create a single chat room
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Chat.Contracts.RoomData
          type:
            - RoomData
          description: Information to create the room
      content: 'function createChatRoom(roomUpdate: RoomData)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.deleteChatRoom
    name: 'deleteChatRoom(roomId: number)'
    children: []
    langs:
      - typeScript
    summary: Delete a given chat room
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room
      content: 'function deleteChatRoom(roomId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.deleteMessage
    name: 'deleteMessage(roomId: number, messageId: number)'
    children: []
    langs:
      - typeScript
    summary: Delete a given chat message
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room
        - id: messageId
          type:
            - number
          description: Id of the message to delete
      content: 'function deleteMessage(roomId: number, messageId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    fullName: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.getAllChatRoomMessages
    name: 'getAllChatRoomMessages(roomId: number)'
    children: []
    langs:
      - typeScript
    summary: Retrieve a listing of all chat messages in a given room
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room
      content: 'function getAllChatRoomMessages(roomId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.getAllChatRoomUsers
    name: 'getAllChatRoomUsers(roomId: number)'
    children: []
    langs:
      - typeScript
    summary: Retrieve a listing of all chat users
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room
      content: 'function getAllChatRoomUsers(roomId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.getAllRooms
    name: getAllRooms()
    children: []
    langs:
      - typeScript
    summary: Retrieve a listing of all chat rooms and the room information
    syntax:
      parameters: []
      content: function getAllRooms()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.getChatRoomById
    name: 'getChatRoomById(roomId: number)'
    children: []
    langs:
      - typeScript
    summary: Retrieve information on a single chat room
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room to retrieve
      content: 'function getChatRoomById(roomId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.getChatRoomMessageById
    name: 'getChatRoomMessageById(roomId: number, messageId: number)'
    children: []
    langs:
      - typeScript
    summary: Retrieve information on a single chat message
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room
        - id: messageId
          type:
            - number
          description: Id of the message to retrieve
      content: 'function getChatRoomMessageById(roomId: number, messageId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.getChatRoomUserById
    name: 'getChatRoomUserById(roomId: number, userId: string)'
    children: []
    langs:
      - typeScript
    summary: Retrieve information on a single chat user
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room
        - id: userId
          type:
            - string
          description: TfId of the user
      content: 'function getChatRoomUserById(roomId: number, userId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.joinRoom
    name: 'joinRoom(userUpdate: UserData, roomId: number, userId: string)'
    children: []
    langs:
      - typeScript
    summary: Joins a user to a given room
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Chat.Contracts.UserData
          type:
            - UserData
          description: user model information
        - id: roomId
          type:
            - number
          description: Id of the room
        - id: userId
          type:
            - string
          description: TfId of the user
      content: 'function joinRoom(userUpdate: UserData, roomId: number, userId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.leaveRoom
    name: 'leaveRoom(roomId: number, userId: string)'
    children: []
    langs:
      - typeScript
    summary: Leaves a user from a given room
    syntax:
      parameters:
        - id: roomId
          type:
            - number
          description: Id of the room
        - id: userId
          type:
            - string
          description: TfId of the user
      content: 'function leaveRoom(roomId: number, userId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.messagesApiVersion
    name: messagesApiVersion
    fullName: messagesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.roomsApiVersion
    name: roomsApiVersion
    fullName: roomsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.sendMessageToRoom
    name: 'sendMessageToRoom(messageUpdate: MessageData, roomId: number)'
    children: []
    langs:
      - typeScript
    summary: Post message to a room
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Chat.Contracts.MessageData
          type:
            - MessageData
          description: Content of the message to post
        - id: roomId
          type:
            - number
          description: Id of the room
      content: 'function sendMessageToRoom(messageUpdate: MessageData, roomId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.updateChatMessage
    name: >-
      updateChatMessage(messageUpdate: MessageData, roomId: number, messageId:
      number)
    children: []
    langs:
      - typeScript
    summary: Update a given chat message
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Chat.Contracts.MessageData
          type:
            - MessageData
          description: New message content
        - id: roomId
          type:
            - number
          description: Id of the room
        - id: messageId
          type:
            - number
          description: Id of the message
      content: >-
        function updateChatMessage(messageUpdate: MessageData, roomId: number,
        messageId: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.updateChatRoom
    name: 'updateChatRoom(roomUpdate: RoomData, roomId: number)'
    children: []
    langs:
      - typeScript
    summary: Update information on a single chat room
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Chat.Contracts.RoomData
          type:
            - RoomData
          description: Room information
        - id: roomId
          type:
            - number
          description: Id of the room to update
      content: 'function updateChatRoom(roomUpdate: RoomData, roomId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1.usersApiVersion
    name: usersApiVersion
    fullName: usersApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: >-
            vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: >-
            vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vss-web-extension-sdk.IVssAjaxOptions
          type:
            - IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1._rootRequestPath
    name: _rootRequestPath
    fullName: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Chat.RestClient.ChatHttpClient3_1._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.IPromise
          type:
            - IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
