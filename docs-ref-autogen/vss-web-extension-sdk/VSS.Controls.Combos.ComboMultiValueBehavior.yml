### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior
    name: ComboMultiValueBehavior
    fullName: ComboMultiValueBehavior
    children:
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior.canType
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior.constructor
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior.Default_Join_Char
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior.Default_Seperate_Char
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior.getDropOptions
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior.getValue
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior.keyDown
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.Controls.Combos.ComboListBehavior'
    source:
      path: vss.d.ts
      startLine: 10418
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior.canType
    name: canType
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function canType()
      parameters: []
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior.constructor
    name: ComboMultiValueBehavior
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ComboMultiValueBehavior(combo: any, options?: any)'
      parameters:
        - id: combo
          type:
            - any
          description: ''
        - id: options
          type:
            - any
          description: ''
          optional: true
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior.Default_Join_Char
    name: Default_Join_Char
    fullName: Default_Join_Char
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string Default_Join_Char
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior.Default_Seperate_Char
    name: Default_Seperate_Char
    fullName: Default_Seperate_Char
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string Default_Seperate_Char
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior.getDropOptions
    name: getDropOptions
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getDropOptions()
      parameters: []
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior.getValue
    name: getValue
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getValue()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.ComboMultiValueBehavior.keyDown
    name: keyDown
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function keyDown(e?: JQueryEventObject)'
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      return:
        type:
          - any
    type: method
