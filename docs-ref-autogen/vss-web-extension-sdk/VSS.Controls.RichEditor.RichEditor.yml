### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor
    name: RichEditor
    fullName: RichEditor
    children:
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.BOLD_COMMAND
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.cancelDelayedFunction
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.checkModified
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.create
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.createIn
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.CREATE_LINK_COMMAND
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.delayExecute
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.disableToolbar
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.enableToolbar
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.enhance
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.ENHANCEMENTS_DATA_KEY
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.enhancementTypeName
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.ENHANCEMENT_OPTIONPREFIX_KEY
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.ENHANCEMENT_OPTIONS_KEY
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.ensureEnhancement
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.ensureEnhancements
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.getElement
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.getEnhancementOptions
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.getId
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.getInstance
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.getOptionPrefix
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.getTypeName
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.getTypeName
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.IMAGE_AUTOFIT_SCALE_FACTOR
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.INDENT_COMMAND
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.initializeOptions
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.insertImage
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.INSERT_IMAGE_COMMAND
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.INSERT_ORDEREDLIST_COMMAND
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.INSERT_UNORDERED_LIST_COMMAND
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.isDisposed
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.isEmpty
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.ISEMPTY_MINIMAL_CONTENT_LENGTH
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.ITALIC_COMMAND
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.MAXIMIZE_COMMAND
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.optionsPrefix
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.OUTDENT_COMMAND
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.registerEnhancement
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.registerJQueryWidget
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.REMOVE_FORMATTING_COMMAND
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.RESTORE_COMMAND
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.constructor
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.setAttribute
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.setEnhancementOptions
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.setRole
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.UNDERLINE_COMMAND
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.UNLINK_COMMAND
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.WATERMARK_CSS_CLASS
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._bind
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._disposed
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._element
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._enhance
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._enhancementOptions
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._ensureInitialized
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._fire
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._fireChange
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._getEventNameSpace
      - >-
        vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._getInDomPromise
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._getUniqueId
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._initialized
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._options
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._setElement
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._setId
      - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._unbind
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS.Controls.RichEditor
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.BOLD_COMMAND
    name: BOLD_COMMAND
    fullName: BOLD_COMMAND
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.cancelDelayedFunction
    name: 'cancelDelayedFunction(name: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Cancels any pending delayed functions (delayExecute calls) with the
      specified name
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: Name (supplied in the delayExecute call) of the operations to cancel
      content: 'function cancelDelayedFunction(name: string)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.checkModified
    name: checkModified()
    children: []
    langs:
      - typeScript
    summary: >-
      Checks whether the value of the control is changed or not and fires the
      CHANGE event if it has
    syntax:
      parameters: []
      content: function checkModified()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.create
    name: >-
      create(controlType: function, container: JQuery, controlOptions: TOptions,
      enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: Creates a the control specified by TControl in the given container.
    syntax:
      parameters:
        - id: controlType
          type:
            - function
          description: ''
        - id: container
          type:
            - JQuery
          description: ''
        - id: controlOptions
          type:
            - TOptions
          description: ''
        - id: vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          type:
            - EnhancementOptions
          description: ''
          optional: true
      content: >-
        function create(controlType: function, container: JQuery,
        controlOptions: TOptions, enhancementOptions?: EnhancementOptions)
      return:
        type:
          - TControl
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.createIn
    name: >-
      createIn(type?: any, container?: any, options?: TOptions, koCompatable?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: container
          type:
            - any
          description: ''
          optional: true
        - id: options
          type:
            - TOptions
          description: ''
          optional: true
        - id: koCompatable
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function createIn(type?: any, container?: any, options?: TOptions,
        koCompatable?: boolean)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Control
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.CREATE_LINK_COMMAND
    name: CREATE_LINK_COMMAND
    fullName: CREATE_LINK_COMMAND
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.delayExecute
    name: >-
      delayExecute(name?: string, msDelay?: number, cancelPendingOps?: boolean,
      func?: Function)
    children: []
    langs:
      - typeScript
    summary: Executes the provided function after the specified amount of time
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: >-
            (Optional) Name for this operation. Allows subsequent calls to
            cancel this action.
          optional: true
        - id: msDelay
          type:
            - number
          description: Delay in milliseconds to wait before executing the Function
          optional: true
        - id: cancelPendingOps
          type:
            - boolean
          description: >-
            If true, cancel any pending requests with this name. If false, and
            there are outstanding requests with this name already in progress,
            then do nothing.
          optional: true
        - id: func
          type:
            - Function
          description: |
            Method to execute after the delay
          optional: true
      content: >-
        function delayExecute(name?: string, msDelay?: number,
        cancelPendingOps?: boolean, func?: Function)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.disableToolbar
    name: disableToolbar()
    children: []
    langs:
      - typeScript
    summary: Disables and hides the rich editor toolbar.
    syntax:
      parameters: []
      content: function disableToolbar()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.enableToolbar
    name: enableToolbar()
    children: []
    langs:
      - typeScript
    summary: Enables and shows the rich editor toolbar
    syntax:
      parameters: []
      content: function enableToolbar()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.enhance
    name: >-
      enhance(type: function, element: function, options?: function,
      enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - function
          description: ''
        - id: element
          type:
            - function
          description: ''
        - id: options
          type:
            - function
          description: ''
          optional: true
        - id: vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          type:
            - EnhancementOptions
          description: ''
          optional: true
      content: >-
        function enhance(type: function, element: function, options?: function,
        enhancementOptions?: EnhancementOptions)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.ENHANCEMENTS_DATA_KEY
    name: ENHANCEMENTS_DATA_KEY
    fullName: ENHANCEMENTS_DATA_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.enhancementTypeName
    name: enhancementTypeName
    fullName: enhancementTypeName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.ENHANCEMENT_OPTIONPREFIX_KEY
    name: ENHANCEMENT_OPTIONPREFIX_KEY
    fullName: ENHANCEMENT_OPTIONPREFIX_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.ENHANCEMENT_OPTIONS_KEY
    name: ENHANCEMENT_OPTIONS_KEY
    fullName: ENHANCEMENT_OPTIONS_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.ensureEnhancement
    name: 'ensureEnhancement(type?: any, context?: any, errorCallback?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: context
          type:
            - any
          description: ''
          optional: true
        - id: errorCallback
          type:
            - any
          description: ''
          optional: true
      content: >-
        function ensureEnhancement(type?: any, context?: any, errorCallback?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.ensureEnhancements
    name: 'ensureEnhancements(type?: any, context?: any, errorCallback?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: context
          type:
            - any
          description: ''
          optional: true
        - id: errorCallback
          type:
            - any
          description: ''
          optional: true
      content: >-
        function ensureEnhancements(type?: any, context?: any, errorCallback?:
        any)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.getElement
    name: getElement()
    children: []
    langs:
      - typeScript
    summary: Gets the element associated with this control.
    syntax:
      parameters: []
      content: function getElement()
      return:
        type:
          - JQuery
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.getEnhancementOptions
    name: 'getEnhancementOptions(type: any, element: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
        - id: element
          type:
            - any
          description: |+

      content: 'function getEnhancementOptions(type: any, element: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.getId
    name: getId()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getId()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.getInstance
    name: 'getInstance(type?: any, element?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: element
          type:
            - any
          description: ''
          optional: true
      content: 'function getInstance(type?: any, element?: any)'
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.getOptionPrefix
    name: 'getOptionPrefix(type: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
      content: 'function getOptionPrefix(type: any)'
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.getTypeName
    name: getTypeName()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getTypeName()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.getTypeName
    name: 'getTypeName(type?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
      content: 'function getTypeName(type?: any)'
      return:
        type:
          - string
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.IMAGE_AUTOFIT_SCALE_FACTOR
    name: IMAGE_AUTOFIT_SCALE_FACTOR
    fullName: IMAGE_AUTOFIT_SCALE_FACTOR
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.INDENT_COMMAND
    name: INDENT_COMMAND
    fullName: INDENT_COMMAND
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.initializeOptions
    name: 'initializeOptions(options?: IRichEditorOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Controls.RichEditor.IRichEditorOptions
          type:
            - IRichEditorOptions
          description: |+

          optional: true
      content: 'function initializeOptions(options?: IRichEditorOptions)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.insertImage
    name: 'insertImage(url: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Inserts an image tag pointing to the specified url at the current caret
      position if possible.

      If the current caret position cannot be determined, the image tag is
      inserted at the editor root node.
    syntax:
      parameters:
        - id: url
          type:
            - string
          description: |
            The url containing an image in which to link to the document.
      content: 'function insertImage(url: string)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.INSERT_IMAGE_COMMAND
    name: INSERT_IMAGE_COMMAND
    fullName: INSERT_IMAGE_COMMAND
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.INSERT_ORDEREDLIST_COMMAND
    name: INSERT_ORDEREDLIST_COMMAND
    fullName: INSERT_ORDEREDLIST_COMMAND
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.INSERT_UNORDERED_LIST_COMMAND
    name: INSERT_UNORDERED_LIST_COMMAND
    fullName: INSERT_UNORDERED_LIST_COMMAND
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.isDisposed
    name: isDisposed()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function isDisposed()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.isEmpty
    name: 'isEmpty(value: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Since the control uses contentEditable on real HTML, the actual DOM has
      many formatting and content left when it is visually empty.

      This function provides a "best effort" check on whether it is visually
      empty by:

      1. Not empty if content length is over the minimal threshold. See
      RichEditor.ISEMPTY_MINIMAL_CONTENT_LENGTH.

      2. If content length is less than the minimal threshold, we remove the
      formatting before checking whether it matches any "empty" case.
    syntax:
      parameters:
        - id: value
          type:
            - string
          description: ''
      content: 'function isEmpty(value: string)'
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.ISEMPTY_MINIMAL_CONTENT_LENGTH
    name: ISEMPTY_MINIMAL_CONTENT_LENGTH
    fullName: ISEMPTY_MINIMAL_CONTENT_LENGTH
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.ITALIC_COMMAND
    name: ITALIC_COMMAND
    fullName: ITALIC_COMMAND
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.MAXIMIZE_COMMAND
    name: MAXIMIZE_COMMAND
    fullName: MAXIMIZE_COMMAND
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.optionsPrefix
    name: optionsPrefix
    fullName: optionsPrefix
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.OUTDENT_COMMAND
    name: OUTDENT_COMMAND
    fullName: OUTDENT_COMMAND
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.registerEnhancement
    name: >-
      registerEnhancement(type?: function, selector?: string, options?:
      TOptions, errorCallback?: IErrorCallback, enhancementOptions?:
      EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - function
          description: ''
          optional: true
        - id: selector
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - TOptions
          description: ''
          optional: true
        - id: vss-web-extension-sdk.IErrorCallback
          type:
            - IErrorCallback
          description: |+

          optional: true
        - id: vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          type:
            - EnhancementOptions
          description: ''
          optional: true
      content: >-
        function registerEnhancement(type?: function, selector?: string,
        options?: TOptions, errorCallback?: IErrorCallback, enhancementOptions?:
        EnhancementOptions)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.registerJQueryWidget
    name: >-
      registerJQueryWidget(type?: any, widgetName?: any, widgetOptions?:
      TOptions, enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: widgetName
          type:
            - any
          description: ''
          optional: true
        - id: widgetOptions
          type:
            - TOptions
          description: |+

          optional: true
        - id: vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          type:
            - EnhancementOptions
          description: ''
          optional: true
      content: >-
        function registerJQueryWidget(type?: any, widgetName?: any,
        widgetOptions?: TOptions, enhancementOptions?: EnhancementOptions)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.REMOVE_FORMATTING_COMMAND
    name: REMOVE_FORMATTING_COMMAND
    fullName: REMOVE_FORMATTING_COMMAND
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.RESTORE_COMMAND
    name: RESTORE_COMMAND
    fullName: RESTORE_COMMAND
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.constructor
    name: 'RichEditor(options: IRichEditorOptions)'
    children: []
    langs:
      - typeScript
    summary: Creates a new rich editor with the provided options
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Controls.RichEditor.IRichEditorOptions
          type:
            - IRichEditorOptions
          description: ''
      content: 'new RichEditor(options: IRichEditorOptions)'
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.setAttribute
    name: 'setAttribute(attribute: string, value: function, element?: JQuery)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets the attribute for the current control using the specified attribute
      name, value on the specified element.

      If no element specified, default element is used.
    syntax:
      parameters:
        - id: attribute
          type:
            - string
          description: Attribute name to set value.
        - id: value
          type:
            - function
          description: Attribute value to set.
        - id: element
          type:
            - JQuery
          description: |
            Element to apply the attribute (default is root element).
          optional: true
      content: >-
        function setAttribute(attribute: string, value: function, element?:
        JQuery)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.setEnhancementOptions
    name: 'setEnhancementOptions(enhancementOptions: EnhancementOptions)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets options related to the creation of this control or enhancement of an
      element as this control.

      Note: Options are merged.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          type:
            - EnhancementOptions
          description: ''
      content: 'function setEnhancementOptions(enhancementOptions: EnhancementOptions)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.setRole
    name: 'setRole(role: string, element?: JQuery)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets the role for the current control using the specified role value on
      the specified element.

      If no element specified, default element is used.
    syntax:
      parameters:
        - id: role
          type:
            - string
          description: Role to assign.
        - id: element
          type:
            - JQuery
          description: |
            Element to apply the role (default is root element).
          optional: true
      content: 'function setRole(role: string, element?: JQuery)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.UNDERLINE_COMMAND
    name: UNDERLINE_COMMAND
    fullName: UNDERLINE_COMMAND
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.UNLINK_COMMAND
    name: UNLINK_COMMAND
    fullName: UNLINK_COMMAND
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor.WATERMARK_CSS_CLASS
    name: WATERMARK_CSS_CLASS
    fullName: WATERMARK_CSS_CLASS
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._bind
    name: '_bind(element?: any, eventType?: any, handler?: any, track?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: handler
          type:
            - any
          description: ''
          optional: true
        - id: track
          type:
            - any
          description: |+

          optional: true
      content: >-
        function _bind(element?: any, eventType?: any, handler?: any, track?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._disposed
    name: _disposed
    fullName: _disposed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._element
    name: _element
    fullName: _element
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - JQuery
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._enhance
    name: '_enhance(element: JQuery)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - JQuery
          description: |+

      content: 'function _enhance(element: JQuery)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._enhancementOptions
    name: _enhancementOptions
    fullName: _enhancementOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._ensureInitialized
    name: _ensureInitialized()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _ensureInitialized()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._fire
    name: '_fire(element?: any, eventType?: any, args?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: args
          type:
            - any
          description: |+

          optional: true
      content: 'function _fire(element?: any, eventType?: any, args?: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._fireChange
    name: '_fireChange(sender?: any)'
    children: []
    langs:
      - typeScript
    summary: Fires the change event for the control immediately
    syntax:
      parameters:
        - id: sender
          type:
            - any
          description: |
            Source element of the event
          optional: true
      content: 'function _fireChange(sender?: any)'
      return:
        type:
          - any
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._getEventNameSpace
    name: _getEventNameSpace()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _getEventNameSpace()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._getInDomPromise
    name: _getInDomPromise()
    children: []
    langs:
      - typeScript
    summary: |-
      Get a promise that is resolved once the containing element for this
      control has been added to the DOM hierarchy.
    syntax:
      parameters: []
      content: function _getInDomPromise()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._getUniqueId
    name: _getUniqueId()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _getUniqueId()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._initialized
    name: _initialized
    fullName: _initialized
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._options
    name: _options
    fullName: _options
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.RichEditor.IRichEditorOptions
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._setElement
    name: '_setElement(element: JQuery)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - JQuery
          description: |+

      content: 'function _setElement(element: JQuery)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._setId
    name: '_setId(id: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: |+

      content: 'function _setId(id: string)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.RichEditor.RichEditor._unbind
    name: '_unbind(element?: any, eventType?: any, handler?: any, track?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: handler
          type:
            - any
          description: ''
          optional: true
        - id: track
          type:
            - any
          description: |+

          optional: true
      content: >-
        function _unbind(element?: any, eventType?: any, handler?: any, track?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
