### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Authentication.Services.WebSessionTokenManager
    name: WebSessionTokenManager
    fullName: WebSessionTokenManager
    children:
      - >-
        vss-web-extension-sdk.VSS.Authentication.Services.WebSessionTokenManager.getAuthorizationHeader
      - >-
        vss-web-extension-sdk.VSS.Authentication.Services.WebSessionTokenManager.getAuthToken
      - >-
        vss-web-extension-sdk.VSS.Authentication.Services.WebSessionTokenManager.constructor
      - >-
        vss-web-extension-sdk.VSS.Authentication.Services.WebSessionTokenManager._token
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS.Authentication.Services
  - uid: >-
      vss-web-extension-sdk.VSS.Authentication.Services.WebSessionTokenManager.getAuthorizationHeader
    name: 'getAuthorizationHeader(sessionToken: string)'
    children: []
    langs:
      - typeScript
    summary: Gets the authorization header to use in a request from the given token
    syntax:
      parameters:
        - id: sessionToken
          type:
            - string
          description: Used for token key.
      content: 'function getAuthorizationHeader(sessionToken: string)'
      return:
        type:
          - string
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Authentication.Services.WebSessionTokenManager.getAuthToken
    name: 'getAuthToken(refresh?: boolean)'
    children: []
    langs:
      - typeScript
    summary: Get the auth token to use for this request.
    syntax:
      parameters:
        - id: refresh
          type:
            - boolean
          description: ''
          optional: true
      content: 'function getAuthToken(refresh?: boolean)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Authentication.Services.WebSessionTokenManager.constructor
    name: 'WebSessionTokenManager(sessionToken: WebSessionToken, hostUrl?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: sessionToken
          type:
            - vss-web-extension-sdk.VSS.Authentication.Contracts.WebSessionToken
          description: ''
        - id: hostUrl
          type:
            - string
          description: ''
          optional: true
      content: >-
        new WebSessionTokenManager(sessionToken: WebSessionToken, hostUrl?:
        string)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Authentication.Services.WebSessionTokenManager._token
    name: _token
    fullName: _token
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
