### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Utils.Accessibility.ProgressAnnouncer
    name: ProgressAnnouncer
    fullName: ProgressAnnouncer
    children:
      - >-
        vss-web-extension-sdk.VSS.Utils.Accessibility.ProgressAnnouncer.announceCompleted
      - >-
        vss-web-extension-sdk.VSS.Utils.Accessibility.ProgressAnnouncer.announceError
      - >-
        vss-web-extension-sdk.VSS.Utils.Accessibility.ProgressAnnouncer.forPromise
      - >-
        vss-web-extension-sdk.VSS.Utils.Accessibility.ProgressAnnouncer.constructor
    langs:
      - typeScript
    type: class
    summary: >
      Class for announcing, through a screen reader, when a single operation
      begins and ends. Supports

      a delay before the starting announcement so that quick operations don't
      trigger announcements.

      To use, create a ProgressAnnouncer, and call completed()
    source:
      path: vss.d.ts
      startLine: 32648
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Utils/Accessibility
  - uid: >-
      vss-web-extension-sdk.VSS.Utils.Accessibility.ProgressAnnouncer.announceCompleted
    name: announceCompleted
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Call this method when the operation has completed. This will cause the end
      message to be

      announced if the start message was announced.
    syntax:
      content: function announceCompleted()
      parameters: []
    module: VSS/Utils/Accessibility
  - uid: >-
      vss-web-extension-sdk.VSS.Utils.Accessibility.ProgressAnnouncer.announceError
    name: announceError
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Call this method if the operation completes with an error. This will cause
      the error message

      to be announced regardless of whether or not the start message was
      announced.
    syntax:
      content: function announceError()
      parameters: []
    module: VSS/Utils/Accessibility
  - uid: vss-web-extension-sdk.VSS.Utils.Accessibility.ProgressAnnouncer.forPromise
    name: forPromise
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Create a ProgressAnnouncer for a promise that will announce promise start
      and completion/rejection.
    syntax:
      content: >-
        static function forPromise<T>(promise: IPromise<T>, options:
        ProgressAnnouncerOptions)
      parameters:
        - id: promise
          type:
            - '@vss-web-extension-sdk.IPromise<T>'
          description: ''
        - id: options
          type:
            - >-
              @vss-web-extension-sdk.VSS.Utils.Accessibility.ProgressAnnouncerOptions
          description: |+

    module: VSS/Utils/Accessibility
  - uid: >-
      vss-web-extension-sdk.VSS.Utils.Accessibility.ProgressAnnouncer.constructor
    name: ProgressAnnouncer
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ProgressAnnouncer(options: ProgressAnnouncerOptions)'
      parameters:
        - id: options
          type:
            - >-
              @vss-web-extension-sdk.VSS.Utils.Accessibility.ProgressAnnouncerOptions
          description: ''
    module: VSS/Utils/Accessibility
