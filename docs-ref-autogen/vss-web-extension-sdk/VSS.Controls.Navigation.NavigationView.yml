### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView
    name: NavigationView
    fullName: NavigationView
    children:
      - >-
        vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.ACTION_CONTRIBUTION
      - vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.initialize
      - >-
        vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.initializeOptions
      - vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.constructor
      - vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.onNavigate
      - >-
        vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.setFullScreenMode
      - >-
        vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.setLeftHubPaneVisibility
      - >-
        vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.setViewTitle
      - >-
        vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.setViewTitleContent
      - >-
        vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.setWindowTitle
    langs:
      - typeScript
    type: class
    summary: >-
      Creates a high-level view object for a given page which captures page/hash
      navigations,

      handles setting page title, etc.
    extends:
      - '@vss-web-extension-sdk.VSS.Controls.BaseControl'
    package: vss-web-extension-sdk
    module: VSS/Controls/Navigation
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.ACTION_CONTRIBUTION
    name: ACTION_CONTRIBUTION
    fullName: ACTION_CONTRIBUTION
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.initialize
    name: initialize()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function initialize()
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.initializeOptions
    name: 'initializeOptions(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: |+

          optional: true
      content: 'function initializeOptions(options?: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.constructor
    name: 'NavigationView(options?: any)'
    children: []
    langs:
      - typeScript
    summary: Creates an instance of the object for the given page
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: |+

                attachNavigate: If true, listen for page/hash navigations

          optional: true
      content: 'new NavigationView(options?: any)'
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.onNavigate
    name: 'onNavigate(state: any)'
    children: []
    langs:
      - typeScript
    summary: Function invoked when a page/hash navigation has occurred
    syntax:
      parameters:
        - id: state
          type:
            - any
          description: |
            Hash object containing the hash-url parameters
      content: 'function onNavigate(state: any)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.setFullScreenMode
    name: >-
      setFullScreenMode(fullScreenMode: boolean, showLeftPaneInFullScreenMode?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: >-
      Set full-screen mode. If true, hide the chrome (hubs, etc.) around the
      main hub content, hide the splitter, etc.
    syntax:
      parameters:
        - id: fullScreenMode
          type:
            - boolean
          description: |
            True to enter full screen mode. False to exit full screen mode.
        - id: showLeftPaneInFullScreenMode
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function setFullScreenMode(fullScreenMode: boolean,
        showLeftPaneInFullScreenMode?: boolean)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.setLeftHubPaneVisibility
    name: 'setLeftHubPaneVisibility(visible: boolean)'
    children: []
    langs:
      - typeScript
    summary: Shows or hides the Left (tree) section of the explorer page
    syntax:
      parameters:
        - id: visible
          type:
            - boolean
          description: |
            If true, show the left side of the explorer page. False to hide it.
      content: 'function setLeftHubPaneVisibility(visible: boolean)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.setViewTitle
    name: 'setViewTitle(title?: string, tooltip?: string)'
    children: []
    langs:
      - typeScript
    summary: Sets the (text) title of the page
    syntax:
      parameters:
        - id: title
          type:
            - string
          description: |

                Title of the page
          optional: true
        - id: tooltip
          type:
            - string
          description: |+

                Optional tooltip for the page's title element

          optional: true
      content: 'function setViewTitle(title?: string, tooltip?: string)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.setViewTitleContent
    name: 'setViewTitleContent(title: string, titleContent: string)'
    children: []
    langs:
      - typeScript
    summary: Sets the raw-html title element for the page
    syntax:
      parameters:
        - id: title
          type:
            - string
          description: |

                Text title of the page to be used as the document title
        - id: titleContent
          type:
            - string
          description: |+

                Raw HTML to inject into the title element (will not be escaped)

      content: 'function setViewTitleContent(title: string, titleContent: string)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Navigation.NavigationView.setWindowTitle
    name: 'setWindowTitle(title: string)'
    children: []
    langs:
      - typeScript
    summary: Sets the document's title
    syntax:
      parameters:
        - id: title
          type:
            - string
          description: |+

                Title of the page (text)

      content: 'function setWindowTitle(title: string)'
    type: method
