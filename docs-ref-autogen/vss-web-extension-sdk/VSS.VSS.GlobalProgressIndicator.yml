### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator
    name: GlobalProgressIndicator
    fullName: GlobalProgressIndicator
    children:
      - vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator.actionCompleted
      - vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator.actionStarted
      - vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator.getPendingActions
      - >-
        vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator.getProgressElements
      - vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator.constructor
      - >-
        vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator.registerProgressElement
      - >-
        vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator.unRegisterProgressElement
    langs:
      - typeScript
    type: class
    summary: ''
    source:
      path: vss.d.ts
      startLine: 34698
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/VSS
  - uid: vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator.actionCompleted
    name: actionCompleted
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function actionCompleted(id: number)'
      parameters:
        - id: id
          type:
            - number
          description: ''
    type: method
  - uid: vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator.actionStarted
    name: actionStarted
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function actionStarted(name: string, immediate?: boolean)'
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: immediate
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator.getPendingActions
    name: getPendingActions
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getPendingActions()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator.getProgressElements
    name: getProgressElements
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getProgressElements()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator.constructor
    name: GlobalProgressIndicator
    children: []
    langs:
      - typeScript
    summary: >-
      Global handler for displaying progress during page loads, module_ loads,
      ajax requests, or any other registered long-running operations
    syntax:
      content: new GlobalProgressIndicator()
      parameters: []
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator.registerProgressElement
    name: registerProgressElement
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function registerProgressElement(element: JQuery)'
      parameters:
        - id: element
          type:
            - JQuery
          description: ''
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.VSS.GlobalProgressIndicator.unRegisterProgressElement
    name: unRegisterProgressElement
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function unRegisterProgressElement(element: JQuery)'
      parameters:
        - id: element
          type:
            - JQuery
          description: ''
    type: method
