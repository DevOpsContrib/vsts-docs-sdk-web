### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4
    name: CommonMethods2To4
    fullName: CommonMethods2To4
    children:
      - vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.constructor
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.createConnectedService
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.createIdentityMru
      - vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.createTeam
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.deleteIdentityMru
      - vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.deleteTeam
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getConnectedServiceDetails
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getConnectedServices
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getIdentityMru
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getProcessById
      - vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getProcesses
      - vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getProject
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getProjectCollection
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getProjectCollections
      - vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getProjects
      - vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getProxies
      - vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getTeam
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getTeamMembers
      - vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getTeams
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.queueCreateProject
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.queueDeleteProject
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.serviceInstanceId
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.updateIdentityMru
      - >-
        vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.updateProject
      - vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.updateTeam
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.WebApi.RestClient.VssHttpClient'
    source:
      path: tfs.d.ts
      startLine: 4831
      remote:
        path: typings\tfs.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: TFS/Core/RestClient
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.constructor
    name: >-
      CommonMethods2To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new CommonMethods2To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.createConnectedService
    name: >-
      createConnectedService(connectedServiceCreationData:
      WebApiConnectedServiceDetails, projectId: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: connectedServiceCreationData
          type:
            - >-
              @vss-web-extension-sdk.TFS.Core.Contracts.WebApiConnectedServiceDetails
          description: ''
        - id: projectId
          type:
            - string
          description: ''
      content: >-
        function createConnectedService(connectedServiceCreationData:
        WebApiConnectedServiceDetails, projectId: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.WebApiConnectedService>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.createIdentityMru
    name: 'createIdentityMru(mruData: IdentityData, mruName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: mruData
          type:
            - '@vss-web-extension-sdk.TFS.Core.Contracts.IdentityData'
          description: ''
        - id: mruName
          type:
            - string
          description: ''
      content: 'function createIdentityMru(mruData: IdentityData, mruName: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.createTeam
    name: 'createTeam(team: WebApiTeam, projectId: string)'
    children: []
    langs:
      - typeScript
    summary: Creates a team
    syntax:
      parameters:
        - id: team
          type:
            - '@vss-web-extension-sdk.TFS.Core.Contracts.WebApiTeam'
          description: The team data used to create the team.
        - id: projectId
          type:
            - string
          description: >-
            The name or id (GUID) of the team project in which to create the
            team.
      content: 'function createTeam(team: WebApiTeam, projectId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.WebApiTeam>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.deleteIdentityMru
    name: 'deleteIdentityMru(mruData: IdentityData, mruName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: mruData
          type:
            - '@vss-web-extension-sdk.TFS.Core.Contracts.IdentityData'
          description: ''
        - id: mruName
          type:
            - string
          description: ''
      content: 'function deleteIdentityMru(mruData: IdentityData, mruName: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.deleteTeam
    name: 'deleteTeam(projectId: string, teamId: string)'
    children: []
    langs:
      - typeScript
    summary: Deletes a team
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: >-
            The name or id (GUID) of the team project containing the team to
            delete.
        - id: teamId
          type:
            - string
          description: The name of id of the team to delete.
      content: 'function deleteTeam(projectId: string, teamId: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getConnectedServiceDetails
    name: 'getConnectedServiceDetails(projectId: string, name: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: name
          type:
            - string
          description: ''
      content: 'function getConnectedServiceDetails(projectId: string, name: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.WebApiConnectedServiceDetails>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getConnectedServices
    name: 'getConnectedServices(projectId: string, kind?: ConnectedServiceKind)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: kind
          type:
            - ConnectedServiceKind
          description: ''
          optional: true
      content: >-
        function getConnectedServices(projectId: string, kind?:
        ConnectedServiceKind)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.WebApiConnectedService[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getIdentityMru
    name: 'getIdentityMru(mruName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: mruName
          type:
            - string
          description: ''
      content: 'function getIdentityMru(mruName: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.WebApi.Contracts.IdentityRef[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getProcessById
    name: 'getProcessById(processId: string)'
    children: []
    langs:
      - typeScript
    summary: Retrieve process by id
    syntax:
      parameters:
        - id: processId
          type:
            - string
          description: ''
      content: 'function getProcessById(processId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.Process>
    type: method
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getProcesses
    name: getProcesses()
    children: []
    langs:
      - typeScript
    summary: Retrieve all processes
    syntax:
      parameters: []
      content: function getProcesses()
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.Process[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getProject
    name: >-
      getProject(projectId: string, includeCapabilities?: boolean,
      includeHistory?: boolean)
    children: []
    langs:
      - typeScript
    summary: >-
      Get project with the specified id or name, optionally including
      capabilities.
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: includeCapabilities
          type:
            - boolean
          description: >-
            Include capabilities (such as source control) in the team project
            result (default: false).
          optional: true
        - id: includeHistory
          type:
            - boolean
          description: Search within renamed projects (that had such name in the past).
          optional: true
      content: >-
        function getProject(projectId: string, includeCapabilities?: boolean,
        includeHistory?: boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.TeamProject>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getProjectCollection
    name: 'getProjectCollection(collectionId: string)'
    children: []
    langs:
      - typeScript
    summary: Get project collection with the specified id or name.
    syntax:
      parameters:
        - id: collectionId
          type:
            - string
          description: ''
      content: 'function getProjectCollection(collectionId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.TeamProjectCollection>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getProjectCollections
    name: 'getProjectCollections(top?: number, skip?: number)'
    children: []
    langs:
      - typeScript
    summary: Get project collection references for this application.
    syntax:
      parameters:
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
      content: 'function getProjectCollections(top?: number, skip?: number)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.TeamProjectCollectionReference[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getProjects
    name: >-
      getProjects(stateFilter?: any, top?: number, skip?: number,
      continuationToken?: string)
    children: []
    langs:
      - typeScript
    summary: Get project references with the specified state
    syntax:
      parameters:
        - id: stateFilter
          type:
            - any
          description: >-
            Filter on team projects in a specific team project state (default:
            WellFormed).
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getProjects(stateFilter?: any, top?: number, skip?: number,
        continuationToken?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.TeamProjectReference[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getProxies
    name: 'getProxies(proxyUrl?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: proxyUrl
          type:
            - string
          description: ''
          optional: true
      content: 'function getProxies(proxyUrl?: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.Proxy[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getTeam
    name: 'getTeam(projectId: string, teamId: string)'
    children: []
    langs:
      - typeScript
    summary: Gets a team
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: teamId
          type:
            - string
          description: ''
      content: 'function getTeam(projectId: string, teamId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.WebApiTeam>
    type: method
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getTeamMembers
    name: >-
      getTeamMembers(projectId: string, teamId: string, top?: number, skip?:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: teamId
          type:
            - string
          description: ''
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getTeamMembers(projectId: string, teamId: string, top?: number,
        skip?: number)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.WebApi.Contracts.IdentityRef[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.getTeams
    name: 'getTeams(projectId: string, top?: number, skip?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
      content: 'function getTeams(projectId: string, top?: number, skip?: number)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.WebApiTeam[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.queueCreateProject
    name: 'queueCreateProject(projectToCreate: TeamProject)'
    children: []
    langs:
      - typeScript
    summary: Queue a project creation.
    syntax:
      parameters:
        - id: projectToCreate
          type:
            - '@vss-web-extension-sdk.TFS.Core.Contracts.TeamProject'
          description: The project to create.
      content: 'function queueCreateProject(projectToCreate: TeamProject)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Operations.Contracts.OperationReference>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.queueDeleteProject
    name: 'queueDeleteProject(projectId: string)'
    children: []
    langs:
      - typeScript
    summary: Queue a project deletion.
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: The project id of the project to delete.
      content: 'function queueDeleteProject(projectId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Operations.Contracts.OperationReference>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string serviceInstanceId
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.updateIdentityMru
    name: 'updateIdentityMru(mruData: IdentityData, mruName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: mruData
          type:
            - '@vss-web-extension-sdk.TFS.Core.Contracts.IdentityData'
          description: ''
        - id: mruName
          type:
            - string
          description: ''
      content: 'function updateIdentityMru(mruData: IdentityData, mruName: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.updateProject
    name: 'updateProject(projectUpdate: TeamProject, projectId: string)'
    children: []
    langs:
      - typeScript
    summary: 'Update an existing project''s name, abbreviation, or description.'
    syntax:
      parameters:
        - id: projectUpdate
          type:
            - '@vss-web-extension-sdk.TFS.Core.Contracts.TeamProject'
          description: The updates for the project.
        - id: projectId
          type:
            - string
          description: The project id of the project to update.
      content: 'function updateProject(projectUpdate: TeamProject, projectId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Operations.Contracts.OperationReference>
    type: method
  - uid: vss-web-extension-sdk.TFS.Core.RestClient.CommonMethods2To4.updateTeam
    name: 'updateTeam(teamData: WebApiTeam, projectId: string, teamId: string)'
    children: []
    langs:
      - typeScript
    summary: Updates a team's name and/or description
    syntax:
      parameters:
        - id: teamData
          type:
            - '@vss-web-extension-sdk.TFS.Core.Contracts.WebApiTeam'
          description: ''
        - id: projectId
          type:
            - string
          description: >-
            The name or id (GUID) of the team project containing the team to
            update.
        - id: teamId
          type:
            - string
          description: The name of id of the team to update.
      content: >-
        function updateTeam(teamData: WebApiTeam, projectId: string, teamId:
        string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.WebApiTeam>
    type: method
