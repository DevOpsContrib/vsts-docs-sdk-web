### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TaskHttpClient2_1
    name: TaskHttpClient2_1
    fullName: TaskHttpClient2_1
    children:
      - vss-web-extension-sdk.TaskHttpClient2_1.appendLogContent
      - vss-web-extension-sdk.TaskHttpClient2_1.appendTimelineRecordFeed
      - vss-web-extension-sdk.TaskHttpClient2_1.attachmentsApiVersion
      - vss-web-extension-sdk.TaskHttpClient2_1.attachmentsApiVersion_eb55e5d6
      - vss-web-extension-sdk.TaskHttpClient2_1.authTokenManager
      - vss-web-extension-sdk.TaskHttpClient2_1.createAttachment
      - vss-web-extension-sdk.TaskHttpClient2_1.createLog
      - vss-web-extension-sdk.TaskHttpClient2_1.createTimeline
      - vss-web-extension-sdk.TaskHttpClient2_1.deleteTimeline
      - vss-web-extension-sdk.TaskHttpClient2_1.feedApiVersion
      - vss-web-extension-sdk.TaskHttpClient2_1.forceOptionsCallForAutoNegotiate
      - vss-web-extension-sdk.TaskHttpClient2_1.getAttachment
      - vss-web-extension-sdk.TaskHttpClient2_1.getAttachmentContent
      - vss-web-extension-sdk.TaskHttpClient2_1.getAttachments
      - vss-web-extension-sdk.TaskHttpClient2_1.getLog
      - vss-web-extension-sdk.TaskHttpClient2_1.getLogs
      - vss-web-extension-sdk.TaskHttpClient2_1.getPlan
      - vss-web-extension-sdk.TaskHttpClient2_1.getPlanAttachments
      - vss-web-extension-sdk.TaskHttpClient2_1.getRecords
      - vss-web-extension-sdk.TaskHttpClient2_1.getTimeline
      - vss-web-extension-sdk.TaskHttpClient2_1.getTimelines
      - vss-web-extension-sdk.TaskHttpClient2_1.logsApiVersion
      - vss-web-extension-sdk.TaskHttpClient2_1.plansApiVersion
      - vss-web-extension-sdk.TaskHttpClient2_1.recordsApiVersion
      - vss-web-extension-sdk.TaskHttpClient2_1.constructor
      - vss-web-extension-sdk.TaskHttpClient2_1.timelinesApiVersion
      - vss-web-extension-sdk.TaskHttpClient2_1.updateRecords
      - vss-web-extension-sdk.TaskHttpClient2_1._beginGetLocation
      - vss-web-extension-sdk.TaskHttpClient2_1._beginRequest
      - vss-web-extension-sdk.TaskHttpClient2_1._beginRequestWithAjaxResult
      - vss-web-extension-sdk.TaskHttpClient2_1._issueAjaxRequest
      - vss-web-extension-sdk.TaskHttpClient2_1._rootRequestPath
      - vss-web-extension-sdk.TaskHttpClient2_1._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.appendLogContent
    name: >-
      appendLogContent(content: string, scopeIdentifier: string, hubName:
      string, planId: string, logId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: content
          type:
            - string
          description: Content to upload
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: logId
          type:
            - number
          description: ''
      content: >-
        function appendLogContent(content: string, scopeIdentifier: string,
        hubName: string, planId: string, logId: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.appendTimelineRecordFeed
    name: >-
      appendTimelineRecordFeed(lines: VssJsonCollectionWrapperV,
      scopeIdentifier: string, hubName: string, planId: string, timelineId:
      string, recordId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VssJsonCollectionWrapperV
          type:
            - VssJsonCollectionWrapperV
          description: ''
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
        - id: recordId
          type:
            - string
          description: ''
      content: >-
        function appendTimelineRecordFeed(lines: VssJsonCollectionWrapperV,
        scopeIdentifier: string, hubName: string, planId: string, timelineId:
        string, recordId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.attachmentsApiVersion
    name: attachmentsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.attachmentsApiVersion_eb55e5d6
    name: attachmentsApiVersion_eb55e5d6
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.authTokenManager
    name: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.createAttachment
    name: >-
      createAttachment(content: string, scopeIdentifier: string, hubName:
      string, planId: string, timelineId: string, recordId: string, type:
      string, name: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: content
          type:
            - string
          description: Content to upload
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
        - id: recordId
          type:
            - string
          description: ''
        - id: type
          type:
            - string
          description: ''
        - id: name
          type:
            - string
          description: ''
      content: >-
        function createAttachment(content: string, scopeIdentifier: string,
        hubName: string, planId: string, timelineId: string, recordId: string,
        type: string, name: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.createLog
    name: >-
      createLog(log: TaskLog, scopeIdentifier: string, hubName: string, planId:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TaskLog
          type:
            - TaskLog
          description: ''
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
      content: >-
        function createLog(log: TaskLog, scopeIdentifier: string, hubName:
        string, planId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.createTimeline
    name: >-
      createTimeline(timeline: Timeline, scopeIdentifier: string, hubName:
      string, planId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.Timeline
          type:
            - Timeline
          description: ''
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
      content: >-
        function createTimeline(timeline: Timeline, scopeIdentifier: string,
        hubName: string, planId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.deleteTimeline
    name: >-
      deleteTimeline(scopeIdentifier: string, hubName: string, planId: string,
      timelineId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
      content: >-
        function deleteTimeline(scopeIdentifier: string, hubName: string,
        planId: string, timelineId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.feedApiVersion
    name: feedApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.getAttachment
    name: >-
      getAttachment(scopeIdentifier: string, hubName: string, planId: string,
      timelineId: string, recordId: string, type: string, name: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
        - id: recordId
          type:
            - string
          description: ''
        - id: type
          type:
            - string
          description: ''
        - id: name
          type:
            - string
          description: ''
      content: >-
        function getAttachment(scopeIdentifier: string, hubName: string, planId:
        string, timelineId: string, recordId: string, type: string, name:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.getAttachmentContent
    name: >-
      getAttachmentContent(scopeIdentifier: string, hubName: string, planId:
      string, timelineId: string, recordId: string, type: string, name: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
        - id: recordId
          type:
            - string
          description: ''
        - id: type
          type:
            - string
          description: ''
        - id: name
          type:
            - string
          description: ''
      content: >-
        function getAttachmentContent(scopeIdentifier: string, hubName: string,
        planId: string, timelineId: string, recordId: string, type: string,
        name: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.getAttachments
    name: >-
      getAttachments(scopeIdentifier: string, hubName: string, planId: string,
      timelineId: string, recordId: string, type: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
        - id: recordId
          type:
            - string
          description: ''
        - id: type
          type:
            - string
          description: ''
      content: >-
        function getAttachments(scopeIdentifier: string, hubName: string,
        planId: string, timelineId: string, recordId: string, type: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.getLog
    name: >-
      getLog(scopeIdentifier: string, hubName: string, planId: string, logId:
      number, startLine?: number, endLine?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: logId
          type:
            - number
          description: ''
        - id: startLine
          type:
            - number
          description: ''
          optional: true
        - id: endLine
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getLog(scopeIdentifier: string, hubName: string, planId:
        string, logId: number, startLine?: number, endLine?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.getLogs
    name: 'getLogs(scopeIdentifier: string, hubName: string, planId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
      content: >-
        function getLogs(scopeIdentifier: string, hubName: string, planId:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.getPlan
    name: 'getPlan(scopeIdentifier: string, hubName: string, planId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
      content: >-
        function getPlan(scopeIdentifier: string, hubName: string, planId:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.getPlanAttachments
    name: >-
      getPlanAttachments(scopeIdentifier: string, hubName: string, planId:
      string, type: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: type
          type:
            - string
          description: ''
      content: >-
        function getPlanAttachments(scopeIdentifier: string, hubName: string,
        planId: string, type: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.getRecords
    name: >-
      getRecords(scopeIdentifier: string, hubName: string, planId: string,
      timelineId: string, changeId?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
        - id: changeId
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getRecords(scopeIdentifier: string, hubName: string, planId:
        string, timelineId: string, changeId?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.getTimeline
    name: >-
      getTimeline(scopeIdentifier: string, hubName: string, planId: string,
      timelineId: string, changeId?: number, includeRecords?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
        - id: changeId
          type:
            - number
          description: ''
          optional: true
        - id: includeRecords
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getTimeline(scopeIdentifier: string, hubName: string, planId:
        string, timelineId: string, changeId?: number, includeRecords?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.getTimelines
    name: 'getTimelines(scopeIdentifier: string, hubName: string, planId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
      content: >-
        function getTimelines(scopeIdentifier: string, hubName: string, planId:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.logsApiVersion
    name: logsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.plansApiVersion
    name: plansApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.recordsApiVersion
    name: recordsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.constructor
    name: >-
      TaskHttpClient2_1(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: vss-web-extension-sdk.IVssHttpClientOptions
          type:
            - IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new TaskHttpClient2_1(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      return:
        type:
          - vss-web-extension-sdk.TaskHttpClient2_1
    type: constructor
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.timelinesApiVersion
    name: timelinesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskHttpClient2_1.updateRecords
    name: >-
      updateRecords(records: VssJsonCollectionWrapperV, scopeIdentifier: string,
      hubName: string, planId: string, timelineId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VssJsonCollectionWrapperV
          type:
            - VssJsonCollectionWrapperV
          description: ''
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
      content: >-
        function updateRecords(records: VssJsonCollectionWrapperV,
        scopeIdentifier: string, hubName: string, planId: string, timelineId:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vss-web-extension-sdk.IVssAjaxOptions
          type:
            - IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient2_1._rootRequestPath
    name: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TaskHttpClient2_1._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.IPromise
          type:
            - IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
