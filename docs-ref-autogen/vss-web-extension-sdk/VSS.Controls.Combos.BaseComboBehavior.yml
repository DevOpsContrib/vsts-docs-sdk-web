### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior
    name: BaseComboBehavior
    fullName: BaseComboBehavior
    children:
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.constructor
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.canType
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.combo
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.dispose
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.downKey
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getAriaAutocomplete
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getAriaDescription
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getDataSource
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getDropOptions
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getDropPopup
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getDropWidth
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getSelectedIndex
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getText
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getValue
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.hideDropPopup
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.initialize
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.isDropVisible
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.keyDown
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.keyPress
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.keyUp
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.leftKey
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.onForceHideDropPopup
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.pageDownKey
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.pageUpKey
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.rightKey
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.setMode
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.setSelectedIndex
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.setSource
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.setText
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.showDropPopup
      - >-
        vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.toggleDropDown
      - vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.upKey
    langs:
      - typeScript
    type: class
    summary: ''
    source:
      path: vss.d.ts
      startLine: 9579
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.constructor
    name: BaseComboBehavior
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new BaseComboBehavior(combo: any, options?: any)'
      parameters:
        - id: combo
          type:
            - any
          description: ''
        - id: options
          type:
            - any
          description: ''
          optional: true
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.canType
    name: canType
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function canType()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.combo
    name: combo
    fullName: combo
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: Combo combo
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.Combos.Combo'
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.dispose
    name: dispose
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function dispose()
      parameters: []
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.downKey
    name: downKey
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function downKey(e?: JQueryEventObject)'
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Combos
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getAriaAutocomplete
    name: getAriaAutocomplete
    children: []
    type: method
    langs:
      - typeScript
    summary: Get value for aria-autocomplete attribute of parent.
    syntax:
      content: function getAriaAutocomplete()
      parameters: []
      return:
        type:
          - string
    module: VSS/Controls/Combos
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getAriaDescription
    name: getAriaDescription
    children: []
    type: method
    langs:
      - typeScript
    summary: Get additional text to use to label the control for screen reader users.
    syntax:
      content: function getAriaDescription()
      parameters: []
      return:
        type:
          - string
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getDataSource
    name: getDataSource
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getDataSource<TDataSource>()
      parameters: []
      return:
        type:
          - TDataSource
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getDropOptions
    name: getDropOptions
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getDropOptions()
      parameters: []
      return:
        type:
          - any
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getDropPopup
    name: getDropPopup
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getDropPopup<TDropPopup>()
      parameters: []
      return:
        type:
          - TDropPopup
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getDropWidth
    name: getDropWidth
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getDropWidth()
      parameters: []
      return:
        type:
          - number
    module: VSS/Controls/Combos
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getSelectedIndex
    name: getSelectedIndex
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getSelectedIndex()
      parameters: []
      return:
        type:
          - number
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getText
    name: getText
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getText()
      parameters: []
      return:
        type:
          - string
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.getValue
    name: getValue
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getValue<TValue>()
      parameters: []
      return:
        type:
          - TValue
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.hideDropPopup
    name: hideDropPopup
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function hideDropPopup()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.initialize
    name: initialize
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function initialize()
      parameters: []
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.isDropVisible
    name: isDropVisible
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isDropVisible()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.keyDown
    name: keyDown
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function keyDown(e?: JQueryEventObject)'
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.keyPress
    name: keyPress
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function keyPress(e?: JQueryEventObject)'
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.keyUp
    name: keyUp
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function keyUp(e?: JQueryEventObject)'
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.leftKey
    name: leftKey
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function leftKey(e?: JQueryEventObject)'
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Combos
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.onForceHideDropPopup
    name: onForceHideDropPopup
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onForceHideDropPopup(e?: JQueryEventObject)'
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.pageDownKey
    name: pageDownKey
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pageDownKey(e?: JQueryEventObject)'
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.pageUpKey
    name: pageUpKey
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function pageUpKey(e?: JQueryEventObject)'
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.rightKey
    name: rightKey
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function rightKey(e?: JQueryEventObject)'
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.setMode
    name: setMode
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setMode(value: any)'
      parameters:
        - id: value
          type:
            - any
          description: ''
    module: VSS/Controls/Combos
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.setSelectedIndex
    name: setSelectedIndex
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setSelectedIndex(selectedIndex: any, fireEvent: any)'
      parameters:
        - id: selectedIndex
          type:
            - any
          description: ''
        - id: fireEvent
          type:
            - any
          description: ''
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.setSource
    name: setSource
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setSource(source: any)'
      parameters:
        - id: source
          type:
            - any
          description: ''
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.setText
    name: setText
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setText(value: string, fireEvent?: boolean)'
      parameters:
        - id: value
          type:
            - string
          description: ''
        - id: fireEvent
          type:
            - boolean
          description: |+

          optional: true
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.showDropPopup
    name: showDropPopup
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function showDropPopup()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.toggleDropDown
    name: toggleDropDown
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function toggleDropDown()
      parameters: []
    module: VSS/Controls/Combos
  - uid: vss-web-extension-sdk.VSS.Controls.Combos.BaseComboBehavior.upKey
    name: upKey
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function upKey(e?: JQueryEventObject)'
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Combos
