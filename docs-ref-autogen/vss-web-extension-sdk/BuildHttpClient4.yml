### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.BuildHttpClient4
    name: BuildHttpClient4
    fullName: BuildHttpClient4
    children:
      - vss-web-extension-sdk.BuildHttpClient4.addBuildTag
      - vss-web-extension-sdk.BuildHttpClient4.addBuildTags
      - vss-web-extension-sdk.BuildHttpClient4.addDefinitionTag
      - vss-web-extension-sdk.BuildHttpClient4.addDefinitionTags
      - vss-web-extension-sdk.BuildHttpClient4.constructor
      - vss-web-extension-sdk.BuildHttpClient4.createArtifact
      - vss-web-extension-sdk.BuildHttpClient4.createDefinition
      - vss-web-extension-sdk.BuildHttpClient4.createFolder
      - vss-web-extension-sdk.BuildHttpClient4.deleteBuild
      - vss-web-extension-sdk.BuildHttpClient4.deleteBuildTag
      - vss-web-extension-sdk.BuildHttpClient4.deleteDefinition
      - vss-web-extension-sdk.BuildHttpClient4.deleteDefinitionTag
      - vss-web-extension-sdk.BuildHttpClient4.deleteFolder
      - vss-web-extension-sdk.BuildHttpClient4.deleteTemplate
      - vss-web-extension-sdk.BuildHttpClient4.getArtifact
      - vss-web-extension-sdk.BuildHttpClient4.getArtifactContentZip
      - vss-web-extension-sdk.BuildHttpClient4.getArtifacts
      - vss-web-extension-sdk.BuildHttpClient4.getBadge
      - vss-web-extension-sdk.BuildHttpClient4.getBuild
      - vss-web-extension-sdk.BuildHttpClient4.getBuildBadge
      - vss-web-extension-sdk.BuildHttpClient4.getBuildBadgeData
      - vss-web-extension-sdk.BuildHttpClient4.getBuildChanges
      - vss-web-extension-sdk.BuildHttpClient4.getBuildController
      - vss-web-extension-sdk.BuildHttpClient4.getBuildControllers
      - vss-web-extension-sdk.BuildHttpClient4.getBuildLog
      - vss-web-extension-sdk.BuildHttpClient4.getBuildLogLines
      - vss-web-extension-sdk.BuildHttpClient4.getBuildLogs
      - vss-web-extension-sdk.BuildHttpClient4.getBuildLogsZip
      - vss-web-extension-sdk.BuildHttpClient4.getBuildOptionDefinitions
      - vss-web-extension-sdk.BuildHttpClient4.getBuildProperties
      - vss-web-extension-sdk.BuildHttpClient4.getBuildReport
      - vss-web-extension-sdk.BuildHttpClient4.getBuildReportHtmlContent
      - vss-web-extension-sdk.BuildHttpClient4.getBuilds
      - vss-web-extension-sdk.BuildHttpClient4.getBuildSettings
      - vss-web-extension-sdk.BuildHttpClient4.getBuildTags
      - vss-web-extension-sdk.BuildHttpClient4.getBuildTimeline
      - vss-web-extension-sdk.BuildHttpClient4.getBuildWorkItemsRefs
      - vss-web-extension-sdk.BuildHttpClient4.getBuildWorkItemsRefsFromCommits
      - vss-web-extension-sdk.BuildHttpClient4.getChangesBetweenBuilds
      - vss-web-extension-sdk.BuildHttpClient4.getDefinition
      - vss-web-extension-sdk.BuildHttpClient4.getDefinitionMetrics
      - vss-web-extension-sdk.BuildHttpClient4.getDefinitionProperties
      - vss-web-extension-sdk.BuildHttpClient4.getDefinitionRevisions
      - vss-web-extension-sdk.BuildHttpClient4.getDefinitions
      - vss-web-extension-sdk.BuildHttpClient4.getDefinitionTags
      - vss-web-extension-sdk.BuildHttpClient4.getFolders
      - vss-web-extension-sdk.BuildHttpClient4.getProjectMetrics
      - vss-web-extension-sdk.BuildHttpClient4.getResourceUsage
      - vss-web-extension-sdk.BuildHttpClient4.getTags
      - vss-web-extension-sdk.BuildHttpClient4.getTemplate
      - vss-web-extension-sdk.BuildHttpClient4.getTemplates
      - vss-web-extension-sdk.BuildHttpClient4.getWorkItemsBetweenBuilds
      - vss-web-extension-sdk.BuildHttpClient4.queueBuild
      - vss-web-extension-sdk.BuildHttpClient4.saveTemplate
      - vss-web-extension-sdk.BuildHttpClient4.updateBuild
      - vss-web-extension-sdk.BuildHttpClient4.updateBuildProperties
      - vss-web-extension-sdk.BuildHttpClient4.updateBuilds
      - vss-web-extension-sdk.BuildHttpClient4.updateBuildSettings
      - vss-web-extension-sdk.BuildHttpClient4.updateDefinition
      - vss-web-extension-sdk.BuildHttpClient4.updateDefinitionProperties
      - vss-web-extension-sdk.BuildHttpClient4.updateFolder
      - vss-web-extension-sdk.BuildHttpClient4._beginGetLocation
      - vss-web-extension-sdk.BuildHttpClient4._beginRequest
      - vss-web-extension-sdk.BuildHttpClient4._beginRequestWithAjaxResult
      - vss-web-extension-sdk.BuildHttpClient4._issueAjaxRequest
      - vss-web-extension-sdk.BuildHttpClient4._setInitializationPromise
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vss-web-extension-sdk.BuildHttpClient4.addBuildTag
    name: 'addBuildTag(project: string, buildId: number, tag: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: tag
          type:
            - string
          description: ''
      content: 'function addBuildTag(project: string, buildId: number, tag: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.addBuildTags
    name: 'addBuildTags(tags: function, project: string, buildId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: tags
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
      content: 'function addBuildTags(tags: function, project: string, buildId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.addDefinitionTag
    name: 'addDefinitionTag(project: string, definitionId: number, tag: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
        - id: tag
          type:
            - string
          description: ''
      content: >-
        function addDefinitionTag(project: string, definitionId: number, tag:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.addDefinitionTags
    name: 'addDefinitionTags(tags: function, project: string, definitionId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: tags
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
      content: >-
        function addDefinitionTags(tags: function, project: string,
        definitionId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.constructor
    name: 'BuildHttpClient4(rootRequestPath: string, options?: IVssHttpClientOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new BuildHttpClient4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      return:
        type:
          - BuildHttpClient4
    type: constructor
  - uid: vss-web-extension-sdk.BuildHttpClient4.createArtifact
    name: 'createArtifact(artifact: BuildArtifact, buildId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: artifact
          type:
            - BuildArtifact
          description: ''
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function createArtifact(artifact: BuildArtifact, buildId: number,
        project?: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.createDefinition
    name: >-
      createDefinition(definition: BuildDefinition, project?: string,
      definitionToCloneId?: number, definitionToCloneRevision?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: definition
          type:
            - BuildDefinition
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: definitionToCloneId
          type:
            - number
          description: ''
          optional: true
        - id: definitionToCloneRevision
          type:
            - number
          description: ''
          optional: true
      content: >-
        function createDefinition(definition: BuildDefinition, project?: string,
        definitionToCloneId?: number, definitionToCloneRevision?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.createFolder
    name: 'createFolder(folder: Folder, project: string, path: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: folder
          type:
            - Folder
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      content: 'function createFolder(folder: Folder, project: string, path: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.deleteBuild
    name: 'deleteBuild(buildId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function deleteBuild(buildId: number, project?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.deleteBuildTag
    name: 'deleteBuildTag(project: string, buildId: number, tag: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: tag
          type:
            - string
          description: ''
      content: 'function deleteBuildTag(project: string, buildId: number, tag: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.deleteDefinition
    name: 'deleteDefinition(definitionId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: definitionId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function deleteDefinition(definitionId: number, project?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.deleteDefinitionTag
    name: 'deleteDefinitionTag(project: string, definitionId: number, tag: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
        - id: tag
          type:
            - string
          description: ''
      content: >-
        function deleteDefinitionTag(project: string, definitionId: number, tag:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.deleteFolder
    name: 'deleteFolder(project: string, path: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      content: 'function deleteFolder(project: string, path: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.deleteTemplate
    name: 'deleteTemplate(project: string, templateId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: ''
      content: 'function deleteTemplate(project: string, templateId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getArtifact
    name: 'getArtifact(buildId: number, artifactName: string, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: artifactName
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getArtifact(buildId: number, artifactName: string, project?:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getArtifactContentZip
    name: >-
      getArtifactContentZip(buildId: number, artifactName: string, project?:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: artifactName
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getArtifactContentZip(buildId: number, artifactName: string,
        project?: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getArtifacts
    name: 'getArtifacts(buildId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function getArtifacts(buildId: number, project?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBadge
    name: 'getBadge(project: string, definitionId: number, branchName?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: ''
        - id: definitionId
          type:
            - number
          description: ''
        - id: branchName
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getBadge(project: string, definitionId: number, branchName?:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuild
    name: 'getBuild(buildId: number, project?: string, propertyFilters?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: propertyFilters
          type:
            - string
          description: A comma-delimited list of properties to include in the results
          optional: true
      content: >-
        function getBuild(buildId: number, project?: string, propertyFilters?:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildBadge
    name: >-
      getBuildBadge(project: string, repoType: string, repoId?: string,
      branchName?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repoType
          type:
            - string
          description: ''
        - id: repoId
          type:
            - string
          description: ''
          optional: true
        - id: branchName
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getBuildBadge(project: string, repoType: string, repoId?:
        string, branchName?: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildBadgeData
    name: >-
      getBuildBadgeData(project: string, repoType: string, repoId?: string,
      branchName?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repoType
          type:
            - string
          description: ''
        - id: repoId
          type:
            - string
          description: ''
          optional: true
        - id: branchName
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getBuildBadgeData(project: string, repoType: string, repoId?:
        string, branchName?: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildChanges
    name: >-
      getBuildChanges(project: string, buildId: number, continuationToken?:
      string, top?: number, includeSourceChange?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: The maximum number of changes to return
          optional: true
        - id: includeSourceChange
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getBuildChanges(project: string, buildId: number,
        continuationToken?: string, top?: number, includeSourceChange?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildController
    name: 'getBuildController(controllerId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: controllerId
          type:
            - number
          description: ''
      content: 'function getBuildController(controllerId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildControllers
    name: 'getBuildControllers(name?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: ''
          optional: true
      content: 'function getBuildControllers(name?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildLog
    name: >-
      getBuildLog(project: string, buildId: number, logId: number, startLine?:
      number, endLine?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: logId
          type:
            - number
          description: ''
        - id: startLine
          type:
            - number
          description: ''
          optional: true
        - id: endLine
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getBuildLog(project: string, buildId: number, logId: number,
        startLine?: number, endLine?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildLogLines
    name: >-
      getBuildLogLines(project: string, buildId: number, logId: number,
      startLine?: number, endLine?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: logId
          type:
            - number
          description: ''
        - id: startLine
          type:
            - number
          description: ''
          optional: true
        - id: endLine
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getBuildLogLines(project: string, buildId: number, logId:
        number, startLine?: number, endLine?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildLogs
    name: 'getBuildLogs(project: string, buildId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
      content: 'function getBuildLogs(project: string, buildId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildLogsZip
    name: 'getBuildLogsZip(project: string, buildId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
      content: 'function getBuildLogsZip(project: string, buildId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildOptionDefinitions
    name: 'getBuildOptionDefinitions(project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function getBuildOptionDefinitions(project?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildProperties
    name: 'getBuildProperties(project: string, buildId: number, filter?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The build id.
        - id: filter
          type:
            - function
          description: Filter to specific properties. Defaults to all properties.
          optional: true
      content: >-
        function getBuildProperties(project: string, buildId: number, filter?:
        function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildReport
    name: 'getBuildReport(project: string, buildId: number, type?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: type
          type:
            - string
          description: ''
          optional: true
      content: 'function getBuildReport(project: string, buildId: number, type?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildReportHtmlContent
    name: 'getBuildReportHtmlContent(project: string, buildId: number, type?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: type
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getBuildReportHtmlContent(project: string, buildId: number,
        type?: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuilds
    name: >-
      getBuilds(project?: string, definitions?: function, queues?: function,
      buildNumber?: string, minFinishTime?: Date, maxFinishTime?: Date,
      requestedFor?: string, reasonFilter?: function, statusFilter?: function,
      resultFilter?: function, tagFilters?: function, properties?: function,
      top?: number, continuationToken?: string, maxBuildsPerDefinition?: number,
      deletedFilter?: function, queryOrder?: function, branchName?: string,
      buildIds?: function, repositoryId?: string, repositoryType?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: definitions
          type:
            - function
          description: A comma-delimited list of definition ids
          optional: true
        - id: queues
          type:
            - function
          description: A comma-delimited list of queue ids
          optional: true
        - id: buildNumber
          type:
            - string
          description: ''
          optional: true
        - id: minFinishTime
          type:
            - Date
          description: ''
          optional: true
        - id: maxFinishTime
          type:
            - Date
          description: ''
          optional: true
        - id: requestedFor
          type:
            - string
          description: ''
          optional: true
        - id: reasonFilter
          type:
            - function
          description: ''
          optional: true
        - id: statusFilter
          type:
            - function
          description: ''
          optional: true
        - id: resultFilter
          type:
            - function
          description: ''
          optional: true
        - id: tagFilters
          type:
            - function
          description: A comma-delimited list of tags
          optional: true
        - id: properties
          type:
            - function
          description: A comma-delimited list of properties to include in the results
          optional: true
        - id: top
          type:
            - number
          description: The maximum number of builds to retrieve
          optional: true
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
        - id: maxBuildsPerDefinition
          type:
            - number
          description: ''
          optional: true
        - id: deletedFilter
          type:
            - function
          description: ''
          optional: true
        - id: queryOrder
          type:
            - function
          description: ''
          optional: true
        - id: branchName
          type:
            - string
          description: ''
          optional: true
        - id: buildIds
          type:
            - function
          description: ''
          optional: true
        - id: repositoryId
          type:
            - string
          description: ''
          optional: true
        - id: repositoryType
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getBuilds(project?: string, definitions?: function, queues?:
        function, buildNumber?: string, minFinishTime?: Date, maxFinishTime?:
        Date, requestedFor?: string, reasonFilter?: function, statusFilter?:
        function, resultFilter?: function, tagFilters?: function, properties?:
        function, top?: number, continuationToken?: string,
        maxBuildsPerDefinition?: number, deletedFilter?: function, queryOrder?:
        function, branchName?: string, buildIds?: function, repositoryId?:
        string, repositoryType?: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildSettings
    name: getBuildSettings()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getBuildSettings()
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildTags
    name: 'getBuildTags(project: string, buildId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
      content: 'function getBuildTags(project: string, buildId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildTimeline
    name: >-
      getBuildTimeline(project: string, buildId: number, timelineId?: string,
      changeId?: number, planId?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
          optional: true
        - id: changeId
          type:
            - number
          description: ''
          optional: true
        - id: planId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getBuildTimeline(project: string, buildId: number, timelineId?:
        string, changeId?: number, planId?: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildWorkItemsRefs
    name: 'getBuildWorkItemsRefs(project: string, buildId: number, top?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: top
          type:
            - number
          description: The maximum number of workitems to return
          optional: true
      content: >-
        function getBuildWorkItemsRefs(project: string, buildId: number, top?:
        number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getBuildWorkItemsRefsFromCommits
    name: >-
      getBuildWorkItemsRefsFromCommits(commitIds: function, project: string,
      buildId: number, top?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: commitIds
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: top
          type:
            - number
          description: >-
            The maximum number of workitems to return, also number of commits to
            consider if commitids are not sent
          optional: true
      content: >-
        function getBuildWorkItemsRefsFromCommits(commitIds: function, project:
        string, buildId: number, top?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getChangesBetweenBuilds
    name: >-
      getChangesBetweenBuilds(project: string, fromBuildId?: number, toBuildId?:
      number, top?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: fromBuildId
          type:
            - number
          description: ''
          optional: true
        - id: toBuildId
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: The maximum number of changes to return
          optional: true
      content: >-
        function getChangesBetweenBuilds(project: string, fromBuildId?: number,
        toBuildId?: number, top?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getDefinition
    name: >-
      getDefinition(definitionId: number, project?: string, revision?: number,
      minMetricsTime?: Date, propertyFilters?: function, includeLatestBuilds?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: definitionId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: revision
          type:
            - number
          description: ''
          optional: true
        - id: minMetricsTime
          type:
            - Date
          description: ''
          optional: true
        - id: propertyFilters
          type:
            - function
          description: ''
          optional: true
        - id: includeLatestBuilds
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getDefinition(definitionId: number, project?: string,
        revision?: number, minMetricsTime?: Date, propertyFilters?: function,
        includeLatestBuilds?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getDefinitionMetrics
    name: >-
      getDefinitionMetrics(project: string, definitionId: number,
      minMetricsTime?: Date)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
        - id: minMetricsTime
          type:
            - Date
          description: ''
          optional: true
      content: >-
        function getDefinitionMetrics(project: string, definitionId: number,
        minMetricsTime?: Date)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getDefinitionProperties
    name: >-
      getDefinitionProperties(project: string, definitionId: number, filter?:
      function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: The definition id.
        - id: filter
          type:
            - function
          description: Filter to specific properties. Defaults to all properties.
          optional: true
      content: >-
        function getDefinitionProperties(project: string, definitionId: number,
        filter?: function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getDefinitionRevisions
    name: 'getDefinitionRevisions(project: string, definitionId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
      content: 'function getDefinitionRevisions(project: string, definitionId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getDefinitions
    name: >-
      getDefinitions(project?: string, name?: string, repositoryId?: string,
      repositoryType?: string, queryOrder?: function, top?: number,
      continuationToken?: string, minMetricsTime?: Date, definitionIds?:
      function, path?: string, builtAfter?: Date, notBuiltAfter?: Date,
      includeAllProperties?: boolean, includeLatestBuilds?: boolean,
      taskIdFilter?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: name
          type:
            - string
          description: ''
          optional: true
        - id: repositoryId
          type:
            - string
          description: ''
          optional: true
        - id: repositoryType
          type:
            - string
          description: ''
          optional: true
        - id: queryOrder
          type:
            - function
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
        - id: minMetricsTime
          type:
            - Date
          description: ''
          optional: true
        - id: definitionIds
          type:
            - function
          description: ''
          optional: true
        - id: path
          type:
            - string
          description: ''
          optional: true
        - id: builtAfter
          type:
            - Date
          description: ''
          optional: true
        - id: notBuiltAfter
          type:
            - Date
          description: ''
          optional: true
        - id: includeAllProperties
          type:
            - boolean
          description: ''
          optional: true
        - id: includeLatestBuilds
          type:
            - boolean
          description: ''
          optional: true
        - id: taskIdFilter
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getDefinitions(project?: string, name?: string, repositoryId?:
        string, repositoryType?: string, queryOrder?: function, top?: number,
        continuationToken?: string, minMetricsTime?: Date, definitionIds?:
        function, path?: string, builtAfter?: Date, notBuiltAfter?: Date,
        includeAllProperties?: boolean, includeLatestBuilds?: boolean,
        taskIdFilter?: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getDefinitionTags
    name: >-
      getDefinitionTags(project: string, definitionId: number, revision?:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
        - id: revision
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getDefinitionTags(project: string, definitionId: number,
        revision?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getFolders
    name: 'getFolders(project: string, path?: string, queryOrder?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
          optional: true
        - id: queryOrder
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getFolders(project: string, path?: string, queryOrder?:
        function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getProjectMetrics
    name: >-
      getProjectMetrics(project: string, metricAggregationType?: string,
      minMetricsTime?: Date)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: metricAggregationType
          type:
            - string
          description: ''
          optional: true
        - id: minMetricsTime
          type:
            - Date
          description: ''
          optional: true
      content: >-
        function getProjectMetrics(project: string, metricAggregationType?:
        string, minMetricsTime?: Date)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getResourceUsage
    name: getResourceUsage()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getResourceUsage()
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getTags
    name: 'getTags(project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function getTags(project: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getTemplate
    name: 'getTemplate(project: string, templateId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: Id of the requested template.
      content: 'function getTemplate(project: string, templateId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getTemplates
    name: 'getTemplates(project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function getTemplates(project: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.getWorkItemsBetweenBuilds
    name: >-
      getWorkItemsBetweenBuilds(project: string, fromBuildId: number, toBuildId:
      number, top?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: fromBuildId
          type:
            - number
          description: ''
        - id: toBuildId
          type:
            - number
          description: ''
        - id: top
          type:
            - number
          description: The maximum number of workitems to return
          optional: true
      content: >-
        function getWorkItemsBetweenBuilds(project: string, fromBuildId: number,
        toBuildId: number, top?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.queueBuild
    name: >-
      queueBuild(build: Build, project?: string, ignoreWarnings?: boolean,
      checkInTicket?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: build
          type:
            - Build
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: ignoreWarnings
          type:
            - boolean
          description: ''
          optional: true
        - id: checkInTicket
          type:
            - string
          description: ''
          optional: true
      content: >-
        function queueBuild(build: Build, project?: string, ignoreWarnings?:
        boolean, checkInTicket?: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.saveTemplate
    name: >-
      saveTemplate(template: BuildDefinitionTemplate, project: string,
      templateId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: template
          type:
            - BuildDefinitionTemplate
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: ''
      content: >-
        function saveTemplate(template: BuildDefinitionTemplate, project:
        string, templateId: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.updateBuild
    name: 'updateBuild(build: Build, buildId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: build
          type:
            - Build
          description: ''
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function updateBuild(build: Build, buildId: number, project?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.updateBuildProperties
    name: >-
      updateBuildProperties(document: JsonPatchDocument, project: string,
      buildId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: document
          type:
            - JsonPatchDocument
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The build id.
      content: >-
        function updateBuildProperties(document: JsonPatchDocument, project:
        string, buildId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.updateBuilds
    name: 'updateBuilds(builds: function, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: builds
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function updateBuilds(builds: function, project?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.updateBuildSettings
    name: 'updateBuildSettings(settings: BuildSettings)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: settings
          type:
            - BuildSettings
          description: ''
      content: 'function updateBuildSettings(settings: BuildSettings)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.updateDefinition
    name: >-
      updateDefinition(definition: BuildDefinition, definitionId: number,
      project?: string, secretsSourceDefinitionId?: number,
      secretsSourceDefinitionRevision?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: definition
          type:
            - BuildDefinition
          description: ''
        - id: definitionId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: secretsSourceDefinitionId
          type:
            - number
          description: ''
          optional: true
        - id: secretsSourceDefinitionRevision
          type:
            - number
          description: ''
          optional: true
      content: >-
        function updateDefinition(definition: BuildDefinition, definitionId:
        number, project?: string, secretsSourceDefinitionId?: number,
        secretsSourceDefinitionRevision?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.updateDefinitionProperties
    name: >-
      updateDefinitionProperties(document: JsonPatchDocument, project: string,
      definitionId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: document
          type:
            - JsonPatchDocument
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: The definition id.
      content: >-
        function updateDefinitionProperties(document: JsonPatchDocument,
        project: string, definitionId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4.updateFolder
    name: 'updateFolder(folder: Folder, project: string, path: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: folder
          type:
            - Folder
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      content: 'function updateFolder(folder: Folder, project: string, path: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestParams
          type:
            - VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestParams
          type:
            - VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vssRequestOptions
          type:
            - IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.BuildHttpClient4._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: promise
          type:
            - IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
