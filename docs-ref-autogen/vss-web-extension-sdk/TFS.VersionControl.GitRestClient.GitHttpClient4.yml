### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4
    name: GitHttpClient4
    fullName: GitHttpClient4
    children:
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.createLike
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.createPullRequestLabels
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.deleteLike
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.deletePullRequestLabels
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.getLikes
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.getPullRequestLabel
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.getPullRequestLabels
      - >-
        vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - >-
        @vss-web-extension-sdk.TFS.VersionControl.GitRestClient.CommonMethods3_1To4
    source:
      path: tfs.d.ts
      startLine: 17138
      remote:
        path: typings\tfs.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: TFS/VersionControl/GitRestClient
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.createLike
    name: >-
      createLike(repositoryId: string, pullRequestId: number, threadId: number,
      commentId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Add a like on a comment.'
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: threadId
          type:
            - number
          description: ''
        - id: commentId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function createLike(repositoryId: string, pullRequestId: number,
        threadId: number, commentId: number, project?: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.createPullRequestLabels
    name: >-
      createPullRequestLabels(labels: WebApiCreateTagRequestData[],
      repositoryId: string, pullRequestId: number, project?: string, projectId?:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: labels
          type:
            - >-
              @vss-web-extension-sdk.TFS.Core.Contracts.WebApiCreateTagRequestData[]
          description: ''
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: projectId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function createPullRequestLabels(labels: WebApiCreateTagRequestData[],
        repositoryId: string, pullRequestId: number, project?: string,
        projectId?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.WebApiTagDefinition[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.deleteLike
    name: >-
      deleteLike(repositoryId: string, pullRequestId: number, threadId: number,
      commentId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Delete a like on a comment.'
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: threadId
          type:
            - number
          description: ''
        - id: commentId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function deleteLike(repositoryId: string, pullRequestId: number,
        threadId: number, commentId: number, project?: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.deletePullRequestLabels
    name: >-
      deletePullRequestLabels(repositoryId: string, pullRequestId: number,
      labelIdOrName: string, project?: string, projectId?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: labelIdOrName
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: projectId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function deletePullRequestLabels(repositoryId: string, pullRequestId:
        number, labelIdOrName: string, project?: string, projectId?: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.getLikes
    name: >-
      getLikes(repositoryId: string, pullRequestId: number, threadId: number,
      commentId: number, project?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get likes for a comment.'
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: threadId
          type:
            - number
          description: ''
        - id: commentId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getLikes(repositoryId: string, pullRequestId: number, threadId:
        number, commentId: number, project?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.WebApi.Contracts.IdentityRef[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.getPullRequestLabel
    name: >-
      getPullRequestLabel(repositoryId: string, pullRequestId: number,
      labelIdOrName: string, project?: string, projectId?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: labelIdOrName
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: projectId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getPullRequestLabel(repositoryId: string, pullRequestId:
        number, labelIdOrName: string, project?: string, projectId?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.WebApiTagDefinition>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.getPullRequestLabels
    name: >-
      getPullRequestLabels(repositoryId: string, pullRequestId: number,
      project?: string, projectId?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Retrieve a pull request''s Labels'
    syntax:
      parameters:
        - id: repositoryId
          type:
            - string
          description: ''
        - id: pullRequestId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: projectId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getPullRequestLabels(repositoryId: string, pullRequestId:
        number, project?: string, projectId?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Core.Contracts.WebApiTagDefinition[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.GitRestClient.GitHttpClient4.constructor
    name: 'GitHttpClient4(rootRequestPath: string, options?: IVssHttpClientOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new GitHttpClient4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
