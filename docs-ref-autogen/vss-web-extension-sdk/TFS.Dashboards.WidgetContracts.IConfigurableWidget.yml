### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.Dashboards.WidgetContracts.IConfigurableWidget
    name: IConfigurableWidget
    fullName: IConfigurableWidget
    children:
      - >-
        vss-web-extension-sdk.TFS.Dashboards.WidgetContracts.IConfigurableWidget.reload
    langs:
      - typeScript
    type: interface
    summary: Configurable widgets implement this interface
    extends:
      name: '@vss-web-extension-sdk.TFS.Dashboards.WidgetContracts.IWidget'
    source:
      path: tfs.d.ts
      startLine: 6098
      remote:
        path: typings\tfs.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: TFS/Dashboards/WidgetContracts
  - uid: >-
      vss-web-extension-sdk.TFS.Dashboards.WidgetContracts.IConfigurableWidget.reload
    name: reload
    fullName: reload
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      When the configuration view is changed, the widget is expected to update
      its view.
       @param {WidgetSettings} the latest widget settings as available from the configuration view for the widget.
       @returns object wrapped in a promise that encapsulates the success of this operation.
    syntax:
      content: '(newWidgetSettings: WidgetSettings) => IPromise<WidgetStatus> reload'
      return:
        type:
          - '(newWidgetSettings: WidgetSettings) => IPromise<WidgetStatus>'
