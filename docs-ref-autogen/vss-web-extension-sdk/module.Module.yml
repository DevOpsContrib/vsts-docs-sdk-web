### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.module.Module
    name: Module
    fullName: Module
    children:
      - vss-web-extension-sdk.module.Module.children
      - vss-web-extension-sdk.module.Module.exports
      - vss-web-extension-sdk.module.Module.filename
      - vss-web-extension-sdk.module.Module.id
      - vss-web-extension-sdk.module.Module.loaded
      - vss-web-extension-sdk.module.Module.constructor
      - vss-web-extension-sdk.module.Module.parent
      - vss-web-extension-sdk.module.Module.paths
      - vss-web-extension-sdk.module.Module.require
      - vss-web-extension-sdk.module.Module.runMain
      - vss-web-extension-sdk.module.Module.wrap
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: module
  - uid: vss-web-extension-sdk.module.Module.children
    name: children
    fullName: children
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - '@vss-web-extension-sdk.NodeModule[]'
  - uid: vss-web-extension-sdk.module.Module.exports
    name: exports
    fullName: exports
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.module.Module.filename
    name: filename
    fullName: filename
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.module.Module.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.module.Module.loaded
    name: loaded
    fullName: loaded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.module.Module.constructor
    name: 'Module(id: string, parent?: Module)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: ''
        - id: parent
          type:
            - '@vss-web-extension-sdk.module.Module'
          description: ''
          optional: true
      content: 'new Module(id: string, parent?: Module)'
    type: constructor
  - uid: vss-web-extension-sdk.module.Module.parent
    name: parent
    fullName: parent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - NodeModule
  - uid: vss-web-extension-sdk.module.Module.paths
    name: paths
    fullName: paths
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - 'string[]'
  - uid: vss-web-extension-sdk.module.Module.require
    name: require
    fullName: require
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - '@vss-web-extension-sdk.NodeRequireFunction'
  - uid: vss-web-extension-sdk.module.Module.runMain
    name: runMain()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function runMain()
    type: method
  - uid: vss-web-extension-sdk.module.Module.wrap
    name: 'wrap(code: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: code
          type:
            - string
          description: ''
      content: 'function wrap(code: string)'
      return:
        type:
          - string
    type: method
