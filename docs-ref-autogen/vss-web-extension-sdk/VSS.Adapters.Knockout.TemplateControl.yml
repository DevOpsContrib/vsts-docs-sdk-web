### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl
    name: TemplateControl
    fullName: TemplateControl
    children:
      - vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.applyBinding
      - vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.applyBinding
      - >-
        vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.applyRegisteredBinding
      - vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.computed
      - vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.getViewModel
      - >-
        vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.registerBinding
      - vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.subscribe
      - vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.Controls.BaseControl'
    package: vss-web-extension-sdk
    module: VSS/Adapters/Knockout
  - uid: vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.applyBinding
    name: >-
      applyBinding(controlType: any, element: JQuery, viewModel: TViewModel,
      options: TemplateControlOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Creates a new template control using the specified type, element and
      options.
    syntax:
      parameters:
        - id: controlType
          type:
            - any
          description: Type of the control.
        - id: element
          type:
            - JQuery
          description: Element owning the template and viewmodel to be bound.
        - id: viewModel
          type:
            - TViewModel
          description: View model used for binding.
        - id: options
          type:
            - >-
              @vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControlOptions
          description: Template options like templateHtml and templateId.
      content: >-
        function applyBinding(controlType: any, element: JQuery, viewModel:
        TViewModel, options: TemplateControlOptions)
      return:
        type:
          - TControl
    type: method
  - uid: vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.applyBinding
    name: 'applyBinding(element: JQuery)'
    children: []
    langs:
      - typeScript
    summary: See interface.
    syntax:
      parameters:
        - id: element
          type:
            - JQuery
          description: ''
      content: 'function applyBinding(element: JQuery)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.applyRegisteredBinding
    name: >-
      applyRegisteredBinding(templateId: string, element: JQuery,
      viewModelContext: any)
    children: []
    langs:
      - typeScript
    summary: >-
      Creates a new template control using registered control specified by
      template id.
    syntax:
      parameters:
        - id: templateId
          type:
            - string
          description: Id of the template.
        - id: element
          type:
            - JQuery
          description: Element owning the template and viewmodel to be bound.
        - id: viewModelContext
          type:
            - any
          description: Context used to generate view model.
      content: >-
        function applyRegisteredBinding(templateId: string, element: JQuery,
        viewModelContext: any)
      return:
        type:
          - TControl
    type: method
  - uid: vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.computed
    name: 'computed(func: function)'
    children: []
    langs:
      - typeScript
    summary: >-
      Proxy for a knockout computed to keep track of it to ensure that when the
      control is disposed, computed is also disposed.
    syntax:
      parameters:
        - id: func
          type:
            - function
          description: ''
      content: 'function computed(func: function)'
      return:
        type:
          - KnockoutComputed<any>
    type: method
  - uid: vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.getViewModel
    name: getViewModel()
    children: []
    langs:
      - typeScript
    summary: Gets the viewmodel bound to this control.
    syntax:
      parameters: []
      content: function getViewModel()
      return:
        type:
          - TViewModel
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.registerBinding
    name: >-
      registerBinding(templateId: string, controlType: any, viewModelGenerator:
      function)
    children: []
    langs:
      - typeScript
    summary: Registers a template control to be invoked later.
    syntax:
      parameters:
        - id: templateId
          type:
            - string
          description: Id of the template.
        - id: controlType
          type:
            - any
          description: Type of the registered control.
        - id: viewModelGenerator
          type:
            - function
          description: |
            Delegate to generate the viewmodel.
      content: >-
        function registerBinding(templateId: string, controlType: any,
        viewModelGenerator: function)
    type: method
  - uid: vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.subscribe
    name: 'subscribe(subscribable: KnockoutSubscribable<any>, callback: function)'
    children: []
    langs:
      - typeScript
    summary: >-
      Proxy for a knockout subscription to keep track of it to ensure that when
      the control is disposed, subscription is also disposed.
    syntax:
      parameters:
        - id: subscribable
          type:
            - KnockoutSubscribable<any>
          description: ''
        - id: callback
          type:
            - function
          description: ''
      content: >-
        function subscribe(subscribable: KnockoutSubscribable<any>, callback:
        function)
      return:
        type:
          - '@vss-web-extension-sdk.IDisposable'
    type: method
  - uid: vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControl.constructor
    name: 'TemplateControl(viewModel: TViewModel, options?: TemplateControlOptions)'
    children: []
    langs:
      - typeScript
    summary: 'Do not use this! Instead, use TemplateControl.applyBinding.'
    syntax:
      parameters:
        - id: viewModel
          type:
            - TViewModel
          description: ''
        - id: options
          type:
            - >-
              @vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateControlOptions
          description: ''
          optional: true
      content: >-
        new TemplateControl(viewModel: TViewModel, options?:
        TemplateControlOptions)
    type: constructor
