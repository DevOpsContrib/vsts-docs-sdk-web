### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl
    name: TabControl
    fullName: TabControl
    children:
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.beginSave
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.cancelDelayedFunction
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.create
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.createIn
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.delayExecute
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.enhance
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.ENHANCEMENTS_DATA_KEY
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.ENHANCEMENT_OPTIONPREFIX_KEY
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.ENHANCEMENT_OPTIONS_KEY
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.ensureEnhancement
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.ensureEnhancements
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.EVENT_DIRTY_STATE_CHANGED
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.EVENT_SAVING_STATE_CHANGED
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.EVENT_VALID_STATE_CHANGED
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.focus
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getElement
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getEnhancementOptions
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getId
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getInstance
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getOptionPrefix
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getTypeName
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getTypeName
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.initialize
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.initializeOptions
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.isDirty
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.isDisposed
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.isSaving
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.onResize
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.optionsPrefix
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.registerEnhancement
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.registerJQueryWidget
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.setAttribute
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.setEnhancementOptions
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.setRole
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.constructor
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._bind
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._disposed
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._element
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._enhance
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._enhancementOptions
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._ensureInitialized
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._fire
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._fireChange
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._getEventNameSpace
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._getInDomPromise
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._getUniqueId
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._initialized
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._options
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._setElement
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._setId
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._unbind
    langs:
      - typeScript
    type: class
    summary: A control for content across multiple tabs.
    package: vss-web-extension-sdk
    module: VSS.Controls.TabContent
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.beginSave
    name: 'beginSave(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: >-
      Check if there is an invalid page. Focus on the first invalid page if
      there is any.

      Begin to persist user changes by iterate all the tab pages and call the
      beginSave() for each page if it is dirty and valid
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: The event that trigger the saving
          optional: true
      content: 'function beginSave(e?: JQueryEventObject)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.cancelDelayedFunction
    name: 'cancelDelayedFunction(name: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Cancels any pending delayed functions (delayExecute calls) with the
      specified name
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: Name (supplied in the delayExecute call) of the operations to cancel
      content: 'function cancelDelayedFunction(name: string)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.create
    name: >-
      create(controlType: function, container: JQuery, controlOptions: TOptions,
      enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: Creates a the control specified by TControl in the given container.
    syntax:
      parameters:
        - id: controlType
          type:
            - function
          description: ''
        - id: container
          type:
            - JQuery
          description: ''
        - id: controlOptions
          type:
            - TOptions
          description: ''
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function create(controlType: function, container: JQuery,
        controlOptions: TOptions, enhancementOptions?: EnhancementOptions)
      return:
        type:
          - TControl
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.createIn
    name: >-
      createIn(type?: any, container?: any, options?: TOptions, koCompatable?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: container
          type:
            - any
          description: ''
          optional: true
        - id: options
          type:
            - TOptions
          description: ''
          optional: true
        - id: koCompatable
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function createIn(type?: any, container?: any, options?: TOptions,
        koCompatable?: boolean)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Control
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.delayExecute
    name: >-
      delayExecute(name?: string, msDelay?: number, cancelPendingOps?: boolean,
      func?: Function)
    children: []
    langs:
      - typeScript
    summary: Executes the provided function after the specified amount of time
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: >-
            (Optional) Name for this operation. Allows subsequent calls to
            cancel this action.
          optional: true
        - id: msDelay
          type:
            - number
          description: Delay in milliseconds to wait before executing the Function
          optional: true
        - id: cancelPendingOps
          type:
            - boolean
          description: >-
            If true, cancel any pending requests with this name. If false, and
            there are outstanding requests with this name already in progress,
            then do nothing.
          optional: true
        - id: func
          type:
            - Function
          description: |
            Method to execute after the delay
          optional: true
      content: >-
        function delayExecute(name?: string, msDelay?: number,
        cancelPendingOps?: boolean, func?: Function)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.enhance
    name: >-
      enhance(type: function, element: function, options?: function,
      enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - function
          description: ''
        - id: element
          type:
            - function
          description: ''
        - id: options
          type:
            - function
          description: ''
          optional: true
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function enhance(type: function, element: function, options?: function,
        enhancementOptions?: EnhancementOptions)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.ENHANCEMENTS_DATA_KEY
    name: ENHANCEMENTS_DATA_KEY
    fullName: ENHANCEMENTS_DATA_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.ENHANCEMENT_OPTIONPREFIX_KEY
    name: ENHANCEMENT_OPTIONPREFIX_KEY
    fullName: ENHANCEMENT_OPTIONPREFIX_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.ENHANCEMENT_OPTIONS_KEY
    name: ENHANCEMENT_OPTIONS_KEY
    fullName: ENHANCEMENT_OPTIONS_KEY
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.ensureEnhancement
    name: 'ensureEnhancement(type?: any, context?: any, errorCallback?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: context
          type:
            - any
          description: ''
          optional: true
        - id: errorCallback
          type:
            - any
          description: ''
          optional: true
      content: >-
        function ensureEnhancement(type?: any, context?: any, errorCallback?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.ensureEnhancements
    name: 'ensureEnhancements(type?: any, context?: any, errorCallback?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: context
          type:
            - any
          description: ''
          optional: true
        - id: errorCallback
          type:
            - any
          description: ''
          optional: true
      content: >-
        function ensureEnhancements(type?: any, context?: any, errorCallback?:
        any)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.EVENT_DIRTY_STATE_CHANGED
    name: EVENT_DIRTY_STATE_CHANGED
    fullName: EVENT_DIRTY_STATE_CHANGED
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.EVENT_SAVING_STATE_CHANGED
    name: EVENT_SAVING_STATE_CHANGED
    fullName: EVENT_SAVING_STATE_CHANGED
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.EVENT_VALID_STATE_CHANGED
    name: EVENT_VALID_STATE_CHANGED
    fullName: EVENT_VALID_STATE_CHANGED
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.focus
    name: focus()
    children: []
    langs:
      - typeScript
    summary: Set Focus to the control
    syntax:
      parameters: []
      content: function focus()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getElement
    name: getElement()
    children: []
    langs:
      - typeScript
    summary: Gets the element associated with this control.
    syntax:
      parameters: []
      content: function getElement()
      return:
        type:
          - JQuery
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getEnhancementOptions
    name: 'getEnhancementOptions(type: any, element: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
        - id: element
          type:
            - any
          description: |+

      content: 'function getEnhancementOptions(type: any, element: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getId
    name: getId()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getId()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getInstance
    name: 'getInstance(type?: any, element?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: element
          type:
            - any
          description: ''
          optional: true
      content: 'function getInstance(type?: any, element?: any)'
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getOptionPrefix
    name: 'getOptionPrefix(type: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
      content: 'function getOptionPrefix(type: any)'
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getTypeName
    name: getTypeName()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getTypeName()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getTypeName
    name: 'getTypeName(type?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
      content: 'function getTypeName(type?: any)'
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.initialize
    name: initialize()
    children: []
    langs:
      - typeScript
    summary: Initialize the control
    syntax:
      parameters: []
      content: function initialize()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.initializeOptions
    name: 'initializeOptions(options?: ITabControlOption)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - vss-web-extension-sdk.VSS.Controls.TabContent.ITabControlOption
          description: |+

          optional: true
      content: 'function initializeOptions(options?: ITabControlOption)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.isDirty
    name: isDirty()
    children: []
    langs:
      - typeScript
    summary: Check the dirty states for the all tab pages
    syntax:
      parameters: []
      content: function isDirty()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.isDisposed
    name: isDisposed()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function isDisposed()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.isSaving
    name: isSaving()
    children: []
    langs:
      - typeScript
    summary: Check the saving states for the all tab pages
    syntax:
      parameters: []
      content: function isSaving()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.onResize
    name: onResize()
    children: []
    langs:
      - typeScript
    summary: Recalculate the size and update the navigation buttons
    syntax:
      parameters: []
      content: function onResize()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.optionsPrefix
    name: optionsPrefix
    fullName: optionsPrefix
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.registerEnhancement
    name: >-
      registerEnhancement(type?: function, selector?: string, options?:
      TOptions, errorCallback?: IErrorCallback, enhancementOptions?:
      EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - function
          description: ''
          optional: true
        - id: selector
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - TOptions
          description: ''
          optional: true
        - id: errorCallback
          type:
            - vss-web-extension-sdk.IErrorCallback
          description: |+

          optional: true
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function registerEnhancement(type?: function, selector?: string,
        options?: TOptions, errorCallback?: IErrorCallback, enhancementOptions?:
        EnhancementOptions)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.registerJQueryWidget
    name: >-
      registerJQueryWidget(type?: any, widgetName?: any, widgetOptions?:
      TOptions, enhancementOptions?: EnhancementOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: widgetName
          type:
            - any
          description: ''
          optional: true
        - id: widgetOptions
          type:
            - TOptions
          description: |+

          optional: true
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
          optional: true
      content: >-
        function registerJQueryWidget(type?: any, widgetName?: any,
        widgetOptions?: TOptions, enhancementOptions?: EnhancementOptions)
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.setAttribute
    name: 'setAttribute(attribute: string, value: function, element?: JQuery)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets the attribute for the current control using the specified attribute
      name, value on the specified element.

      If no element specified, default element is used.
    syntax:
      parameters:
        - id: attribute
          type:
            - string
          description: Attribute name to set value.
        - id: value
          type:
            - function
          description: Attribute value to set.
        - id: element
          type:
            - JQuery
          description: |
            Element to apply the attribute (default is root element).
          optional: true
      content: >-
        function setAttribute(attribute: string, value: function, element?:
        JQuery)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.setEnhancementOptions
    name: 'setEnhancementOptions(enhancementOptions: EnhancementOptions)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets options related to the creation of this control or enhancement of an
      element as this control.

      Note: Options are merged.
    syntax:
      parameters:
        - id: enhancementOptions
          type:
            - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
          description: ''
      content: 'function setEnhancementOptions(enhancementOptions: EnhancementOptions)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.setRole
    name: 'setRole(role: string, element?: JQuery)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets the role for the current control using the specified role value on
      the specified element.

      If no element specified, default element is used.
    syntax:
      parameters:
        - id: role
          type:
            - string
          description: Role to assign.
        - id: element
          type:
            - JQuery
          description: |
            Element to apply the role (default is root element).
          optional: true
      content: 'function setRole(role: string, element?: JQuery)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.constructor
    name: 'TabControl(options?: ITabControlOption)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - vss-web-extension-sdk.VSS.Controls.TabContent.ITabControlOption
          description: |+

          optional: true
      content: 'new TabControl(options?: ITabControlOption)'
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._bind
    name: '_bind(element?: any, eventType?: any, handler?: any, track?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: handler
          type:
            - any
          description: ''
          optional: true
        - id: track
          type:
            - any
          description: |+

          optional: true
      content: >-
        function _bind(element?: any, eventType?: any, handler?: any, track?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._disposed
    name: _disposed
    fullName: _disposed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._element
    name: _element
    fullName: _element
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - JQuery
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._enhance
    name: '_enhance(element: JQuery)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - JQuery
          description: |+

      content: 'function _enhance(element: JQuery)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._enhancementOptions
    name: _enhancementOptions
    fullName: _enhancementOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.EnhancementOptions
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._ensureInitialized
    name: _ensureInitialized()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _ensureInitialized()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._fire
    name: '_fire(element?: any, eventType?: any, args?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: args
          type:
            - any
          description: |+

          optional: true
      content: 'function _fire(element?: any, eventType?: any, args?: any)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._fireChange
    name: '_fireChange(sender?: any)'
    children: []
    langs:
      - typeScript
    summary: Fires the change event for the control immediately
    syntax:
      parameters:
        - id: sender
          type:
            - any
          description: |
            Source element of the event
          optional: true
      content: 'function _fireChange(sender?: any)'
      return:
        type:
          - any
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._getEventNameSpace
    name: _getEventNameSpace()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _getEventNameSpace()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._getInDomPromise
    name: _getInDomPromise()
    children: []
    langs:
      - typeScript
    summary: |-
      Get a promise that is resolved once the containing element for this
      control has been added to the DOM hierarchy.
    syntax:
      parameters: []
      content: function _getInDomPromise()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._getUniqueId
    name: _getUniqueId()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function _getUniqueId()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._initialized
    name: _initialized
    fullName: _initialized
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._options
    name: _options
    fullName: _options
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.TabContent.ITabControlOption
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._setElement
    name: '_setElement(element: JQuery)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - JQuery
          description: |+

      content: 'function _setElement(element: JQuery)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._setId
    name: '_setId(id: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: id
          type:
            - string
          description: |+

      content: 'function _setId(id: string)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl._unbind
    name: '_unbind(element?: any, eventType?: any, handler?: any, track?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: element
          type:
            - any
          description: ''
          optional: true
        - id: eventType
          type:
            - any
          description: ''
          optional: true
        - id: handler
          type:
            - any
          description: ''
          optional: true
        - id: track
          type:
            - any
          description: |+

          optional: true
      content: >-
        function _unbind(element?: any, eventType?: any, handler?: any, track?:
        any)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Enhancement
    type: method
