### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl
    name: TabControl
    fullName: TabControl
    children:
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.beginSave
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.clearOnSavedCallbackList
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.dispose
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.EVENT_DIRTY_STATE_CHANGED
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.EVENT_SAVING_STATE_CHANGED
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.EVENT_VALID_STATE_CHANGED
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getRefreshOnCloseStatus
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.initialize
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.initializeOptions
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.invokeSaveCallbacks
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.isDirty
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.isSaving
      - vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.onResize
    langs:
      - typeScript
    type: class
    summary: A control for content across multiple tabs.
    extends:
      name: >-
        @vss-web-extension-sdk.VSS.Controls.Control<@vss-web-extension-sdk.VSS.Controls.TabContent.ITabControlOption>
    source:
      path: vss.d.ts
      startLine: 17035
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/TabContent
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.beginSave
    name: beginSave
    children: []
    langs:
      - typeScript
    summary: >-
      Check if there is an invalid page. Focus on the first invalid page if
      there is any.

      Begin to persist user changes by iterate all the tab pages and call the
      beginSave() for each page if it is dirty and valid
    syntax:
      content: 'function beginSave(e?: JQueryEventObject)'
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: The event that trigger the saving
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<TabSavingStatus>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.clearOnSavedCallbackList
    name: clearOnSavedCallbackList
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function clearOnSavedCallbackList()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.dispose
    name: dispose
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function dispose()
      parameters: []
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.EVENT_DIRTY_STATE_CHANGED
    name: EVENT_DIRTY_STATE_CHANGED
    fullName: EVENT_DIRTY_STATE_CHANGED
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string EVENT_DIRTY_STATE_CHANGED
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.EVENT_SAVING_STATE_CHANGED
    name: EVENT_SAVING_STATE_CHANGED
    fullName: EVENT_SAVING_STATE_CHANGED
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string EVENT_SAVING_STATE_CHANGED
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.EVENT_VALID_STATE_CHANGED
    name: EVENT_VALID_STATE_CHANGED
    fullName: EVENT_VALID_STATE_CHANGED
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string EVENT_VALID_STATE_CHANGED
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.getRefreshOnCloseStatus
    name: getRefreshOnCloseStatus
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getRefreshOnCloseStatus()
      parameters: []
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.initialize
    name: initialize
    children: []
    langs:
      - typeScript
    summary: Initialize the control
    syntax:
      content: function initialize()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.initializeOptions
    name: initializeOptions
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function initializeOptions(options?: ITabControlOption)'
      parameters:
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.Controls.TabContent.ITabControlOption'
          description: |+

          optional: true
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.invokeSaveCallbacks
    name: invokeSaveCallbacks
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function invokeSaveCallbacks()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.isDirty
    name: isDirty
    children: []
    langs:
      - typeScript
    summary: Check the dirty states for the all tab pages
    syntax:
      content: function isDirty()
      parameters: []
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.isSaving
    name: isSaving
    children: []
    langs:
      - typeScript
    summary: Check the saving states for the all tab pages
    syntax:
      content: function isSaving()
      parameters: []
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabControl.onResize
    name: onResize
    children: []
    langs:
      - typeScript
    summary: Recalculate the size and update the navigation buttons
    syntax:
      content: function onResize()
      parameters: []
    type: method
