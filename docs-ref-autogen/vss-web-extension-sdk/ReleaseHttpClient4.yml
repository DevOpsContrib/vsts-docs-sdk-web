### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.ReleaseHttpClient4
    name: ReleaseHttpClient4
    fullName: ReleaseHttpClient4
    children:
      - vss-web-extension-sdk.ReleaseHttpClient4.addDefinitionTag
      - vss-web-extension-sdk.ReleaseHttpClient4.addDefinitionTags
      - vss-web-extension-sdk.ReleaseHttpClient4.addReleaseTag
      - vss-web-extension-sdk.ReleaseHttpClient4.addReleaseTags
      - >-
        vss-web-extension-sdk.ReleaseHttpClient4.createDefinitionEnvironmentTemplate
      - vss-web-extension-sdk.ReleaseHttpClient4.createFavorites
      - vss-web-extension-sdk.ReleaseHttpClient4.createFolder
      - vss-web-extension-sdk.ReleaseHttpClient4.createRelease
      - vss-web-extension-sdk.ReleaseHttpClient4.createReleaseDefinition
      - >-
        vss-web-extension-sdk.ReleaseHttpClient4.deleteDefinitionEnvironmentTemplate
      - vss-web-extension-sdk.ReleaseHttpClient4.deleteDefinitionTag
      - vss-web-extension-sdk.ReleaseHttpClient4.deleteFavorites
      - vss-web-extension-sdk.ReleaseHttpClient4.deleteFolder
      - vss-web-extension-sdk.ReleaseHttpClient4.deleteRelease
      - vss-web-extension-sdk.ReleaseHttpClient4.deleteReleaseDefinition
      - vss-web-extension-sdk.ReleaseHttpClient4.deleteReleaseTag
      - vss-web-extension-sdk.ReleaseHttpClient4.getAgentArtifactDefinitions
      - vss-web-extension-sdk.ReleaseHttpClient4.getApproval
      - vss-web-extension-sdk.ReleaseHttpClient4.getApprovalHistory
      - vss-web-extension-sdk.ReleaseHttpClient4.getApprovals
      - vss-web-extension-sdk.ReleaseHttpClient4.getArtifactTypeDefinitions
      - vss-web-extension-sdk.ReleaseHttpClient4.getArtifactVersions
      - vss-web-extension-sdk.ReleaseHttpClient4.getArtifactVersionsForSources
      - vss-web-extension-sdk.ReleaseHttpClient4.getAutoTriggerIssues
      - vss-web-extension-sdk.ReleaseHttpClient4.getDefinitionEnvironments
      - >-
        vss-web-extension-sdk.ReleaseHttpClient4.getDefinitionEnvironmentTemplate
      - vss-web-extension-sdk.ReleaseHttpClient4.getDefinitionRevision
      - vss-web-extension-sdk.ReleaseHttpClient4.getDefinitionTags
      - vss-web-extension-sdk.ReleaseHttpClient4.getDeployments
      - >-
        vss-web-extension-sdk.ReleaseHttpClient4.getDeploymentsForMultipleEnvironments
      - vss-web-extension-sdk.ReleaseHttpClient4.getFavorites
      - vss-web-extension-sdk.ReleaseHttpClient4.getFolders
      - vss-web-extension-sdk.ReleaseHttpClient4.getInputValues
      - vss-web-extension-sdk.ReleaseHttpClient4.getIssues
      - vss-web-extension-sdk.ReleaseHttpClient4.getLog
      - vss-web-extension-sdk.ReleaseHttpClient4.getLogs
      - vss-web-extension-sdk.ReleaseHttpClient4.getManualIntervention
      - vss-web-extension-sdk.ReleaseHttpClient4.getManualInterventions
      - vss-web-extension-sdk.ReleaseHttpClient4.getMetrics
      - vss-web-extension-sdk.ReleaseHttpClient4.getRelease
      - vss-web-extension-sdk.ReleaseHttpClient4.getReleaseChanges
      - vss-web-extension-sdk.ReleaseHttpClient4.getReleaseDefinition
      - vss-web-extension-sdk.ReleaseHttpClient4.getReleaseDefinitionHistory
      - vss-web-extension-sdk.ReleaseHttpClient4.getReleaseDefinitionRevision
      - vss-web-extension-sdk.ReleaseHttpClient4.getReleaseDefinitions
      - vss-web-extension-sdk.ReleaseHttpClient4.getReleaseDefinitionSummary
      - vss-web-extension-sdk.ReleaseHttpClient4.getReleaseEnvironment
      - vss-web-extension-sdk.ReleaseHttpClient4.getReleaseHistory
      - vss-web-extension-sdk.ReleaseHttpClient4.getReleaseProjects
      - vss-web-extension-sdk.ReleaseHttpClient4.getReleaseRevision
      - vss-web-extension-sdk.ReleaseHttpClient4.getReleases
      - vss-web-extension-sdk.ReleaseHttpClient4.getReleaseSettings
      - vss-web-extension-sdk.ReleaseHttpClient4.getReleaseTags
      - vss-web-extension-sdk.ReleaseHttpClient4.getReleaseWorkItemsRefs
      - vss-web-extension-sdk.ReleaseHttpClient4.getSourceBranches
      - vss-web-extension-sdk.ReleaseHttpClient4.getSummaryMailSections
      - vss-web-extension-sdk.ReleaseHttpClient4.getTags
      - vss-web-extension-sdk.ReleaseHttpClient4.getTaskLog
      - vss-web-extension-sdk.ReleaseHttpClient4.getTasks
      - vss-web-extension-sdk.ReleaseHttpClient4.getTasksForTaskGroup
      - >-
        vss-web-extension-sdk.ReleaseHttpClient4.listDefinitionEnvironmentTemplates
      - vss-web-extension-sdk.ReleaseHttpClient4.constructor
      - vss-web-extension-sdk.ReleaseHttpClient4.sendSummaryMail
      - vss-web-extension-sdk.ReleaseHttpClient4.undeleteRelease
      - vss-web-extension-sdk.ReleaseHttpClient4.updateFolder
      - vss-web-extension-sdk.ReleaseHttpClient4.updateManualIntervention
      - vss-web-extension-sdk.ReleaseHttpClient4.updateRelease
      - vss-web-extension-sdk.ReleaseHttpClient4.updateReleaseApproval
      - vss-web-extension-sdk.ReleaseHttpClient4.updateReleaseDefinition
      - vss-web-extension-sdk.ReleaseHttpClient4.updateReleaseEnvironment
      - vss-web-extension-sdk.ReleaseHttpClient4.updateReleaseResource
      - vss-web-extension-sdk.ReleaseHttpClient4.updateReleaseSettings
      - vss-web-extension-sdk.ReleaseHttpClient4._beginGetLocation
      - vss-web-extension-sdk.ReleaseHttpClient4._beginRequest
      - vss-web-extension-sdk.ReleaseHttpClient4._beginRequestWithAjaxResult
      - vss-web-extension-sdk.ReleaseHttpClient4._issueAjaxRequest
      - vss-web-extension-sdk.ReleaseHttpClient4._setInitializationPromise
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.addDefinitionTag
    name: >-
      addDefinitionTag(project: string, releaseDefinitionId: number, tag:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseDefinitionId
          type:
            - number
          description: ''
        - id: tag
          type:
            - string
          description: ''
      content: >-
        function addDefinitionTag(project: string, releaseDefinitionId: number,
        tag: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.addDefinitionTags
    name: >-
      addDefinitionTags(tags: function, project: string, releaseDefinitionId:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: tags
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseDefinitionId
          type:
            - number
          description: ''
      content: >-
        function addDefinitionTags(tags: function, project: string,
        releaseDefinitionId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.addReleaseTag
    name: 'addReleaseTag(project: string, releaseId: number, tag: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
        - id: tag
          type:
            - string
          description: ''
      content: 'function addReleaseTag(project: string, releaseId: number, tag: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.addReleaseTags
    name: 'addReleaseTags(tags: function, project: string, releaseId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: tags
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
      content: >-
        function addReleaseTags(tags: function, project: string, releaseId:
        number)
      return:
        type:
          - IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseHttpClient4.createDefinitionEnvironmentTemplate
    name: >-
      createDefinitionEnvironmentTemplate(template:
      ReleaseDefinitionEnvironmentTemplate, project: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: template
          type:
            - ReleaseDefinitionEnvironmentTemplate
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
      content: >-
        function createDefinitionEnvironmentTemplate(template:
        ReleaseDefinitionEnvironmentTemplate, project: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.createFavorites
    name: >-
      createFavorites(favoriteItems: function, project: string, scope: string,
      identityId?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: favoriteItems
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: scope
          type:
            - string
          description: ''
        - id: identityId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function createFavorites(favoriteItems: function, project: string,
        scope: string, identityId?: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.createFolder
    name: 'createFolder(folder: Folder, project: string, path: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: folder
          type:
            - Folder
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      content: 'function createFolder(folder: Folder, project: string, path: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.createRelease
    name: 'createRelease(releaseStartMetadata: ReleaseStartMetadata, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: releaseStartMetadata
          type:
            - ReleaseStartMetadata
          description: Metadata to create a release.
        - id: project
          type:
            - string
          description: Project ID or project name
      content: >-
        function createRelease(releaseStartMetadata: ReleaseStartMetadata,
        project: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.createReleaseDefinition
    name: >-
      createReleaseDefinition(releaseDefinition: ReleaseDefinition, project:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: releaseDefinition
          type:
            - ReleaseDefinition
          description: release definition object to create.
        - id: project
          type:
            - string
          description: Project ID or project name
      content: >-
        function createReleaseDefinition(releaseDefinition: ReleaseDefinition,
        project: string)
      return:
        type:
          - IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseHttpClient4.deleteDefinitionEnvironmentTemplate
    name: 'deleteDefinitionEnvironmentTemplate(project: string, templateId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: ''
      content: >-
        function deleteDefinitionEnvironmentTemplate(project: string,
        templateId: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.deleteDefinitionTag
    name: >-
      deleteDefinitionTag(project: string, releaseDefinitionId: number, tag:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseDefinitionId
          type:
            - number
          description: ''
        - id: tag
          type:
            - string
          description: ''
      content: >-
        function deleteDefinitionTag(project: string, releaseDefinitionId:
        number, tag: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.deleteFavorites
    name: >-
      deleteFavorites(project: string, scope: string, identityId?: string,
      favoriteItemIds?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: scope
          type:
            - string
          description: ''
        - id: identityId
          type:
            - string
          description: ''
          optional: true
        - id: favoriteItemIds
          type:
            - string
          description: ''
          optional: true
      content: >-
        function deleteFavorites(project: string, scope: string, identityId?:
        string, favoriteItemIds?: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.deleteFolder
    name: 'deleteFolder(project: string, path: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      content: 'function deleteFolder(project: string, path: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.deleteRelease
    name: 'deleteRelease(project: string, releaseId: number, comment?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: comment
          type:
            - string
          description: Comment for deleting a release.
          optional: true
      content: >-
        function deleteRelease(project: string, releaseId: number, comment?:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.deleteReleaseDefinition
    name: 'deleteReleaseDefinition(project: string, definitionId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: Id of the release definition.
      content: 'function deleteReleaseDefinition(project: string, definitionId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.deleteReleaseTag
    name: 'deleteReleaseTag(project: string, releaseId: number, tag: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
        - id: tag
          type:
            - string
          description: ''
      content: >-
        function deleteReleaseTag(project: string, releaseId: number, tag:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getAgentArtifactDefinitions
    name: 'getAgentArtifactDefinitions(project: string, releaseId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
      content: 'function getAgentArtifactDefinitions(project: string, releaseId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getApproval
    name: 'getApproval(project: string, approvalId: number, includeHistory?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: approvalId
          type:
            - number
          description: Id of the approval.
        - id: includeHistory
          type:
            - boolean
          description: '''true'' to include history of the approval. Default is ''false''.'
          optional: true
      content: >-
        function getApproval(project: string, approvalId: number,
        includeHistory?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getApprovalHistory
    name: 'getApprovalHistory(project: string, approvalStepId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: approvalStepId
          type:
            - number
          description: Id of the approval.
      content: 'function getApprovalHistory(project: string, approvalStepId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getApprovals
    name: >-
      getApprovals(project: string, assignedToFilter?: string, statusFilter?:
      function, releaseIdsFilter?: function, typeFilter?: function, top?:
      number, continuationToken?: number, queryOrder?: function,
      includeMyGroupApprovals?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: assignedToFilter
          type:
            - string
          description: Approvals assigned to this user.
          optional: true
        - id: statusFilter
          type:
            - function
          description: Approvals with this status. Default is 'pending'.
          optional: true
        - id: releaseIdsFilter
          type:
            - function
          description: >-
            Approvals for release id(s) mentioned in the filter. Multiple
            releases can be mentioned by separating them with ',' e.g.
            releaseIdsFilter=1,2,3,4.
          optional: true
        - id: typeFilter
          type:
            - function
          description: Approval with this type.
          optional: true
        - id: top
          type:
            - number
          description: Number of approvals to get. Default is 50.
          optional: true
        - id: continuationToken
          type:
            - number
          description: Gets the approvals after the continuation token provided.
          optional: true
        - id: queryOrder
          type:
            - function
          description: >-
            Gets the results in the defined order of created approvals. Default
            is 'descending'.
          optional: true
        - id: includeMyGroupApprovals
          type:
            - boolean
          description: '''true'' to include my group approvals. Default is ''false''.'
          optional: true
      content: >-
        function getApprovals(project: string, assignedToFilter?: string,
        statusFilter?: function, releaseIdsFilter?: function, typeFilter?:
        function, top?: number, continuationToken?: number, queryOrder?:
        function, includeMyGroupApprovals?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getArtifactTypeDefinitions
    name: 'getArtifactTypeDefinitions(project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function getArtifactTypeDefinitions(project: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getArtifactVersions
    name: 'getArtifactVersions(project: string, releaseDefinitionId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseDefinitionId
          type:
            - number
          description: ''
      content: >-
        function getArtifactVersions(project: string, releaseDefinitionId:
        number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getArtifactVersionsForSources
    name: 'getArtifactVersionsForSources(artifacts: function, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: artifacts
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
      content: >-
        function getArtifactVersionsForSources(artifacts: function, project:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getAutoTriggerIssues
    name: >-
      getAutoTriggerIssues(artifactType: string, sourceId: string,
      artifactVersionId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: artifactType
          type:
            - string
          description: ''
        - id: sourceId
          type:
            - string
          description: ''
        - id: artifactVersionId
          type:
            - string
          description: ''
      content: >-
        function getAutoTriggerIssues(artifactType: string, sourceId: string,
        artifactVersionId: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getDefinitionEnvironments
    name: >-
      getDefinitionEnvironments(project: string, taskGroupId?: string,
      propertyFilters?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: taskGroupId
          type:
            - string
          description: ''
          optional: true
        - id: propertyFilters
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getDefinitionEnvironments(project: string, taskGroupId?:
        string, propertyFilters?: function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getDefinitionEnvironmentTemplate
    name: 'getDefinitionEnvironmentTemplate(project: string, templateId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: ''
      content: >-
        function getDefinitionEnvironmentTemplate(project: string, templateId:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getDefinitionRevision
    name: >-
      getDefinitionRevision(project: string, definitionId: number, revision:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
        - id: revision
          type:
            - number
          description: ''
      content: >-
        function getDefinitionRevision(project: string, definitionId: number,
        revision: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getDefinitionTags
    name: 'getDefinitionTags(project: string, releaseDefinitionId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseDefinitionId
          type:
            - number
          description: ''
      content: 'function getDefinitionTags(project: string, releaseDefinitionId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getDeployments
    name: >-
      getDeployments(project: string, definitionId?: number,
      definitionEnvironmentId?: number, createdBy?: string, minModifiedTime?:
      Date, maxModifiedTime?: Date, deploymentStatus?: function,
      operationStatus?: function, latestAttemptsOnly?: boolean, queryOrder?:
      function, top?: number, continuationToken?: number, createdFor?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
          optional: true
        - id: definitionEnvironmentId
          type:
            - number
          description: ''
          optional: true
        - id: createdBy
          type:
            - string
          description: ''
          optional: true
        - id: minModifiedTime
          type:
            - Date
          description: ''
          optional: true
        - id: maxModifiedTime
          type:
            - Date
          description: ''
          optional: true
        - id: deploymentStatus
          type:
            - function
          description: ''
          optional: true
        - id: operationStatus
          type:
            - function
          description: ''
          optional: true
        - id: latestAttemptsOnly
          type:
            - boolean
          description: ''
          optional: true
        - id: queryOrder
          type:
            - function
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: continuationToken
          type:
            - number
          description: ''
          optional: true
        - id: createdFor
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getDeployments(project: string, definitionId?: number,
        definitionEnvironmentId?: number, createdBy?: string, minModifiedTime?:
        Date, maxModifiedTime?: Date, deploymentStatus?: function,
        operationStatus?: function, latestAttemptsOnly?: boolean, queryOrder?:
        function, top?: number, continuationToken?: number, createdFor?: string)
      return:
        type:
          - IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseHttpClient4.getDeploymentsForMultipleEnvironments
    name: >-
      getDeploymentsForMultipleEnvironments(queryParameters:
      DeploymentQueryParameters, project: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: queryParameters
          type:
            - DeploymentQueryParameters
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
      content: >-
        function getDeploymentsForMultipleEnvironments(queryParameters:
        DeploymentQueryParameters, project: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getFavorites
    name: 'getFavorites(project: string, scope: string, identityId?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: scope
          type:
            - string
          description: ''
        - id: identityId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getFavorites(project: string, scope: string, identityId?:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getFolders
    name: 'getFolders(project: string, path?: string, queryOrder?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
          optional: true
        - id: queryOrder
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getFolders(project: string, path?: string, queryOrder?:
        function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getInputValues
    name: 'getInputValues(query: InputValuesQuery, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: query
          type:
            - InputValuesQuery
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function getInputValues(query: InputValuesQuery, project: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getIssues
    name: 'getIssues(project: string, buildId: number, sourceId?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: sourceId
          type:
            - string
          description: ''
          optional: true
      content: 'function getIssues(project: string, buildId: number, sourceId?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getLog
    name: >-
      getLog(project: string, releaseId: number, environmentId: number, taskId:
      number, attemptId?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: environmentId
          type:
            - number
          description: Id of the environment.
        - id: taskId
          type:
            - number
          description: Task Id for the log.
        - id: attemptId
          type:
            - number
          description: Id of the attempt.
          optional: true
      content: >-
        function getLog(project: string, releaseId: number, environmentId:
        number, taskId: number, attemptId?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getLogs
    name: 'getLogs(project: string, releaseId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
      content: 'function getLogs(project: string, releaseId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getManualIntervention
    name: >-
      getManualIntervention(project: string, releaseId: number,
      manualInterventionId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
        - id: manualInterventionId
          type:
            - number
          description: ''
      content: >-
        function getManualIntervention(project: string, releaseId: number,
        manualInterventionId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getManualInterventions
    name: 'getManualInterventions(project: string, releaseId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
      content: 'function getManualInterventions(project: string, releaseId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getMetrics
    name: 'getMetrics(project: string, minMetricsTime?: Date)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: minMetricsTime
          type:
            - Date
          description: ''
          optional: true
      content: 'function getMetrics(project: string, minMetricsTime?: Date)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getRelease
    name: >-
      getRelease(project: string, releaseId: number, includeAllApprovals?:
      boolean, propertyFilters?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: includeAllApprovals
          type:
            - boolean
          description: Include all approvals in the result. Default is 'true'.
          optional: true
        - id: propertyFilters
          type:
            - function
          description: A comma-delimited list of properties to include in the results.
          optional: true
      content: >-
        function getRelease(project: string, releaseId: number,
        includeAllApprovals?: boolean, propertyFilters?: function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getReleaseChanges
    name: >-
      getReleaseChanges(project: string, releaseId: number, baseReleaseId?:
      number, top?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
        - id: baseReleaseId
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getReleaseChanges(project: string, releaseId: number,
        baseReleaseId?: number, top?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getReleaseDefinition
    name: >-
      getReleaseDefinition(project: string, definitionId: number,
      propertyFilters?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: Id of the release definition.
        - id: propertyFilters
          type:
            - function
          description: A comma-delimited list of extended properties to retrieve.
          optional: true
      content: >-
        function getReleaseDefinition(project: string, definitionId: number,
        propertyFilters?: function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getReleaseDefinitionHistory
    name: 'getReleaseDefinitionHistory(project: string, definitionId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: Id of the definition.
      content: >-
        function getReleaseDefinitionHistory(project: string, definitionId:
        number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getReleaseDefinitionRevision
    name: >-
      getReleaseDefinitionRevision(project: string, definitionId: number,
      revision: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: Id of the release definition.
        - id: revision
          type:
            - number
          description: Revision number of the release definition.
      content: >-
        function getReleaseDefinitionRevision(project: string, definitionId:
        number, revision: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getReleaseDefinitions
    name: >-
      getReleaseDefinitions(project: string, searchText?: string, expand?:
      function, artifactType?: string, artifactSourceId?: string, top?: number,
      continuationToken?: string, queryOrder?: function, path?: string,
      isExactNameMatch?: boolean, tagFilter?: function, propertyFilters?:
      function, definitionIdFilter?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: searchText
          type:
            - string
          description: Get release definitions with names starting with searchText.
          optional: true
        - id: expand
          type:
            - function
          description: >-
            The properties that should be expanded in the list of Release
            definitions.
          optional: true
        - id: artifactType
          type:
            - string
          description: >-
            Release definitions with given artifactType will be returned. Values
            can be Build, Jenkins, GitHub, Nuget, Team Build (external),
            ExternalTFSBuild, Git, TFVC, ExternalTfsXamlBuild.
          optional: true
        - id: artifactSourceId
          type:
            - string
          description: >-
            Release definitions with given artifactSourceId will be returned.
            e.g. For build it would be {projectGuid}:{BuildDefinitionId}, for
            Jenkins it would be {JenkinsConnectionId}:{JenkinsDefinitionId}, for
            TfsOnPrem it would be
            {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}. For
            third-party artifacts e.g. TeamCity, BitBucket you may refer
            'uniqueSourceIdentifier' inside vss-extension.json at
            https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.
          optional: true
        - id: top
          type:
            - number
          description: Number of release definitions to get.
          optional: true
        - id: continuationToken
          type:
            - string
          description: Gets the release definitions after the continuation token provided.
          optional: true
        - id: queryOrder
          type:
            - function
          description: Gets the results in the defined order. Default is 'IdAscending'.
          optional: true
        - id: path
          type:
            - string
          description: Gets the release definitions under the specified path.
          optional: true
        - id: isExactNameMatch
          type:
            - boolean
          description: >-
            'true'to gets the release definitions with exact match as specified
            in searchText. Default is 'false'.
          optional: true
        - id: tagFilter
          type:
            - function
          description: >-
            A comma-delimited list of tags. Only release definitions with these
            tags will be returned.
          optional: true
        - id: propertyFilters
          type:
            - function
          description: A comma-delimited list of extended properties to retrieve.
          optional: true
        - id: definitionIdFilter
          type:
            - function
          description: A comma-delimited list of release definitions to retrieve.
          optional: true
      content: >-
        function getReleaseDefinitions(project: string, searchText?: string,
        expand?: function, artifactType?: string, artifactSourceId?: string,
        top?: number, continuationToken?: string, queryOrder?: function, path?:
        string, isExactNameMatch?: boolean, tagFilter?: function,
        propertyFilters?: function, definitionIdFilter?: function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getReleaseDefinitionSummary
    name: >-
      getReleaseDefinitionSummary(project: string, definitionId: number,
      releaseCount: number, includeArtifact?: boolean,
      definitionEnvironmentIdsFilter?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: Id of the definition to get release summary.
        - id: releaseCount
          type:
            - number
          description: Count of releases to be included in summary.
        - id: includeArtifact
          type:
            - boolean
          description: Include artifact details.Default is 'false'.
          optional: true
        - id: definitionEnvironmentIdsFilter
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getReleaseDefinitionSummary(project: string, definitionId:
        number, releaseCount: number, includeArtifact?: boolean,
        definitionEnvironmentIdsFilter?: function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getReleaseEnvironment
    name: >-
      getReleaseEnvironment(project: string, releaseId: number, environmentId:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
        - id: environmentId
          type:
            - number
          description: ''
      content: >-
        function getReleaseEnvironment(project: string, releaseId: number,
        environmentId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getReleaseHistory
    name: 'getReleaseHistory(project: string, releaseId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
      content: 'function getReleaseHistory(project: string, releaseId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getReleaseProjects
    name: 'getReleaseProjects(artifactType: string, artifactSourceId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: artifactType
          type:
            - string
          description: ''
        - id: artifactSourceId
          type:
            - string
          description: ''
      content: >-
        function getReleaseProjects(artifactType: string, artifactSourceId:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getReleaseRevision
    name: >-
      getReleaseRevision(project: string, releaseId: number,
      definitionSnapshotRevision: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: definitionSnapshotRevision
          type:
            - number
          description: Definition snapshot revision number.
      content: >-
        function getReleaseRevision(project: string, releaseId: number,
        definitionSnapshotRevision: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getReleases
    name: >-
      getReleases(project?: string, definitionId?: number,
      definitionEnvironmentId?: number, searchText?: string, createdBy?: string,
      statusFilter?: function, environmentStatusFilter?: number,
      minCreatedTime?: Date, maxCreatedTime?: Date, queryOrder?: function, top?:
      number, continuationToken?: number, expand?: function, artifactTypeId?:
      string, sourceId?: string, artifactVersionId?: string,
      sourceBranchFilter?: string, isDeleted?: boolean, tagFilter?: function,
      propertyFilters?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: definitionId
          type:
            - number
          description: Releases from this release definition Id.
          optional: true
        - id: definitionEnvironmentId
          type:
            - number
          description: ''
          optional: true
        - id: searchText
          type:
            - string
          description: Releases with names starting with searchText.
          optional: true
        - id: createdBy
          type:
            - string
          description: Releases created by this user.
          optional: true
        - id: statusFilter
          type:
            - function
          description: Releases that have this status.
          optional: true
        - id: environmentStatusFilter
          type:
            - number
          description: ''
          optional: true
        - id: minCreatedTime
          type:
            - Date
          description: Releases that were created after this time.
          optional: true
        - id: maxCreatedTime
          type:
            - Date
          description: Releases that were created before this time.
          optional: true
        - id: queryOrder
          type:
            - function
          description: >-
            Gets the results in the defined order of created date for releases.
            Default is descending.
          optional: true
        - id: top
          type:
            - number
          description: Number of releases to get. Default is 50.
          optional: true
        - id: continuationToken
          type:
            - number
          description: Gets the releases after the continuation token provided.
          optional: true
        - id: expand
          type:
            - function
          description: The property that should be expanded in the list of releases.
          optional: true
        - id: artifactTypeId
          type:
            - string
          description: >-
            Releases with given artifactTypeId will be returned. Values can be
            Build, Jenkins, GitHub, Nuget, Team Build (external),
            ExternalTFSBuild, Git, TFVC, ExternalTfsXamlBuild.
          optional: true
        - id: sourceId
          type:
            - string
          description: >-
            Unique identifier of the artifact used. e.g. For build it would be
            {projectGuid}:{BuildDefinitionId}, for Jenkins it would be
            {JenkinsConnectionId}:{JenkinsDefinitionId}, for TfsOnPrem it would
            be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}.
            For third-party artifacts e.g. TeamCity, BitBucket you may refer
            'uniqueSourceIdentifier' inside vss-extension.json
            https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.
          optional: true
        - id: artifactVersionId
          type:
            - string
          description: >-
            Releases with given artifactVersionId will be returned. E.g. in case
            of Build artifactType, it is buildId.
          optional: true
        - id: sourceBranchFilter
          type:
            - string
          description: Releases with given sourceBranchFilter will be returned.
          optional: true
        - id: isDeleted
          type:
            - boolean
          description: 'Gets the soft deleted releases, if true.'
          optional: true
        - id: tagFilter
          type:
            - function
          description: >-
            A comma-delimited list of tags. Only releases with these tags will
            be returned.
          optional: true
        - id: propertyFilters
          type:
            - function
          description: A comma-delimited list of extended properties to retrieve.
          optional: true
      content: >-
        function getReleases(project?: string, definitionId?: number,
        definitionEnvironmentId?: number, searchText?: string, createdBy?:
        string, statusFilter?: function, environmentStatusFilter?: number,
        minCreatedTime?: Date, maxCreatedTime?: Date, queryOrder?: function,
        top?: number, continuationToken?: number, expand?: function,
        artifactTypeId?: string, sourceId?: string, artifactVersionId?: string,
        sourceBranchFilter?: string, isDeleted?: boolean, tagFilter?: function,
        propertyFilters?: function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getReleaseSettings
    name: 'getReleaseSettings(project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function getReleaseSettings(project: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getReleaseTags
    name: 'getReleaseTags(project: string, releaseId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
      content: 'function getReleaseTags(project: string, releaseId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getReleaseWorkItemsRefs
    name: >-
      getReleaseWorkItemsRefs(project: string, releaseId: number,
      baseReleaseId?: number, top?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
        - id: baseReleaseId
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getReleaseWorkItemsRefs(project: string, releaseId: number,
        baseReleaseId?: number, top?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getSourceBranches
    name: 'getSourceBranches(project: string, definitionId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
      content: 'function getSourceBranches(project: string, definitionId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getSummaryMailSections
    name: 'getSummaryMailSections(project: string, releaseId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
      content: 'function getSummaryMailSections(project: string, releaseId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getTags
    name: 'getTags(project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function getTags(project: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getTaskLog
    name: >-
      getTaskLog(project: string, releaseId: number, environmentId: number,
      releaseDeployPhaseId: number, taskId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: environmentId
          type:
            - number
          description: Id of the environment.
        - id: releaseDeployPhaseId
          type:
            - number
          description: Release deploy phase Id.
        - id: taskId
          type:
            - number
          description: Task Id for the log.
      content: >-
        function getTaskLog(project: string, releaseId: number, environmentId:
        number, releaseDeployPhaseId: number, taskId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getTasks
    name: >-
      getTasks(project: string, releaseId: number, environmentId: number,
      attemptId?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
        - id: environmentId
          type:
            - number
          description: ''
        - id: attemptId
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getTasks(project: string, releaseId: number, environmentId:
        number, attemptId?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.getTasksForTaskGroup
    name: >-
      getTasksForTaskGroup(project: string, releaseId: number, environmentId:
      number, releaseDeployPhaseId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
        - id: environmentId
          type:
            - number
          description: ''
        - id: releaseDeployPhaseId
          type:
            - number
          description: ''
      content: >-
        function getTasksForTaskGroup(project: string, releaseId: number,
        environmentId: number, releaseDeployPhaseId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseHttpClient4.listDefinitionEnvironmentTemplates
    name: 'listDefinitionEnvironmentTemplates(project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function listDefinitionEnvironmentTemplates(project: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.constructor
    name: >-
      ReleaseHttpClient4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new ReleaseHttpClient4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      return:
        type:
          - ReleaseHttpClient4
    type: constructor
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.sendSummaryMail
    name: >-
      sendSummaryMail(mailMessage: MailMessage, project: string, releaseId:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: mailMessage
          type:
            - MailMessage
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
      content: >-
        function sendSummaryMail(mailMessage: MailMessage, project: string,
        releaseId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.undeleteRelease
    name: 'undeleteRelease(project: string, releaseId: number, comment: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of release to be undeleted.
        - id: comment
          type:
            - string
          description: Any comment for undeleting.
      content: >-
        function undeleteRelease(project: string, releaseId: number, comment:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.updateFolder
    name: 'updateFolder(folder: Folder, project: string, path: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: folder
          type:
            - Folder
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      content: 'function updateFolder(folder: Folder, project: string, path: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.updateManualIntervention
    name: >-
      updateManualIntervention(manualInterventionUpdateMetadata:
      ManualInterventionUpdateMetadata, project: string, releaseId: number,
      manualInterventionId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: manualInterventionUpdateMetadata
          type:
            - ManualInterventionUpdateMetadata
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: ''
        - id: manualInterventionId
          type:
            - number
          description: ''
      content: >-
        function updateManualIntervention(manualInterventionUpdateMetadata:
        ManualInterventionUpdateMetadata, project: string, releaseId: number,
        manualInterventionId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.updateRelease
    name: 'updateRelease(release: Release, project: string, releaseId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: release
          type:
            - Release
          description: Release object for update.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release to update.
      content: >-
        function updateRelease(release: Release, project: string, releaseId:
        number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.updateReleaseApproval
    name: >-
      updateReleaseApproval(approval: ReleaseApproval, project: string,
      approvalId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: approval
          type:
            - ReleaseApproval
          description: 'ReleaseApproval object having status, approver and comments.'
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: approvalId
          type:
            - number
          description: Id of the approval.
      content: >-
        function updateReleaseApproval(approval: ReleaseApproval, project:
        string, approvalId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.updateReleaseDefinition
    name: >-
      updateReleaseDefinition(releaseDefinition: ReleaseDefinition, project:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: releaseDefinition
          type:
            - ReleaseDefinition
          description: Release definition object to update.
        - id: project
          type:
            - string
          description: Project ID or project name
      content: >-
        function updateReleaseDefinition(releaseDefinition: ReleaseDefinition,
        project: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.updateReleaseEnvironment
    name: >-
      updateReleaseEnvironment(environmentUpdateData:
      ReleaseEnvironmentUpdateMetadata, project: string, releaseId: number,
      environmentId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: environmentUpdateData
          type:
            - ReleaseEnvironmentUpdateMetadata
          description: Environment update meta data.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release.
        - id: environmentId
          type:
            - number
          description: Id of the environment.
      content: >-
        function updateReleaseEnvironment(environmentUpdateData:
        ReleaseEnvironmentUpdateMetadata, project: string, releaseId: number,
        environmentId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.updateReleaseResource
    name: >-
      updateReleaseResource(releaseUpdateMetadata: ReleaseUpdateMetadata,
      project: string, releaseId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: releaseUpdateMetadata
          type:
            - ReleaseUpdateMetadata
          description: Properties of release to update.
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: releaseId
          type:
            - number
          description: Id of the release to update.
      content: >-
        function updateReleaseResource(releaseUpdateMetadata:
        ReleaseUpdateMetadata, project: string, releaseId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4.updateReleaseSettings
    name: 'updateReleaseSettings(releaseSettings: ReleaseSettings, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: releaseSettings
          type:
            - ReleaseSettings
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
      content: >-
        function updateReleaseSettings(releaseSettings: ReleaseSettings,
        project: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestParams
          type:
            - VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestParams
          type:
            - VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vssRequestOptions
          type:
            - IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.ReleaseHttpClient4._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: promise
          type:
            - IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
