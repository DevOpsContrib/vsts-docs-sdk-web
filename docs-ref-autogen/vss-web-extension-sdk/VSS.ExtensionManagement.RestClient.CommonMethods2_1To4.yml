### YamlMime:UniversalReference
items:
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4
    name: CommonMethods2_1To4
    fullName: CommonMethods2_1To4
    children:
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.constructor
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.createDocumentByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.deleteDocumentByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.getDocumentByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.getDocumentsByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.getInstalledExtensionByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.getStates
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.installExtensionByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.queryExtensions
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.setDocumentByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.uninstallExtensionByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.updateDocumentByName
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - >-
        @vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2To4
    source:
      path: vss.d.ts
      startLine: 20175
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/ExtensionManagement/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.constructor
    name: >-
      CommonMethods2_1To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new CommonMethods2_1To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.createDocumentByName
    name: >-
      createDocumentByName(doc: any, publisherName: string, extensionName:
      string, scopeType: string, scopeValue: string, collectionName: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: doc
          type:
            - any
          description: ''
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: scopeType
          type:
            - string
          description: ''
        - id: scopeValue
          type:
            - string
          description: ''
        - id: collectionName
          type:
            - string
          description: ''
      content: >-
        function createDocumentByName(doc: any, publisherName: string,
        extensionName: string, scopeType: string, scopeValue: string,
        collectionName: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<any>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.deleteDocumentByName
    name: >-
      deleteDocumentByName(publisherName: string, extensionName: string,
      scopeType: string, scopeValue: string, collectionName: string, documentId:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: scopeType
          type:
            - string
          description: ''
        - id: scopeValue
          type:
            - string
          description: ''
        - id: collectionName
          type:
            - string
          description: ''
        - id: documentId
          type:
            - string
          description: ''
      content: >-
        function deleteDocumentByName(publisherName: string, extensionName:
        string, scopeType: string, scopeValue: string, collectionName: string,
        documentId: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.getDocumentByName
    name: >-
      getDocumentByName(publisherName: string, extensionName: string, scopeType:
      string, scopeValue: string, collectionName: string, documentId: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: scopeType
          type:
            - string
          description: ''
        - id: scopeValue
          type:
            - string
          description: ''
        - id: collectionName
          type:
            - string
          description: ''
        - id: documentId
          type:
            - string
          description: ''
      content: >-
        function getDocumentByName(publisherName: string, extensionName: string,
        scopeType: string, scopeValue: string, collectionName: string,
        documentId: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<any>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.getDocumentsByName
    name: >-
      getDocumentsByName(publisherName: string, extensionName: string,
      scopeType: string, scopeValue: string, collectionName: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: scopeType
          type:
            - string
          description: ''
        - id: scopeValue
          type:
            - string
          description: ''
        - id: collectionName
          type:
            - string
          description: ''
      content: >-
        function getDocumentsByName(publisherName: string, extensionName:
        string, scopeType: string, scopeValue: string, collectionName: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<any[]>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.getInstalledExtensionByName
    name: >-
      getInstalledExtensionByName(publisherName: string, extensionName: string,
      assetTypes?: string[])
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: assetTypes
          type:
            - 'string[]'
          description: ''
          optional: true
      content: >-
        function getInstalledExtensionByName(publisherName: string,
        extensionName: string, assetTypes?: string[])
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Contributions.Contracts.InstalledExtension>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.getStates
    name: >-
      getStates(includeDisabled?: boolean, includeErrors?: boolean,
      includeInstallationIssues?: boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: includeDisabled
          type:
            - boolean
          description: ''
          optional: true
        - id: includeErrors
          type:
            - boolean
          description: ''
          optional: true
        - id: includeInstallationIssues
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getStates(includeDisabled?: boolean, includeErrors?: boolean,
        includeInstallationIssues?: boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Contributions.Contracts.ExtensionState[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.installExtensionByName
    name: >-
      installExtensionByName(publisherName: string, extensionName: string,
      version?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
          optional: true
      content: >-
        function installExtensionByName(publisherName: string, extensionName:
        string, version?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Contributions.Contracts.InstalledExtension>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.queryExtensions
    name: 'queryExtensions(query: InstalledExtensionQuery)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: query
          type:
            - >-
              @vss-web-extension-sdk.VSS.Contributions.Contracts.InstalledExtensionQuery
          description: ''
      content: 'function queryExtensions(query: InstalledExtensionQuery)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Contributions.Contracts.InstalledExtension[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.setDocumentByName
    name: >-
      setDocumentByName(doc: any, publisherName: string, extensionName: string,
      scopeType: string, scopeValue: string, collectionName: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: doc
          type:
            - any
          description: ''
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: scopeType
          type:
            - string
          description: ''
        - id: scopeValue
          type:
            - string
          description: ''
        - id: collectionName
          type:
            - string
          description: ''
      content: >-
        function setDocumentByName(doc: any, publisherName: string,
        extensionName: string, scopeType: string, scopeValue: string,
        collectionName: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<any>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.uninstallExtensionByName
    name: >-
      uninstallExtensionByName(publisherName: string, extensionName: string,
      reason?: string, reasonCode?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: reason
          type:
            - string
          description: ''
          optional: true
        - id: reasonCode
          type:
            - string
          description: ''
          optional: true
      content: >-
        function uninstallExtensionByName(publisherName: string, extensionName:
        string, reason?: string, reasonCode?: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods2_1To4.updateDocumentByName
    name: >-
      updateDocumentByName(doc: any, publisherName: string, extensionName:
      string, scopeType: string, scopeValue: string, collectionName: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: doc
          type:
            - any
          description: ''
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: scopeType
          type:
            - string
          description: ''
        - id: scopeValue
          type:
            - string
          description: ''
        - id: collectionName
          type:
            - string
          description: ''
      content: >-
        function updateDocumentByName(doc: any, publisherName: string,
        extensionName: string, scopeType: string, scopeValue: string,
        collectionName: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<any>'
    type: method
