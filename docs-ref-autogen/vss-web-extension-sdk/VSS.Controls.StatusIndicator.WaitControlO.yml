### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO
    name: WaitControlO
    fullName: WaitControlO<TOptions>
    children:
      - >-
        vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.cancelWait
      - >-
        vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.DefaultShowDelay
      - vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.endWait
      - >-
        vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.getWaitMessageFormatString
      - >-
        vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.initialize
      - >-
        vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.initializeOptions
      - >-
        vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.isCancelled
      - >-
        vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.MinLifeTime
      - >-
        vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.setMessage
      - >-
        vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.startWait
      - >-
        vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.Controls.Control<TOptions>'
    source:
      path: vss.d.ts
      startLine: 16661
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/StatusIndicator
  - uid: vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.cancelWait
    name: cancelWait
    children: []
    langs:
      - typeScript
    summary: Cancels waiting by removing message box and overlay.
    syntax:
      content: function cancelWait()
      parameters: []
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.DefaultShowDelay
    name: DefaultShowDelay
    fullName: DefaultShowDelay
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static number DefaultShowDelay
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.endWait
    name: endWait
    children: []
    langs:
      - typeScript
    summary: Ends waiting by removing message box and overlay.
    syntax:
      content: function endWait()
      parameters: []
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.getWaitMessageFormatString
    name: getWaitMessageFormatString
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getWaitMessageFormatString()
      parameters: []
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.initialize
    name: initialize
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function initialize()
      parameters: []
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.initializeOptions
    name: initializeOptions
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function initializeOptions(options: TOptions)'
      parameters:
        - id: options
          type:
            - TOptions
          description: ''
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.isCancelled
    name: isCancelled
    children: []
    langs:
      - typeScript
    summary: Indicates whether the operation is cancelled or not.
    syntax:
      content: function isCancelled()
      parameters: []
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.MinLifeTime
    name: MinLifeTime
    fullName: MinLifeTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static number MinLifeTime
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.setMessage
    name: setMessage
    children: []
    langs:
      - typeScript
    summary: Sets a new message for the displayed message box.
    syntax:
      content: 'function setMessage(message: string)'
      parameters:
        - id: message
          type:
            - string
          description: Message to be displayed.
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.startWait
    name: startWait
    children: []
    langs:
      - typeScript
    summary: >-
      Starts waiting by displaying message box and overlay in the target
      element.
    syntax:
      content: 'function startWait(cancellable?: Cancelable)'
      parameters:
        - id: cancellable
          type:
            - '@vss-web-extension-sdk.VSS.Utils.Core.Cancelable'
          description: ''
          optional: true
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.StatusIndicator.WaitControlO.constructor
    name: WaitControlO
    children: []
    langs:
      - typeScript
    summary: Constructs a WaitControl object.
    syntax:
      content: 'new WaitControlO(options?: TOptions)'
      parameters:
        - id: options
          type:
            - TOptions
          description: >
            The options to initialize the control. It has the following
            properties:
              {
                  image: hostConfig.getResourcesFile('big-progress.gif'),   // optional
                  message: "Please wait...",                                // optional
                  target: $('.feedbackrequest-form-container')              // optional
                  cancellable: true                                         // optional
                  cancelCallback: function() { // do something }            // optional and only effective when cancellable is true
              }
          optional: true
    type: constructor
