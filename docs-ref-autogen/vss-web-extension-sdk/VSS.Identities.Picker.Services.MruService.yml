### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Identities.Picker.Services.MruService
    name: MruService
    fullName: MruService
    children:
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Services.MruService.addMruIdentities
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Services.MruService.DEFAULT_FEATURE_ID
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Services.MruService.DEFAULT_IDENTITY_ID
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Services.MruService.getMruIdentities
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Services.MruService.removeMruIdentities
    langs:
      - typeScript
    type: class
    summary: >-
      This client service is meant to be used only by the framework identity
      picker controls and should not be used elsewhere.
    extends:
      name: '@vss-web-extension-sdk.VSS.Service.VssService'
    source:
      path: vss.d.ts
      startLine: 26627
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Identities/Picker/Services
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Services.MruService.addMruIdentities
    name: addMruIdentities
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addMruIdentities(objectIds: string[], operationScope:
        IOperationScope, identityId?: string, featureId?: string, options?:
        IMruServiceOptions, extensionOptions?: IIdentityPickerExtensionOptions)
      parameters:
        - id: objectIds
          type:
            - 'string[]'
          description: ''
        - id: operationScope
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IOperationScope
          description: ''
        - id: identityId
          type:
            - string
          description: ''
          optional: true
        - id: featureId
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IMruServiceOptions
          description: ''
          optional: true
        - id: extensionOptions
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityPickerExtensionOptions
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<boolean>'
    module: VSS/Identities/Picker/Services
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Services.MruService.DEFAULT_FEATURE_ID
    name: DEFAULT_FEATURE_ID
    fullName: DEFAULT_FEATURE_ID
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string DEFAULT_FEATURE_ID
      return:
        type:
          - string
    module: VSS/Identities/Picker/Services
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Services.MruService.DEFAULT_IDENTITY_ID
    name: DEFAULT_IDENTITY_ID
    fullName: DEFAULT_IDENTITY_ID
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string DEFAULT_IDENTITY_ID
      return:
        type:
          - string
    module: VSS/Identities/Picker/Services
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Services.MruService.getMruIdentities
    name: getMruIdentities
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getMruIdentities(operationScope: IOperationScope, identityId?:
        string, featureId?: string, options?: IMruServiceOptions,
        extensionOptions?: IIdentityPickerExtensionOptions)
      parameters:
        - id: operationScope
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IOperationScope
          description: ''
        - id: identityId
          type:
            - string
          description: ''
          optional: true
        - id: featureId
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IMruServiceOptions
          description: ''
          optional: true
        - id: extensionOptions
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityPickerExtensionOptions
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Picker.RestClient.IEntity[]>
    module: VSS/Identities/Picker/Services
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Services.MruService.removeMruIdentities
    name: removeMruIdentities
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function removeMruIdentities(objectIds: string[], operationScope:
        IOperationScope, identityId?: string, featureId?: string, options?:
        IMruServiceOptions, extensionOptions?: IIdentityPickerExtensionOptions)
      parameters:
        - id: objectIds
          type:
            - 'string[]'
          description: ''
        - id: operationScope
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IOperationScope
          description: ''
        - id: identityId
          type:
            - string
          description: ''
          optional: true
        - id: featureId
          type:
            - string
          description: ''
          optional: true
        - id: options
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IMruServiceOptions
          description: ''
          optional: true
        - id: extensionOptions
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityPickerExtensionOptions
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<boolean>'
    module: VSS/Identities/Picker/Services
