### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup
    name: GraphGroup
    fullName: GraphGroup
    children:
      - vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.description
      - vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.isCrossProject
      - vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.isGlobalScope
      - vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.isRestrictedVisible
      - vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.localScopeId
      - vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.scopeId
      - vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.scopeName
      - vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.scopeType
      - vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.securingHostId
      - vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.specialType
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.Graph.Contracts.GraphMember'
    source:
      path: vss.d.ts
      startLine: 24102
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Graph/Contracts
  - uid: vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.description
    name: description
    fullName: description
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A short phrase to help human readers disambiguate groups with similar
      names
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.isCrossProject
    name: isCrossProject
    fullName: isCrossProject
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.isGlobalScope
    name: isGlobalScope
    fullName: isGlobalScope
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.isRestrictedVisible
    name: isRestrictedVisible
    fullName: isRestrictedVisible
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.localScopeId
    name: localScopeId
    fullName: localScopeId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.scopeId
    name: scopeId
    fullName: scopeId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.scopeName
    name: scopeName
    fullName: scopeName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.scopeType
    name: scopeType
    fullName: scopeType
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.securingHostId
    name: securingHostId
    fullName: securingHostId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Graph.Contracts.GraphGroup.specialType
    name: specialType
    fullName: specialType
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
