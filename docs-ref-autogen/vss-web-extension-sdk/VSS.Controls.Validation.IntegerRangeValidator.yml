### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Validation.IntegerRangeValidator
    name: IntegerRangeValidator
    fullName: IntegerRangeValidator<TOptions>
    children:
      - >-
        vss-web-extension-sdk.VSS.Controls.Validation.IntegerRangeValidator.getMessage
      - >-
        vss-web-extension-sdk.VSS.Controls.Validation.IntegerRangeValidator.constructor
      - >-
        vss-web-extension-sdk.VSS.Controls.Validation.IntegerRangeValidator.isValid
      - >-
        vss-web-extension-sdk.VSS.Controls.Validation.IntegerRangeValidator.isWithinBounds
      - >-
        vss-web-extension-sdk.VSS.Controls.Validation.IntegerRangeValidator.optionsPrefix
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.Controls.Validation.BaseValidator<TOptions>'
    source:
      path: vss.d.ts
      startLine: 17975
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/Validation
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Validation.IntegerRangeValidator.getMessage
    name: getMessage
    children: []
    langs:
      - typeScript
    summary: 'OVERRIDE: Gets the error message for display purposes'
    syntax:
      content: function getMessage()
      parameters: []
      return:
        type:
          - string
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Validation.IntegerRangeValidator.constructor
    name: IntegerRangeValidator
    children: []
    langs:
      - typeScript
    summary: >-
      A validator that ensures only whole integers between an upper and lower
      limit are entered.
    syntax:
      content: 'new IntegerRangeValidator(options?: TOptions)'
      parameters:
        - id: options
          type:
            - TOptions
          description: |+
            Options to apply to the validator:
                minValue: The minimum value (inclusive)
                maxValue: The maximum value (inclusive)

          optional: true
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Validation.IntegerRangeValidator.isValid
    name: isValid
    children: []
    langs:
      - typeScript
    summary: >-
      OVERRIDE: Determines whether the input control bound to this validator
      contains valid input
    syntax:
      content: function isValid()
      parameters: []
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Validation.IntegerRangeValidator.isWithinBounds
    name: isWithinBounds
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function isWithinBounds(value: string, max: number, min: number)'
      parameters:
        - id: value
          type:
            - string
          description: ''
        - id: max
          type:
            - number
          description: ''
        - id: min
          type:
            - number
          description: ''
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Validation.IntegerRangeValidator.optionsPrefix
    name: optionsPrefix
    fullName: optionsPrefix
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string optionsPrefix
      return:
        type:
          - string
