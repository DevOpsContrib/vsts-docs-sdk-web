### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4
    name: CommonMethods3To4
    fullName: CommonMethods3To4
    children:
      - vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.constructor
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.createFolder
      - vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.deleteBuild
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.deleteFolder
      - vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getArtifact
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getArtifactContentZip
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getArtifacts
      - vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuild
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildChanges
      - vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildLog
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildLogLines
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildLogs
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildLogsZip
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildReport
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildReportHtmlContent
      - vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuilds
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildWorkItemsRefs
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildWorkItemsRefsFromCommits
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getDefinitions
      - vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getFolders
      - vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.queueBuild
      - vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.updateBuild
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.updateBuilds
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.updateFolder
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods2_1To4'
    source:
      path: tfs.d.ts
      startLine: 2360
      remote:
        path: typings\tfs.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: TFS/Build/RestClient
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.constructor
    name: >-
      CommonMethods3To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new CommonMethods3To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.createFolder
    name: 'createFolder(folder: Folder, project: string, path: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Creates a new folder'
    syntax:
      parameters:
        - id: folder
          type:
            - '@vss-web-extension-sdk.TFS.Build.Contracts.Folder'
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      content: 'function createFolder(folder: Folder, project: string, path: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Folder>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.deleteBuild
    name: 'deleteBuild(buildId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: Deletes a build
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function deleteBuild(buildId: number, project?: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.deleteFolder
    name: 'deleteFolder(project: string, path: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Deletes a definition folder for given folder name and path
      and all it's existing definitions and it's corresponding builds
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      content: 'function deleteFolder(project: string, path: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getArtifact
    name: 'getArtifact(buildId: number, artifactName: string, project?: string)'
    children: []
    langs:
      - typeScript
    summary: Gets a specific artifact for a build
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: artifactName
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getArtifact(buildId: number, artifactName: string, project?:
        string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildArtifact>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getArtifactContentZip
    name: >-
      getArtifactContentZip(buildId: number, artifactName: string, project?:
      string)
    children: []
    langs:
      - typeScript
    summary: Gets a specific artifact for a build
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: artifactName
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getArtifactContentZip(buildId: number, artifactName: string,
        project?: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<ArrayBuffer>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getArtifacts
    name: 'getArtifacts(buildId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: Gets all artifacts for a build
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function getArtifacts(buildId: number, project?: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildArtifact[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuild
    name: 'getBuild(buildId: number, project?: string, propertyFilters?: string)'
    children: []
    langs:
      - typeScript
    summary: Gets a build
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: propertyFilters
          type:
            - string
          description: A comma-delimited list of properties to include in the results
          optional: true
      content: >-
        function getBuild(buildId: number, project?: string, propertyFilters?:
        string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Build>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildChanges
    name: >-
      getBuildChanges(project: string, buildId: number, continuationToken?:
      string, top?: number, includeSourceChange?: boolean)
    children: []
    langs:
      - typeScript
    summary: Gets the changes associated with a build
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: The maximum number of changes to return
          optional: true
        - id: includeSourceChange
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getBuildChanges(project: string, buildId: number,
        continuationToken?: string, top?: number, includeSourceChange?: boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Change[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildLog
    name: >-
      getBuildLog(project: string, buildId: number, logId: number, startLine?:
      number, endLine?: number)
    children: []
    langs:
      - typeScript
    summary: Gets a log
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: logId
          type:
            - number
          description: ''
        - id: startLine
          type:
            - number
          description: ''
          optional: true
        - id: endLine
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getBuildLog(project: string, buildId: number, logId: number,
        startLine?: number, endLine?: number)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<string>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildLogLines
    name: >-
      getBuildLogLines(project: string, buildId: number, logId: number,
      startLine?: number, endLine?: number)
    children: []
    langs:
      - typeScript
    summary: Gets a log
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: logId
          type:
            - number
          description: ''
        - id: startLine
          type:
            - number
          description: ''
          optional: true
        - id: endLine
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getBuildLogLines(project: string, buildId: number, logId:
        number, startLine?: number, endLine?: number)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<string[]>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildLogs
    name: 'getBuildLogs(project: string, buildId: number)'
    children: []
    langs:
      - typeScript
    summary: Gets logs for a build
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
      content: 'function getBuildLogs(project: string, buildId: number)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildLog[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildLogsZip
    name: 'getBuildLogsZip(project: string, buildId: number)'
    children: []
    langs:
      - typeScript
    summary: Gets logs for a build
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
      content: 'function getBuildLogsZip(project: string, buildId: number)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<ArrayBuffer>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildReport
    name: 'getBuildReport(project: string, buildId: number, type?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets report for a build'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: type
          type:
            - string
          description: ''
          optional: true
      content: 'function getBuildReport(project: string, buildId: number, type?: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildReportMetadata>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildReportHtmlContent
    name: 'getBuildReportHtmlContent(project: string, buildId: number, type?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets report for a build'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: type
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getBuildReportHtmlContent(project: string, buildId: number,
        type?: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<any>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuilds
    name: >-
      getBuilds(project?: string, definitions?: number[], queues?: number[],
      buildNumber?: string, minFinishTime?: Date, maxFinishTime?: Date,
      requestedFor?: string, reasonFilter?: BuildReason, statusFilter?:
      BuildStatus, resultFilter?: BuildResult, tagFilters?: string[],
      properties?: string[], top?: number, continuationToken?: string,
      maxBuildsPerDefinition?: number, deletedFilter?: QueryDeletedOption,
      queryOrder?: BuildQueryOrder, branchName?: string, buildIds?: number[],
      repositoryId?: string, repositoryType?: string)
    children: []
    langs:
      - typeScript
    summary: Gets builds
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: definitions
          type:
            - 'number[]'
          description: A comma-delimited list of definition ids
          optional: true
        - id: queues
          type:
            - 'number[]'
          description: A comma-delimited list of queue ids
          optional: true
        - id: buildNumber
          type:
            - string
          description: ''
          optional: true
        - id: minFinishTime
          type:
            - Date
          description: ''
          optional: true
        - id: maxFinishTime
          type:
            - Date
          description: ''
          optional: true
        - id: requestedFor
          type:
            - string
          description: ''
          optional: true
        - id: reasonFilter
          type:
            - BuildReason
          description: ''
          optional: true
        - id: statusFilter
          type:
            - BuildStatus
          description: ''
          optional: true
        - id: resultFilter
          type:
            - BuildResult
          description: ''
          optional: true
        - id: tagFilters
          type:
            - 'string[]'
          description: A comma-delimited list of tags
          optional: true
        - id: properties
          type:
            - 'string[]'
          description: A comma-delimited list of properties to include in the results
          optional: true
        - id: top
          type:
            - number
          description: The maximum number of builds to retrieve
          optional: true
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
        - id: maxBuildsPerDefinition
          type:
            - number
          description: ''
          optional: true
        - id: deletedFilter
          type:
            - QueryDeletedOption
          description: ''
          optional: true
        - id: queryOrder
          type:
            - BuildQueryOrder
          description: ''
          optional: true
        - id: branchName
          type:
            - string
          description: ''
          optional: true
        - id: buildIds
          type:
            - 'number[]'
          description: ''
          optional: true
        - id: repositoryId
          type:
            - string
          description: ''
          optional: true
        - id: repositoryType
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getBuilds(project?: string, definitions?: number[], queues?:
        number[], buildNumber?: string, minFinishTime?: Date, maxFinishTime?:
        Date, requestedFor?: string, reasonFilter?: BuildReason, statusFilter?:
        BuildStatus, resultFilter?: BuildResult, tagFilters?: string[],
        properties?: string[], top?: number, continuationToken?: string,
        maxBuildsPerDefinition?: number, deletedFilter?: QueryDeletedOption,
        queryOrder?: BuildQueryOrder, branchName?: string, buildIds?: number[],
        repositoryId?: string, repositoryType?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Build[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildWorkItemsRefs
    name: 'getBuildWorkItemsRefs(project: string, buildId: number, top?: number)'
    children: []
    langs:
      - typeScript
    summary: Gets the work item ids associated with a build
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: top
          type:
            - number
          description: The maximum number of workitems to return
          optional: true
      content: >-
        function getBuildWorkItemsRefs(project: string, buildId: number, top?:
        number)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.WebApi.Contracts.ResourceRef[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getBuildWorkItemsRefsFromCommits
    name: >-
      getBuildWorkItemsRefsFromCommits(commitIds: string[], project: string,
      buildId: number, top?: number)
    children: []
    langs:
      - typeScript
    summary: Gets the work item ids associated with build commits
    syntax:
      parameters:
        - id: commitIds
          type:
            - 'string[]'
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: top
          type:
            - number
          description: >-
            The maximum number of workitems to return, also number of commits to
            consider if commitids are not sent
          optional: true
      content: >-
        function getBuildWorkItemsRefsFromCommits(commitIds: string[], project:
        string, buildId: number, top?: number)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.WebApi.Contracts.ResourceRef[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getDefinitions
    name: >-
      getDefinitions(project?: string, name?: string, repositoryId?: string,
      repositoryType?: string, queryOrder?: DefinitionQueryOrder, top?: number,
      continuationToken?: string, minMetricsTime?: Date, definitionIds?:
      number[], path?: string, builtAfter?: Date, notBuiltAfter?: Date,
      includeAllProperties?: boolean, includeLatestBuilds?: boolean,
      taskIdFilter?: string)
    children: []
    langs:
      - typeScript
    summary: 'Gets definitions, optionally filtered by name'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: name
          type:
            - string
          description: ''
          optional: true
        - id: repositoryId
          type:
            - string
          description: ''
          optional: true
        - id: repositoryType
          type:
            - string
          description: ''
          optional: true
        - id: queryOrder
          type:
            - DefinitionQueryOrder
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
        - id: minMetricsTime
          type:
            - Date
          description: ''
          optional: true
        - id: definitionIds
          type:
            - 'number[]'
          description: ''
          optional: true
        - id: path
          type:
            - string
          description: ''
          optional: true
        - id: builtAfter
          type:
            - Date
          description: ''
          optional: true
        - id: notBuiltAfter
          type:
            - Date
          description: ''
          optional: true
        - id: includeAllProperties
          type:
            - boolean
          description: ''
          optional: true
        - id: includeLatestBuilds
          type:
            - boolean
          description: ''
          optional: true
        - id: taskIdFilter
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getDefinitions(project?: string, name?: string, repositoryId?:
        string, repositoryType?: string, queryOrder?: DefinitionQueryOrder,
        top?: number, continuationToken?: string, minMetricsTime?: Date,
        definitionIds?: number[], path?: string, builtAfter?: Date,
        notBuiltAfter?: Date, includeAllProperties?: boolean,
        includeLatestBuilds?: boolean, taskIdFilter?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildDefinitionReference[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.getFolders
    name: 'getFolders(project: string, path?: string, queryOrder?: FolderQueryOrder)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets folders'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
          optional: true
        - id: queryOrder
          type:
            - FolderQueryOrder
          description: ''
          optional: true
      content: >-
        function getFolders(project: string, path?: string, queryOrder?:
        FolderQueryOrder)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Folder[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.queueBuild
    name: >-
      queueBuild(build: Build, project?: string, ignoreWarnings?: boolean,
      checkInTicket?: string)
    children: []
    langs:
      - typeScript
    summary: Queues a build
    syntax:
      parameters:
        - id: build
          type:
            - '@vss-web-extension-sdk.TFS.Build.Contracts.Build'
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: ignoreWarnings
          type:
            - boolean
          description: ''
          optional: true
        - id: checkInTicket
          type:
            - string
          description: ''
          optional: true
      content: >-
        function queueBuild(build: Build, project?: string, ignoreWarnings?:
        boolean, checkInTicket?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Build>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.updateBuild
    name: 'updateBuild(build: Build, buildId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: Updates a build
    syntax:
      parameters:
        - id: build
          type:
            - '@vss-web-extension-sdk.TFS.Build.Contracts.Build'
          description: ''
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function updateBuild(build: Build, buildId: number, project?: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Build>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.updateBuilds
    name: 'updateBuilds(builds: Build[], project?: string)'
    children: []
    langs:
      - typeScript
    summary: Update a batch of builds
    syntax:
      parameters:
        - id: builds
          type:
            - '@vss-web-extension-sdk.TFS.Build.Contracts.Build[]'
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function updateBuilds(builds: Build[], project?: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Build[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods3To4.updateFolder
    name: 'updateFolder(folder: Folder, project: string, path: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Updates an existing folder at given  existing path'
    syntax:
      parameters:
        - id: folder
          type:
            - '@vss-web-extension-sdk.TFS.Build.Contracts.Folder'
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      content: 'function updateFolder(folder: Folder, project: string, path: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Folder>
    type: method
