### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Control
    name: Control
    fullName: Control<TOptions>
    children:
      - vss-web-extension-sdk.VSS.Controls.Control.constructor
      - vss-web-extension-sdk.VSS.Controls.Control.create
      - vss-web-extension-sdk.VSS.Controls.Control.createIn
      - vss-web-extension-sdk.VSS.Controls.Control.createIn
      - vss-web-extension-sdk.VSS.Controls.Control.dispose
      - vss-web-extension-sdk.VSS.Controls.Control.enableElement
      - vss-web-extension-sdk.VSS.Controls.Control.focus
      - vss-web-extension-sdk.VSS.Controls.Control.hideBusyOverlay
      - vss-web-extension-sdk.VSS.Controls.Control.hideElement
      - vss-web-extension-sdk.VSS.Controls.Control.initializeOptions
      - vss-web-extension-sdk.VSS.Controls.Control.showBusyOverlay
      - vss-web-extension-sdk.VSS.Controls.Control.showElement
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.Controls.Enhancement<TOptions>'
    source:
      path: vss.d.ts
      startLine: 9333
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls
  - uid: vss-web-extension-sdk.VSS.Controls.Control.constructor
    name: Control
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new Control(options?: TOptions)'
      parameters:
        - id: options
          type:
            - TOptions
          description: |+

          optional: true
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Controls.Control.create
    name: create
    children: []
    langs:
      - typeScript
    summary: Creates a the control specified by TControl in the given container.
    syntax:
      content: >-
        static function create<TControl>(controlType: function, container:
        JQuery, controlOptions: TOptions, enhancementOptions?:
        EnhancementOptions)
      parameters:
        - id: controlType
          type:
            - function
          description: ''
        - id: container
          type:
            - JQuery
          description: ''
        - id: controlOptions
          type:
            - TOptions
          description: ''
        - id: enhancementOptions
          type:
            - '@vss-web-extension-sdk.VSS.Controls.EnhancementOptions'
          description: ''
          optional: true
      return:
        type:
          - TControl
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Control.createIn
    name: createIn
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        static function createIn<TOptions>(type?: any, container?: any,
        options?: TOptions, koCompatable?: boolean)
      parameters:
        - id: type
          type:
            - any
          description: ''
          optional: true
        - id: container
          type:
            - any
          description: ''
          optional: true
        - id: options
          type:
            - TOptions
          description: ''
          optional: true
        - id: koCompatable
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.Control<any>'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Control.createIn
    name: createIn
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createIn(container: JQuery)'
      parameters:
        - id: container
          type:
            - JQuery
          description: ''
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Control.dispose
    name: dispose
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function dispose()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Control.enableElement
    name: enableElement
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function enableElement(enabled: any)'
      parameters:
        - id: enabled
          type:
            - any
          description: ''
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Control.focus
    name: focus
    children: []
    langs:
      - typeScript
    summary: Set Focus to the control
    syntax:
      content: function focus()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Control.hideBusyOverlay
    name: hideBusyOverlay
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function hideBusyOverlay()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Control.hideElement
    name: hideElement
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function hideElement()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Control.initializeOptions
    name: initializeOptions
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function initializeOptions(options?: TOptions)'
      parameters:
        - id: options
          type:
            - TOptions
          description: |+

          optional: true
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Control.showBusyOverlay
    name: showBusyOverlay
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function showBusyOverlay()
      parameters: []
      return:
        type:
          - JQuery
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Control.showElement
    name: showElement
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function showElement()
      parameters: []
    type: method
