### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTable
    name: RunningDocumentsTable
    fullName: RunningDocumentsTable
    children:
      - vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTable.add
      - >-
        vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTable.beginSave
      - >-
        vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTable.getUnsavedItemsMessage
      - >-
        vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTable.isModified
      - vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTable.remove
      - >-
        vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTable.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    source:
      path: vss.d.ts
      startLine: 19102
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Events/Document
  - uid: vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTable.add
    name: 'add(moniker: string, document: RunningDocument)'
    children: []
    langs:
      - typeScript
    summary: |-
      Add specified document to the running document table
        The document must have a method named isDirty that returns boolean
    syntax:
      parameters:
        - id: moniker
          type:
            - string
          description: Name for this document type
        - id: document
          type:
            - '@vss-web-extension-sdk.VSS.Events.Document.RunningDocument'
          description: Object that will be called to determine state (e.g. dirty//modified)
      content: 'function add(moniker: string, document: RunningDocument)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTableEntry
    type: method
  - uid: vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTable.beginSave
    name: 'beginSave(callback: IResultCallback, errorCallback?: IErrorCallback)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: callback
          type:
            - '@vss-web-extension-sdk.IResultCallback'
          description: ''
        - id: errorCallback
          type:
            - '@vss-web-extension-sdk.IErrorCallback'
          description: ''
          optional: true
      content: >-
        function beginSave(callback: IResultCallback, errorCallback?:
        IErrorCallback)
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTable.getUnsavedItemsMessage
    name: getUnsavedItemsMessage()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getUnsavedItemsMessage()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTable.isModified
    name: 'isModified(moniker?: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Check if the specified document is modified.  If specified moniker is null
      or undefined
        will return true if any currently opened documents are modified
    syntax:
      parameters:
        - id: moniker
          type:
            - string
          description: Name for this document type
          optional: true
      content: 'function isModified(moniker?: string)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTable.remove
    name: 'remove(entry: RunningDocumentsTableEntry)'
    children: []
    langs:
      - typeScript
    summary: Remove an entry from the running document table
    syntax:
      parameters:
        - id: entry
          type:
            - >-
              @vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTableEntry
          description: >
            The handle to the entry that will be removed. The handle is returned
            from the add function
      content: 'function remove(entry: RunningDocumentsTableEntry)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Events.Document.RunningDocumentsTable.constructor
    name: RunningDocumentsTable()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: new RunningDocumentsTable()
    type: constructor
