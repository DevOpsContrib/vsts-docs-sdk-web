### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.net.Socket
    name: Socket
    fullName: Socket
    children:
      - vss-web-extension-sdk.net.Socket.addListener
      - vss-web-extension-sdk.net.Socket.address
      - vss-web-extension-sdk.net.Socket.bufferSize
      - vss-web-extension-sdk.net.Socket.bytesRead
      - vss-web-extension-sdk.net.Socket.bytesWritten
      - vss-web-extension-sdk.net.Socket.connect
      - vss-web-extension-sdk.net.Socket.connecting
      - vss-web-extension-sdk.net.Socket.destroy
      - vss-web-extension-sdk.net.Socket.destroyed
      - vss-web-extension-sdk.net.Socket.emit
      - vss-web-extension-sdk.net.Socket.end
      - vss-web-extension-sdk.net.Socket.localAddress
      - vss-web-extension-sdk.net.Socket.localPort
      - vss-web-extension-sdk.net.Socket.on
      - vss-web-extension-sdk.net.Socket.once
      - vss-web-extension-sdk.net.Socket.pause
      - vss-web-extension-sdk.net.Socket.prependListener
      - vss-web-extension-sdk.net.Socket.prependOnceListener
      - vss-web-extension-sdk.net.Socket.ref
      - vss-web-extension-sdk.net.Socket.remoteAddress
      - vss-web-extension-sdk.net.Socket.remoteFamily
      - vss-web-extension-sdk.net.Socket.remotePort
      - vss-web-extension-sdk.net.Socket.resume
      - vss-web-extension-sdk.net.Socket.setEncoding
      - vss-web-extension-sdk.net.Socket.setKeepAlive
      - vss-web-extension-sdk.net.Socket.setNoDelay
      - vss-web-extension-sdk.net.Socket.setTimeout
      - vss-web-extension-sdk.net.Socket.unref
      - vss-web-extension-sdk.net.Socket.write
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      - '@vss-web-extension-sdk.stream.internal.Duplex'
    package: vss-web-extension-sdk
    module: net
  - uid: vss-web-extension-sdk.net.Socket.addListener
    name: 'addListener(event: string, listener: function)'
    children: []
    langs:
      - typeScript
    summary: |-
      events.EventEmitter
        1. close
        2. connect
        3. data
        4. drain
        5. end
        6. error
        7. lookup
        8. timeout
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - function
          description: ''
      content: 'function addListener(event: string, listener: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.net.Socket.address
    name: address()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function address()
    type: method
  - uid: vss-web-extension-sdk.net.Socket.bufferSize
    name: bufferSize
    fullName: bufferSize
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.net.Socket.bytesRead
    name: bytesRead
    fullName: bytesRead
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.net.Socket.bytesWritten
    name: bytesWritten
    fullName: bytesWritten
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.net.Socket.connect
    name: 'connect(port: number, host?: string, connectionListener?: Function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: port
          type:
            - number
          description: ''
        - id: host
          type:
            - string
          description: ''
          optional: true
        - id: connectionListener
          type:
            - Function
          description: ''
          optional: true
      content: >-
        function connect(port: number, host?: string, connectionListener?:
        Function)
    type: method
  - uid: vss-web-extension-sdk.net.Socket.connecting
    name: connecting
    fullName: connecting
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.net.Socket.destroy
    name: 'destroy(err?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: err
          type:
            - any
          description: ''
          optional: true
      content: 'function destroy(err?: any)'
    type: method
  - uid: vss-web-extension-sdk.net.Socket.destroyed
    name: destroyed
    fullName: destroyed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.net.Socket.emit
    name: 'emit(event: string, args: any[])'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: args
          type:
            - 'any[]'
          description: ''
      content: 'function emit(event: string, args: any[])'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.net.Socket.end
    name: end()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function end()
    type: method
  - uid: vss-web-extension-sdk.net.Socket.localAddress
    name: localAddress
    fullName: localAddress
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.net.Socket.localPort
    name: localPort
    fullName: localPort
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.net.Socket.on
    name: 'on(event: string, listener: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - function
          description: ''
      content: 'function on(event: string, listener: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.net.Socket.once
    name: 'once(event: string, listener: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - function
          description: ''
      content: 'function once(event: string, listener: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.net.Socket.pause
    name: pause()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function pause()
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.net.Socket.prependListener
    name: 'prependListener(event: string, listener: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - function
          description: ''
      content: 'function prependListener(event: string, listener: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.net.Socket.prependOnceListener
    name: 'prependOnceListener(event: string, listener: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - function
          description: ''
      content: 'function prependOnceListener(event: string, listener: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.net.Socket.ref
    name: ref()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function ref()
    type: method
  - uid: vss-web-extension-sdk.net.Socket.remoteAddress
    name: remoteAddress
    fullName: remoteAddress
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.net.Socket.remoteFamily
    name: remoteFamily
    fullName: remoteFamily
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.net.Socket.remotePort
    name: remotePort
    fullName: remotePort
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.net.Socket.resume
    name: resume()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function resume()
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.net.Socket.setEncoding
    name: 'setEncoding(encoding?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: encoding
          type:
            - string
          description: ''
          optional: true
      content: 'function setEncoding(encoding?: string)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.net.Socket.setKeepAlive
    name: 'setKeepAlive(enable?: boolean, initialDelay?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: enable
          type:
            - boolean
          description: ''
          optional: true
        - id: initialDelay
          type:
            - number
          description: ''
          optional: true
      content: 'function setKeepAlive(enable?: boolean, initialDelay?: number)'
    type: method
  - uid: vss-web-extension-sdk.net.Socket.setNoDelay
    name: 'setNoDelay(noDelay?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: noDelay
          type:
            - boolean
          description: ''
          optional: true
      content: 'function setNoDelay(noDelay?: boolean)'
    type: method
  - uid: vss-web-extension-sdk.net.Socket.setTimeout
    name: 'setTimeout(timeout: number, callback?: Function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: timeout
          type:
            - number
          description: ''
        - id: callback
          type:
            - Function
          description: ''
          optional: true
      content: 'function setTimeout(timeout: number, callback?: Function)'
    type: method
  - uid: vss-web-extension-sdk.net.Socket.unref
    name: unref()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function unref()
    type: method
  - uid: vss-web-extension-sdk.net.Socket.write
    name: 'write(buffer: Buffer)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: buffer
          type:
            - '@vss-web-extension-sdk.Buffer'
          description: ''
      content: 'function write(buffer: Buffer)'
      return:
        type:
          - boolean
    type: method
