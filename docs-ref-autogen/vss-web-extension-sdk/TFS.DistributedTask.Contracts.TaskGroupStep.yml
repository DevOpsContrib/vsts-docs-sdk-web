### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep
    name: TaskGroupStep
    fullName: TaskGroupStep
    children:
      - >-
        vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.alwaysRun
      - >-
        vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.condition
      - >-
        vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.continueOnError
      - >-
        vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.displayName
      - >-
        vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.enabled
      - vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.inputs
      - vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.task
      - >-
        vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.timeoutInMinutes
    langs:
      - typeScript
    type: interface
    summary: ''
    package: vss-web-extension-sdk
    module: TFS/DistributedTask/Contracts
  - uid: >-
      vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.alwaysRun
    name: alwaysRun
    fullName: alwaysRun
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Gets or sets as ''true'' to run the task always, ''false'' otherwise.'
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.condition
    name: condition
    fullName: condition
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.continueOnError
    name: continueOnError
    fullName: continueOnError
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Gets or sets as ''true'' to continue on error, ''false'' otherwise.'
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.displayName
    name: displayName
    fullName: displayName
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets or sets the display name.
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.enabled
    name: enabled
    fullName: enabled
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets or sets as task is enabled or not.
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.inputs
    name: inputs
    fullName: inputs
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets or sets dictionary of inputs.
    syntax:
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.task
    name: task
    fullName: task
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets or sets the reference of the task.
    syntax:
      return:
        type:
          - >-
            vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskDefinitionReference
  - uid: >-
      vss-web-extension-sdk.TFS.DistributedTask.Contracts.TaskGroupStep.timeoutInMinutes
    name: timeoutInMinutes
    fullName: timeoutInMinutes
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets or sets the maximum time, in minutes, that a task is allowed to
      execute on agent before being cancelled by server. A zero value indicates
      an infinite timeout.
    syntax:
      return:
        type:
          - number
