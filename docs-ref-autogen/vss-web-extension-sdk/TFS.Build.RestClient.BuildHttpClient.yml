### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient
    name: BuildHttpClient
    fullName: BuildHttpClient
    children:
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.addBuildTag
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.addBuildTags
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.addDefinitionTag
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.addDefinitionTags
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.artifactsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.authTokenManager
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.badgeApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.buildbadgeApiVersion
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.constructor
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.buildsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.changesApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.changesApiVersion_54572c7b
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.controllersApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.createArtifact
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.createDefinition
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.createFolder
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.definitionsApiVersion
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.deleteBuild
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.deleteBuildTag
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.deleteDefinition
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.deleteDefinitionTag
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.deleteFolder
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.deleteTemplate
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.foldersApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.forceOptionsCallForAutoNegotiate
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getArtifact
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getArtifactContentZip
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getArtifacts
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBadge
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuild
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildBadge
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildBadgeData
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildChanges
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildController
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildControllers
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildLog
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildLogLines
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildLogs
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildLogsZip
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildOptionDefinitions
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildProperties
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildReport
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildReportHtmlContent
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuilds
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildSettings
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildTags
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildTimeline
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildWorkItemsRefs
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildWorkItemsRefsFromCommits
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getChangesBetweenBuilds
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getDefinition
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getDefinitionMetrics
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getDefinitionProperties
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getDefinitionRevisions
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getDefinitions
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getDefinitionTags
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getFolders
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getProjectMetrics
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getResourceUsage
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getTags
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getTemplate
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getTemplates
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getWorkItemsBetweenBuilds
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.logsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.metricsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.metricsApiVersion_7433fae7
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.optionsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.propertiesApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.propertiesApiVersion_0a6312e9
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.queueBuild
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.reportApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.resourceUsageApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.revisionsApiVersion
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.saveTemplate
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.serviceInstanceId
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.settingsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.tagsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.tagsApiVersion_6e6114b2
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.tagsApiVersion_cb894432
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.templatesApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.timelineApiVersion
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.updateBuild
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.updateBuildProperties
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.updateBuilds
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.updateBuildSettings
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.updateDefinition
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.updateDefinitionProperties
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.updateFolder
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.workitemsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.workitemsApiVersion_5a21f5d2
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient._beginGetLocation
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient._beginRequest
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient._beginRequestWithAjaxResult
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient._issueAjaxRequest
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient._rootRequestPath
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: TFS/Build/RestClient
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.addBuildTag
    name: 'addBuildTag(project: string, buildId: number, tag: string)'
    children: []
    langs:
      - typeScript
    summary: Adds a tag to a build
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: tag
          type:
            - string
          description: ''
      content: 'function addBuildTag(project: string, buildId: number, tag: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.addBuildTags
    name: 'addBuildTags(tags: function, project: string, buildId: number)'
    children: []
    langs:
      - typeScript
    summary: Adds tag to a build
    syntax:
      parameters:
        - id: tags
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
      content: 'function addBuildTags(tags: function, project: string, buildId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.addDefinitionTag
    name: 'addDefinitionTag(project: string, definitionId: number, tag: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Adds a tag to a definition'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
        - id: tag
          type:
            - string
          description: ''
      content: >-
        function addDefinitionTag(project: string, definitionId: number, tag:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.addDefinitionTags
    name: 'addDefinitionTags(tags: function, project: string, definitionId: number)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Adds multiple tags to a definition'
    syntax:
      parameters:
        - id: tags
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
      content: >-
        function addDefinitionTags(tags: function, project: string,
        definitionId: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.artifactsApiVersion
    name: artifactsApiVersion
    fullName: artifactsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.authTokenManager
    name: authTokenManager
    fullName: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.badgeApiVersion
    name: badgeApiVersion
    fullName: badgeApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.buildbadgeApiVersion
    name: buildbadgeApiVersion
    fullName: buildbadgeApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.constructor
    name: 'BuildHttpClient(rootRequestPath: string, options?: IVssHttpClientOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new BuildHttpClient(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.buildsApiVersion
    name: buildsApiVersion
    fullName: buildsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.changesApiVersion
    name: changesApiVersion
    fullName: changesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.changesApiVersion_54572c7b
    name: changesApiVersion_54572c7b
    fullName: changesApiVersion_54572c7b
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.controllersApiVersion
    name: controllersApiVersion
    fullName: controllersApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.createArtifact
    name: 'createArtifact(artifact: BuildArtifact, buildId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: Associates an artifact with a build
    syntax:
      parameters:
        - id: artifact
          type:
            - vss-web-extension-sdk.TFS.Build.Contracts.BuildArtifact
          description: ''
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function createArtifact(artifact: BuildArtifact, buildId: number,
        project?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.createDefinition
    name: >-
      createDefinition(definition: BuildDefinition, project?: string,
      definitionToCloneId?: number, definitionToCloneRevision?: number)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Creates a new definition'
    syntax:
      parameters:
        - id: definition
          type:
            - vss-web-extension-sdk.TFS.Build.Contracts.BuildDefinition
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: definitionToCloneId
          type:
            - number
          description: ''
          optional: true
        - id: definitionToCloneRevision
          type:
            - number
          description: ''
          optional: true
      content: >-
        function createDefinition(definition: BuildDefinition, project?: string,
        definitionToCloneId?: number, definitionToCloneRevision?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.createFolder
    name: 'createFolder(folder: Folder, project: string, path: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Creates a new folder'
    syntax:
      parameters:
        - id: folder
          type:
            - vss-web-extension-sdk.TFS.Build.Contracts.Folder
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      content: 'function createFolder(folder: Folder, project: string, path: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.definitionsApiVersion
    name: definitionsApiVersion
    fullName: definitionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.deleteBuild
    name: 'deleteBuild(buildId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: Deletes a build
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function deleteBuild(buildId: number, project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.deleteBuildTag
    name: 'deleteBuildTag(project: string, buildId: number, tag: string)'
    children: []
    langs:
      - typeScript
    summary: Deletes a tag from a build
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: tag
          type:
            - string
          description: ''
      content: 'function deleteBuildTag(project: string, buildId: number, tag: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.deleteDefinition
    name: 'deleteDefinition(definitionId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: Deletes a definition and all associated builds
    syntax:
      parameters:
        - id: definitionId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function deleteDefinition(definitionId: number, project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.deleteDefinitionTag
    name: 'deleteDefinitionTag(project: string, definitionId: number, tag: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Deletes a tag from a definition'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
        - id: tag
          type:
            - string
          description: ''
      content: >-
        function deleteDefinitionTag(project: string, definitionId: number, tag:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.deleteFolder
    name: 'deleteFolder(project: string, path: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Deletes a definition folder for given folder name and path
      and all it's existing definitions and it's corresponding builds
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      content: 'function deleteFolder(project: string, path: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.deleteTemplate
    name: 'deleteTemplate(project: string, templateId: string)'
    children: []
    langs:
      - typeScript
    summary: Deletes a definition template
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: ''
      content: 'function deleteTemplate(project: string, templateId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.foldersApiVersion
    name: foldersApiVersion
    fullName: foldersApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    fullName: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getArtifact
    name: 'getArtifact(buildId: number, artifactName: string, project?: string)'
    children: []
    langs:
      - typeScript
    summary: Gets a specific artifact for a build
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: artifactName
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getArtifact(buildId: number, artifactName: string, project?:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getArtifactContentZip
    name: >-
      getArtifactContentZip(buildId: number, artifactName: string, project?:
      string)
    children: []
    langs:
      - typeScript
    summary: Gets a specific artifact for a build
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: artifactName
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: >-
        function getArtifactContentZip(buildId: number, artifactName: string,
        project?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getArtifacts
    name: 'getArtifacts(buildId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: Gets all artifacts for a build
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function getArtifacts(buildId: number, project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBadge
    name: 'getBadge(project: string, definitionId: number, branchName?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: ''
        - id: definitionId
          type:
            - number
          description: ''
        - id: branchName
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getBadge(project: string, definitionId: number, branchName?:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuild
    name: 'getBuild(buildId: number, project?: string, propertyFilters?: string)'
    children: []
    langs:
      - typeScript
    summary: Gets a build
    syntax:
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: propertyFilters
          type:
            - string
          description: A comma-delimited list of properties to include in the results
          optional: true
      content: >-
        function getBuild(buildId: number, project?: string, propertyFilters?:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildBadge
    name: >-
      getBuildBadge(project: string, repoType: string, repoId?: string,
      branchName?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repoType
          type:
            - string
          description: ''
        - id: repoId
          type:
            - string
          description: ''
          optional: true
        - id: branchName
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getBuildBadge(project: string, repoType: string, repoId?:
        string, branchName?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildBadgeData
    name: >-
      getBuildBadgeData(project: string, repoType: string, repoId?: string,
      branchName?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: repoType
          type:
            - string
          description: ''
        - id: repoId
          type:
            - string
          description: ''
          optional: true
        - id: branchName
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getBuildBadgeData(project: string, repoType: string, repoId?:
        string, branchName?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildChanges
    name: >-
      getBuildChanges(project: string, buildId: number, continuationToken?:
      string, top?: number, includeSourceChange?: boolean)
    children: []
    langs:
      - typeScript
    summary: Gets the changes associated with a build
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: The maximum number of changes to return
          optional: true
        - id: includeSourceChange
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getBuildChanges(project: string, buildId: number,
        continuationToken?: string, top?: number, includeSourceChange?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildController
    name: 'getBuildController(controllerId: number)'
    children: []
    langs:
      - typeScript
    summary: Gets a controller
    syntax:
      parameters:
        - id: controllerId
          type:
            - number
          description: ''
      content: 'function getBuildController(controllerId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildControllers
    name: 'getBuildControllers(name?: string)'
    children: []
    langs:
      - typeScript
    summary: 'Gets controller, optionally filtered by name'
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: ''
          optional: true
      content: 'function getBuildControllers(name?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildLog
    name: >-
      getBuildLog(project: string, buildId: number, logId: number, startLine?:
      number, endLine?: number)
    children: []
    langs:
      - typeScript
    summary: Gets a log
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: logId
          type:
            - number
          description: ''
        - id: startLine
          type:
            - number
          description: ''
          optional: true
        - id: endLine
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getBuildLog(project: string, buildId: number, logId: number,
        startLine?: number, endLine?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildLogLines
    name: >-
      getBuildLogLines(project: string, buildId: number, logId: number,
      startLine?: number, endLine?: number)
    children: []
    langs:
      - typeScript
    summary: Gets a log
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: logId
          type:
            - number
          description: ''
        - id: startLine
          type:
            - number
          description: ''
          optional: true
        - id: endLine
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getBuildLogLines(project: string, buildId: number, logId:
        number, startLine?: number, endLine?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildLogs
    name: 'getBuildLogs(project: string, buildId: number)'
    children: []
    langs:
      - typeScript
    summary: Gets logs for a build
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
      content: 'function getBuildLogs(project: string, buildId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildLogsZip
    name: 'getBuildLogsZip(project: string, buildId: number)'
    children: []
    langs:
      - typeScript
    summary: Gets logs for a build
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
      content: 'function getBuildLogsZip(project: string, buildId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildOptionDefinitions
    name: 'getBuildOptionDefinitions(project?: string)'
    children: []
    langs:
      - typeScript
    summary: Gets all build option definitions
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function getBuildOptionDefinitions(project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildProperties
    name: 'getBuildProperties(project: string, buildId: number, filter?: function)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets properties for a build.'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The build id.
        - id: filter
          type:
            - function
          description: Filter to specific properties. Defaults to all properties.
          optional: true
      content: >-
        function getBuildProperties(project: string, buildId: number, filter?:
        function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildReport
    name: 'getBuildReport(project: string, buildId: number, type?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets report for a build'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: type
          type:
            - string
          description: ''
          optional: true
      content: 'function getBuildReport(project: string, buildId: number, type?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildReportHtmlContent
    name: 'getBuildReportHtmlContent(project: string, buildId: number, type?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets report for a build'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: type
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getBuildReportHtmlContent(project: string, buildId: number,
        type?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuilds
    name: >-
      getBuilds(project?: string, definitions?: function, queues?: function,
      buildNumber?: string, minFinishTime?: Date, maxFinishTime?: Date,
      requestedFor?: string, reasonFilter?: BuildReason, statusFilter?:
      BuildStatus, resultFilter?: BuildResult, tagFilters?: function,
      properties?: function, top?: number, continuationToken?: string,
      maxBuildsPerDefinition?: number, deletedFilter?: QueryDeletedOption,
      queryOrder?: BuildQueryOrder, branchName?: string, buildIds?: function,
      repositoryId?: string, repositoryType?: string)
    children: []
    langs:
      - typeScript
    summary: Gets builds
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: definitions
          type:
            - function
          description: A comma-delimited list of definition ids
          optional: true
        - id: queues
          type:
            - function
          description: A comma-delimited list of queue ids
          optional: true
        - id: buildNumber
          type:
            - string
          description: ''
          optional: true
        - id: minFinishTime
          type:
            - Date
          description: ''
          optional: true
        - id: maxFinishTime
          type:
            - Date
          description: ''
          optional: true
        - id: requestedFor
          type:
            - string
          description: ''
          optional: true
        - id: reasonFilter
          type:
            - BuildReason
          description: ''
          optional: true
        - id: statusFilter
          type:
            - BuildStatus
          description: ''
          optional: true
        - id: resultFilter
          type:
            - BuildResult
          description: ''
          optional: true
        - id: tagFilters
          type:
            - function
          description: A comma-delimited list of tags
          optional: true
        - id: properties
          type:
            - function
          description: A comma-delimited list of properties to include in the results
          optional: true
        - id: top
          type:
            - number
          description: The maximum number of builds to retrieve
          optional: true
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
        - id: maxBuildsPerDefinition
          type:
            - number
          description: ''
          optional: true
        - id: deletedFilter
          type:
            - QueryDeletedOption
          description: ''
          optional: true
        - id: queryOrder
          type:
            - BuildQueryOrder
          description: ''
          optional: true
        - id: branchName
          type:
            - string
          description: ''
          optional: true
        - id: buildIds
          type:
            - function
          description: ''
          optional: true
        - id: repositoryId
          type:
            - string
          description: ''
          optional: true
        - id: repositoryType
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getBuilds(project?: string, definitions?: function, queues?:
        function, buildNumber?: string, minFinishTime?: Date, maxFinishTime?:
        Date, requestedFor?: string, reasonFilter?: BuildReason, statusFilter?:
        BuildStatus, resultFilter?: BuildResult, tagFilters?: function,
        properties?: function, top?: number, continuationToken?: string,
        maxBuildsPerDefinition?: number, deletedFilter?: QueryDeletedOption,
        queryOrder?: BuildQueryOrder, branchName?: string, buildIds?: function,
        repositoryId?: string, repositoryType?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildSettings
    name: getBuildSettings()
    children: []
    langs:
      - typeScript
    summary: Gets the build settings
    syntax:
      parameters: []
      content: function getBuildSettings()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildTags
    name: 'getBuildTags(project: string, buildId: number)'
    children: []
    langs:
      - typeScript
    summary: Gets the tags for a build
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
      content: 'function getBuildTags(project: string, buildId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildTimeline
    name: >-
      getBuildTimeline(project: string, buildId: number, timelineId?: string,
      changeId?: number, planId?: string)
    children: []
    langs:
      - typeScript
    summary: Gets details for a build
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
          optional: true
        - id: changeId
          type:
            - number
          description: ''
          optional: true
        - id: planId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getBuildTimeline(project: string, buildId: number, timelineId?:
        string, changeId?: number, planId?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildWorkItemsRefs
    name: 'getBuildWorkItemsRefs(project: string, buildId: number, top?: number)'
    children: []
    langs:
      - typeScript
    summary: Gets the work item ids associated with a build
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: top
          type:
            - number
          description: The maximum number of workitems to return
          optional: true
      content: >-
        function getBuildWorkItemsRefs(project: string, buildId: number, top?:
        number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getBuildWorkItemsRefsFromCommits
    name: >-
      getBuildWorkItemsRefsFromCommits(commitIds: function, project: string,
      buildId: number, top?: number)
    children: []
    langs:
      - typeScript
    summary: Gets the work item ids associated with build commits
    syntax:
      parameters:
        - id: commitIds
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: top
          type:
            - number
          description: >-
            The maximum number of workitems to return, also number of commits to
            consider if commitids are not sent
          optional: true
      content: >-
        function getBuildWorkItemsRefsFromCommits(commitIds: function, project:
        string, buildId: number, top?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getChangesBetweenBuilds
    name: >-
      getChangesBetweenBuilds(project: string, fromBuildId?: number, toBuildId?:
      number, top?: number)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets the changes associated between given builds'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: fromBuildId
          type:
            - number
          description: ''
          optional: true
        - id: toBuildId
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: The maximum number of changes to return
          optional: true
      content: >-
        function getChangesBetweenBuilds(project: string, fromBuildId?: number,
        toBuildId?: number, top?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getDefinition
    name: >-
      getDefinition(definitionId: number, project?: string, revision?: number,
      minMetricsTime?: Date, propertyFilters?: function, includeLatestBuilds?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets a definition, optionally at a specific revision'
    syntax:
      parameters:
        - id: definitionId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: revision
          type:
            - number
          description: ''
          optional: true
        - id: minMetricsTime
          type:
            - Date
          description: ''
          optional: true
        - id: propertyFilters
          type:
            - function
          description: ''
          optional: true
        - id: includeLatestBuilds
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getDefinition(definitionId: number, project?: string,
        revision?: number, minMetricsTime?: Date, propertyFilters?: function,
        includeLatestBuilds?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getDefinitionMetrics
    name: >-
      getDefinitionMetrics(project: string, definitionId: number,
      minMetricsTime?: Date)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets metrics of a definition'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
        - id: minMetricsTime
          type:
            - Date
          description: ''
          optional: true
      content: >-
        function getDefinitionMetrics(project: string, definitionId: number,
        minMetricsTime?: Date)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getDefinitionProperties
    name: >-
      getDefinitionProperties(project: string, definitionId: number, filter?:
      function)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets properties for a definition.'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: The definition id.
        - id: filter
          type:
            - function
          description: Filter to specific properties. Defaults to all properties.
          optional: true
      content: >-
        function getDefinitionProperties(project: string, definitionId: number,
        filter?: function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getDefinitionRevisions
    name: 'getDefinitionRevisions(project: string, definitionId: number)'
    children: []
    langs:
      - typeScript
    summary: Gets revisions of a definition
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
      content: 'function getDefinitionRevisions(project: string, definitionId: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getDefinitions
    name: >-
      getDefinitions(project?: string, name?: string, repositoryId?: string,
      repositoryType?: string, queryOrder?: DefinitionQueryOrder, top?: number,
      continuationToken?: string, minMetricsTime?: Date, definitionIds?:
      function, path?: string, builtAfter?: Date, notBuiltAfter?: Date,
      includeAllProperties?: boolean, includeLatestBuilds?: boolean,
      taskIdFilter?: string)
    children: []
    langs:
      - typeScript
    summary: 'Gets definitions, optionally filtered by name'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: name
          type:
            - string
          description: ''
          optional: true
        - id: repositoryId
          type:
            - string
          description: ''
          optional: true
        - id: repositoryType
          type:
            - string
          description: ''
          optional: true
        - id: queryOrder
          type:
            - DefinitionQueryOrder
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
        - id: minMetricsTime
          type:
            - Date
          description: ''
          optional: true
        - id: definitionIds
          type:
            - function
          description: ''
          optional: true
        - id: path
          type:
            - string
          description: ''
          optional: true
        - id: builtAfter
          type:
            - Date
          description: ''
          optional: true
        - id: notBuiltAfter
          type:
            - Date
          description: ''
          optional: true
        - id: includeAllProperties
          type:
            - boolean
          description: ''
          optional: true
        - id: includeLatestBuilds
          type:
            - boolean
          description: ''
          optional: true
        - id: taskIdFilter
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getDefinitions(project?: string, name?: string, repositoryId?:
        string, repositoryType?: string, queryOrder?: DefinitionQueryOrder,
        top?: number, continuationToken?: string, minMetricsTime?: Date,
        definitionIds?: function, path?: string, builtAfter?: Date,
        notBuiltAfter?: Date, includeAllProperties?: boolean,
        includeLatestBuilds?: boolean, taskIdFilter?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getDefinitionTags
    name: >-
      getDefinitionTags(project: string, definitionId: number, revision?:
      number)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets the tags for a definition'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: ''
        - id: revision
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getDefinitionTags(project: string, definitionId: number,
        revision?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getFolders
    name: 'getFolders(project: string, path?: string, queryOrder?: FolderQueryOrder)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets folders'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
          optional: true
        - id: queryOrder
          type:
            - FolderQueryOrder
          description: ''
          optional: true
      content: >-
        function getFolders(project: string, path?: string, queryOrder?:
        FolderQueryOrder)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getProjectMetrics
    name: >-
      getProjectMetrics(project: string, metricAggregationType?: string,
      minMetricsTime?: Date)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets metrics of a project'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: metricAggregationType
          type:
            - string
          description: ''
          optional: true
        - id: minMetricsTime
          type:
            - Date
          description: ''
          optional: true
      content: >-
        function getProjectMetrics(project: string, metricAggregationType?:
        string, minMetricsTime?: Date)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getResourceUsage
    name: getResourceUsage()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getResourceUsage()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getTags
    name: 'getTags(project: string)'
    children: []
    langs:
      - typeScript
    summary: Gets a list of tags in the project
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function getTags(project: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getTemplate
    name: 'getTemplate(project: string, templateId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets definition template filtered by id'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: Id of the requested template.
      content: 'function getTemplate(project: string, templateId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getTemplates
    name: 'getTemplates(project: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets definition templates'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function getTemplates(project: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.getWorkItemsBetweenBuilds
    name: >-
      getWorkItemsBetweenBuilds(project: string, fromBuildId: number, toBuildId:
      number, top?: number)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Gets all the work item ids inbetween fromBuildId to
      toBuildId
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: fromBuildId
          type:
            - number
          description: ''
        - id: toBuildId
          type:
            - number
          description: ''
        - id: top
          type:
            - number
          description: The maximum number of workitems to return
          optional: true
      content: >-
        function getWorkItemsBetweenBuilds(project: string, fromBuildId: number,
        toBuildId: number, top?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.logsApiVersion
    name: logsApiVersion
    fullName: logsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.metricsApiVersion
    name: metricsApiVersion
    fullName: metricsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.metricsApiVersion_7433fae7
    name: metricsApiVersion_7433fae7
    fullName: metricsApiVersion_7433fae7
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.optionsApiVersion
    name: optionsApiVersion
    fullName: optionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.propertiesApiVersion
    name: propertiesApiVersion
    fullName: propertiesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.propertiesApiVersion_0a6312e9
    name: propertiesApiVersion_0a6312e9
    fullName: propertiesApiVersion_0a6312e9
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.queueBuild
    name: >-
      queueBuild(build: Build, project?: string, ignoreWarnings?: boolean,
      checkInTicket?: string)
    children: []
    langs:
      - typeScript
    summary: Queues a build
    syntax:
      parameters:
        - id: build
          type:
            - vss-web-extension-sdk.TFS.Build.Contracts.Build
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: ignoreWarnings
          type:
            - boolean
          description: ''
          optional: true
        - id: checkInTicket
          type:
            - string
          description: ''
          optional: true
      content: >-
        function queueBuild(build: Build, project?: string, ignoreWarnings?:
        boolean, checkInTicket?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.reportApiVersion
    name: reportApiVersion
    fullName: reportApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.resourceUsageApiVersion
    name: resourceUsageApiVersion
    fullName: resourceUsageApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.revisionsApiVersion
    name: revisionsApiVersion
    fullName: revisionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.saveTemplate
    name: >-
      saveTemplate(template: BuildDefinitionTemplate, project: string,
      templateId: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Saves a definition template'
    syntax:
      parameters:
        - id: template
          type:
            - vss-web-extension-sdk.TFS.Build.Contracts.BuildDefinitionTemplate
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: ''
      content: >-
        function saveTemplate(template: BuildDefinitionTemplate, project:
        string, templateId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.settingsApiVersion
    name: settingsApiVersion
    fullName: settingsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.tagsApiVersion
    name: tagsApiVersion
    fullName: tagsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.tagsApiVersion_6e6114b2
    name: tagsApiVersion_6e6114b2
    fullName: tagsApiVersion_6e6114b2
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.tagsApiVersion_cb894432
    name: tagsApiVersion_cb894432
    fullName: tagsApiVersion_cb894432
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.templatesApiVersion
    name: templatesApiVersion
    fullName: templatesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.timelineApiVersion
    name: timelineApiVersion
    fullName: timelineApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.updateBuild
    name: 'updateBuild(build: Build, buildId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: Updates a build
    syntax:
      parameters:
        - id: build
          type:
            - vss-web-extension-sdk.TFS.Build.Contracts.Build
          description: ''
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function updateBuild(build: Build, buildId: number, project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.updateBuildProperties
    name: >-
      updateBuildProperties(document: JsonPatchDocument, project: string,
      buildId: number)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Updates properties for a build.'
    syntax:
      parameters:
        - id: document
          type:
            - vss-web-extension-sdk.VSS.WebApi.Contracts.JsonPatchDocument
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: The build id.
      content: >-
        function updateBuildProperties(document: JsonPatchDocument, project:
        string, buildId: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.updateBuilds
    name: 'updateBuilds(builds: function, project?: string)'
    children: []
    langs:
      - typeScript
    summary: Update a batch of builds
    syntax:
      parameters:
        - id: builds
          type:
            - function
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function updateBuilds(builds: function, project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.updateBuildSettings
    name: 'updateBuildSettings(settings: BuildSettings)'
    children: []
    langs:
      - typeScript
    summary: Updates the build settings
    syntax:
      parameters:
        - id: settings
          type:
            - vss-web-extension-sdk.TFS.Build.Contracts.BuildSettings
          description: ''
      content: 'function updateBuildSettings(settings: BuildSettings)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.updateDefinition
    name: >-
      updateDefinition(definition: BuildDefinition, definitionId: number,
      project?: string, secretsSourceDefinitionId?: number,
      secretsSourceDefinitionRevision?: number)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Updates an existing definition'
    syntax:
      parameters:
        - id: definition
          type:
            - vss-web-extension-sdk.TFS.Build.Contracts.BuildDefinition
          description: ''
        - id: definitionId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: secretsSourceDefinitionId
          type:
            - number
          description: ''
          optional: true
        - id: secretsSourceDefinitionRevision
          type:
            - number
          description: ''
          optional: true
      content: >-
        function updateDefinition(definition: BuildDefinition, definitionId:
        number, project?: string, secretsSourceDefinitionId?: number,
        secretsSourceDefinitionRevision?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.updateDefinitionProperties
    name: >-
      updateDefinitionProperties(document: JsonPatchDocument, project: string,
      definitionId: number)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Updates properties for a definition.'
    syntax:
      parameters:
        - id: document
          type:
            - vss-web-extension-sdk.VSS.WebApi.Contracts.JsonPatchDocument
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: definitionId
          type:
            - number
          description: The definition id.
      content: >-
        function updateDefinitionProperties(document: JsonPatchDocument,
        project: string, definitionId: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.updateFolder
    name: 'updateFolder(folder: Folder, project: string, path: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Updates an existing folder at given  existing path'
    syntax:
      parameters:
        - id: folder
          type:
            - vss-web-extension-sdk.TFS.Build.Contracts.Folder
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      content: 'function updateFolder(folder: Folder, project: string, path: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.workitemsApiVersion
    name: workitemsApiVersion
    fullName: workitemsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient.workitemsApiVersion_5a21f5d2
    name: workitemsApiVersion_5a21f5d2
    fullName: workitemsApiVersion_5a21f5d2
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vssRequestOptions
          type:
            - vss-web-extension-sdk.IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient._rootRequestPath
    name: _rootRequestPath
    fullName: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: promise
          type:
            - vss-web-extension-sdk.IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
