### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.OrganizationPolicy.RestClient.CommonMethods3To4
    name: CommonMethods3To4
    fullName: CommonMethods3To4
    children:
      - >-
        vss-web-extension-sdk.VSS.OrganizationPolicy.RestClient.CommonMethods3To4.constructor
      - >-
        vss-web-extension-sdk.VSS.OrganizationPolicy.RestClient.CommonMethods3To4.getPolicies
      - >-
        vss-web-extension-sdk.VSS.OrganizationPolicy.RestClient.CommonMethods3To4.getPolicy
      - >-
        vss-web-extension-sdk.VSS.OrganizationPolicy.RestClient.CommonMethods3To4.getPolicyInformation
      - >-
        vss-web-extension-sdk.VSS.OrganizationPolicy.RestClient.CommonMethods3To4.getPolicyInformations
      - >-
        vss-web-extension-sdk.VSS.OrganizationPolicy.RestClient.CommonMethods3To4.updatePolicy
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.WebApi.RestClient.VssHttpClient'
    package: vss-web-extension-sdk
    module: VSS/OrganizationPolicy/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.OrganizationPolicy.RestClient.CommonMethods3To4.constructor
    name: >-
      CommonMethods3To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new CommonMethods3To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.OrganizationPolicy.RestClient.CommonMethods3To4.getPolicies
    name: 'getPolicies(policyNames: string[], defaultValues: string[])'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: policyNames
          type:
            - 'string[]'
          description: ''
        - id: defaultValues
          type:
            - 'string[]'
          description: ''
      content: 'function getPolicies(policyNames: string[], defaultValues: string[])'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<Policy>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.OrganizationPolicy.RestClient.CommonMethods3To4.getPolicy
    name: 'getPolicy(policyName: string, defaultValue: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: policyName
          type:
            - string
          description: ''
        - id: defaultValue
          type:
            - string
          description: ''
      content: 'function getPolicy(policyName: string, defaultValue: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Organization.Contracts.Policy>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.OrganizationPolicy.RestClient.CommonMethods3To4.getPolicyInformation
    name: 'getPolicyInformation(policyName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: policyName
          type:
            - string
          description: ''
      content: 'function getPolicyInformation(policyName: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Organization.Contracts.PolicyInfo>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.OrganizationPolicy.RestClient.CommonMethods3To4.getPolicyInformations
    name: 'getPolicyInformations(policyNames?: string[])'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: policyNames
          type:
            - 'string[]'
          description: ''
          optional: true
      content: 'function getPolicyInformations(policyNames?: string[])'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<PolicyInfo>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.OrganizationPolicy.RestClient.CommonMethods3To4.updatePolicy
    name: 'updatePolicy(patchDocument: JsonPatchDocument, policyName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: patchDocument
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.Contracts.JsonPatchDocument'
          description: ''
        - id: policyName
          type:
            - string
          description: ''
      content: >-
        function updatePolicy(patchDocument: JsonPatchDocument, policyName:
        string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
