### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.NodeBuffer
    name: NodeBuffer
    fullName: NodeBuffer
    children:
      - vss-web-extension-sdk.NodeBuffer.compare
      - vss-web-extension-sdk.NodeBuffer.copy
      - vss-web-extension-sdk.NodeBuffer.entries
      - vss-web-extension-sdk.NodeBuffer.equals
      - vss-web-extension-sdk.NodeBuffer.fill
      - vss-web-extension-sdk.NodeBuffer.includes
      - vss-web-extension-sdk.NodeBuffer.indexOf
      - vss-web-extension-sdk.NodeBuffer.keys
      - vss-web-extension-sdk.NodeBuffer.lastIndexOf
      - vss-web-extension-sdk.NodeBuffer.readDoubleBE
      - vss-web-extension-sdk.NodeBuffer.readDoubleLE
      - vss-web-extension-sdk.NodeBuffer.readFloatBE
      - vss-web-extension-sdk.NodeBuffer.readFloatLE
      - vss-web-extension-sdk.NodeBuffer.readInt16BE
      - vss-web-extension-sdk.NodeBuffer.readInt16LE
      - vss-web-extension-sdk.NodeBuffer.readInt32BE
      - vss-web-extension-sdk.NodeBuffer.readInt32LE
      - vss-web-extension-sdk.NodeBuffer.readInt8
      - vss-web-extension-sdk.NodeBuffer.readIntBE
      - vss-web-extension-sdk.NodeBuffer.readIntLE
      - vss-web-extension-sdk.NodeBuffer.readUInt16BE
      - vss-web-extension-sdk.NodeBuffer.readUInt16LE
      - vss-web-extension-sdk.NodeBuffer.readUInt32BE
      - vss-web-extension-sdk.NodeBuffer.readUInt32LE
      - vss-web-extension-sdk.NodeBuffer.readUInt8
      - vss-web-extension-sdk.NodeBuffer.readUIntBE
      - vss-web-extension-sdk.NodeBuffer.readUIntLE
      - vss-web-extension-sdk.NodeBuffer.slice
      - vss-web-extension-sdk.NodeBuffer.swap16
      - vss-web-extension-sdk.NodeBuffer.swap32
      - vss-web-extension-sdk.NodeBuffer.swap64
      - vss-web-extension-sdk.NodeBuffer.toJSON
      - vss-web-extension-sdk.NodeBuffer.toString
      - vss-web-extension-sdk.NodeBuffer.Uint8Array
      - vss-web-extension-sdk.NodeBuffer.values
      - vss-web-extension-sdk.NodeBuffer.write
      - vss-web-extension-sdk.NodeBuffer.writeDoubleBE
      - vss-web-extension-sdk.NodeBuffer.writeDoubleLE
      - vss-web-extension-sdk.NodeBuffer.writeFloatBE
      - vss-web-extension-sdk.NodeBuffer.writeFloatLE
      - vss-web-extension-sdk.NodeBuffer.writeInt16BE
      - vss-web-extension-sdk.NodeBuffer.writeInt16LE
      - vss-web-extension-sdk.NodeBuffer.writeInt32BE
      - vss-web-extension-sdk.NodeBuffer.writeInt32LE
      - vss-web-extension-sdk.NodeBuffer.writeInt8
      - vss-web-extension-sdk.NodeBuffer.writeIntBE
      - vss-web-extension-sdk.NodeBuffer.writeIntLE
      - vss-web-extension-sdk.NodeBuffer.writeUInt16BE
      - vss-web-extension-sdk.NodeBuffer.writeUInt16LE
      - vss-web-extension-sdk.NodeBuffer.writeUInt32BE
      - vss-web-extension-sdk.NodeBuffer.writeUInt32LE
      - vss-web-extension-sdk.NodeBuffer.writeUInt8
      - vss-web-extension-sdk.NodeBuffer.writeUIntBE
      - vss-web-extension-sdk.NodeBuffer.writeUIntLE
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      - Uint8Array
    package: vss-web-extension-sdk
    module: Global
    deprecated:
      content: ''
  - uid: vss-web-extension-sdk.NodeBuffer.compare
    name: >-
      compare(otherBuffer: Buffer, targetStart?: number, targetEnd?: number,
      sourceStart?: number, sourceEnd?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: otherBuffer
          type:
            - '@vss-web-extension-sdk.Buffer'
          description: ''
        - id: targetStart
          type:
            - number
          description: ''
          optional: true
        - id: targetEnd
          type:
            - number
          description: ''
          optional: true
        - id: sourceStart
          type:
            - number
          description: ''
          optional: true
        - id: sourceEnd
          type:
            - number
          description: ''
          optional: true
      content: >-
        function compare(otherBuffer: Buffer, targetStart?: number, targetEnd?:
        number, sourceStart?: number, sourceEnd?: number)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.copy
    name: >-
      copy(targetBuffer: Buffer, targetStart?: number, sourceStart?: number,
      sourceEnd?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: targetBuffer
          type:
            - '@vss-web-extension-sdk.Buffer'
          description: ''
        - id: targetStart
          type:
            - number
          description: ''
          optional: true
        - id: sourceStart
          type:
            - number
          description: ''
          optional: true
        - id: sourceEnd
          type:
            - number
          description: ''
          optional: true
      content: >-
        function copy(targetBuffer: Buffer, targetStart?: number, sourceStart?:
        number, sourceEnd?: number)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.entries
    name: entries()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function entries()
      return:
        type:
          - '@vss-web-extension-sdk.IterableIterator<function>'
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.equals
    name: 'equals(otherBuffer: Buffer)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: otherBuffer
          type:
            - '@vss-web-extension-sdk.Buffer'
          description: ''
      content: 'function equals(otherBuffer: Buffer)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.fill
    name: 'fill(value: any, offset?: number, end?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - any
          description: ''
        - id: offset
          type:
            - number
          description: ''
          optional: true
        - id: end
          type:
            - number
          description: ''
          optional: true
      content: 'function fill(value: any, offset?: number, end?: number)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.includes
    name: 'includes(value: string, byteOffset?: number, encoding?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - string
          description: ''
        - id: byteOffset
          type:
            - number
          description: ''
          optional: true
        - id: encoding
          type:
            - string
          description: ''
          optional: true
      content: 'function includes(value: string, byteOffset?: number, encoding?: string)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.indexOf
    name: 'indexOf(value: string, byteOffset?: number, encoding?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - string
          description: ''
        - id: byteOffset
          type:
            - number
          description: ''
          optional: true
        - id: encoding
          type:
            - string
          description: ''
          optional: true
      content: 'function indexOf(value: string, byteOffset?: number, encoding?: string)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.keys
    name: keys()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function keys()
      return:
        type:
          - '@vss-web-extension-sdk.IterableIterator<number>'
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.lastIndexOf
    name: 'lastIndexOf(value: string, byteOffset?: number, encoding?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - string
          description: ''
        - id: byteOffset
          type:
            - number
          description: ''
          optional: true
        - id: encoding
          type:
            - string
          description: ''
          optional: true
      content: >-
        function lastIndexOf(value: string, byteOffset?: number, encoding?:
        string)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readDoubleBE
    name: 'readDoubleBE(offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function readDoubleBE(offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readDoubleLE
    name: 'readDoubleLE(offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function readDoubleLE(offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readFloatBE
    name: 'readFloatBE(offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function readFloatBE(offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readFloatLE
    name: 'readFloatLE(offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function readFloatLE(offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readInt16BE
    name: 'readInt16BE(offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function readInt16BE(offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readInt16LE
    name: 'readInt16LE(offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function readInt16LE(offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readInt32BE
    name: 'readInt32BE(offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function readInt32BE(offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readInt32LE
    name: 'readInt32LE(offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function readInt32LE(offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readInt8
    name: 'readInt8(offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function readInt8(offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readIntBE
    name: 'readIntBE(offset: number, byteLength: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function readIntBE(offset: number, byteLength: number, noAssert?:
        boolean)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readIntLE
    name: 'readIntLE(offset: number, byteLength: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function readIntLE(offset: number, byteLength: number, noAssert?:
        boolean)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readUInt16BE
    name: 'readUInt16BE(offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function readUInt16BE(offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readUInt16LE
    name: 'readUInt16LE(offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function readUInt16LE(offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readUInt32BE
    name: 'readUInt32BE(offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function readUInt32BE(offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readUInt32LE
    name: 'readUInt32LE(offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function readUInt32LE(offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readUInt8
    name: 'readUInt8(offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function readUInt8(offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readUIntBE
    name: 'readUIntBE(offset: number, byteLength: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function readUIntBE(offset: number, byteLength: number, noAssert?:
        boolean)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.readUIntLE
    name: 'readUIntLE(offset: number, byteLength: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function readUIntLE(offset: number, byteLength: number, noAssert?:
        boolean)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.slice
    name: 'slice(start?: number, end?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: start
          type:
            - number
          description: ''
          optional: true
        - id: end
          type:
            - number
          description: ''
          optional: true
      content: 'function slice(start?: number, end?: number)'
      return:
        type:
          - '@vss-web-extension-sdk.Buffer'
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.swap16
    name: swap16()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function swap16()
      return:
        type:
          - '@vss-web-extension-sdk.Buffer'
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.swap32
    name: swap32()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function swap32()
      return:
        type:
          - '@vss-web-extension-sdk.Buffer'
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.swap64
    name: swap64()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function swap64()
      return:
        type:
          - '@vss-web-extension-sdk.Buffer'
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.toJSON
    name: toJSON()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function toJSON()
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.toString
    name: 'toString(encoding?: string, start?: number, end?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: encoding
          type:
            - string
          description: ''
          optional: true
        - id: start
          type:
            - number
          description: ''
          optional: true
        - id: end
          type:
            - number
          description: ''
          optional: true
      content: 'function toString(encoding?: string, start?: number, end?: number)'
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.Uint8Array
    name: Uint8Array
    fullName: Uint8Array
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - Uint8ArrayConstructor
  - uid: vss-web-extension-sdk.NodeBuffer.values
    name: values()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function values()
      return:
        type:
          - '@vss-web-extension-sdk.IterableIterator<number>'
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.write
    name: 'write(string: string, offset?: number, length?: number, encoding?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: string
          type:
            - string
          description: ''
        - id: offset
          type:
            - number
          description: ''
          optional: true
        - id: length
          type:
            - number
          description: ''
          optional: true
        - id: encoding
          type:
            - string
          description: ''
          optional: true
      content: >-
        function write(string: string, offset?: number, length?: number,
        encoding?: string)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeDoubleBE
    name: 'writeDoubleBE(value: number, offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function writeDoubleBE(value: number, offset: number, noAssert?:
        boolean)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeDoubleLE
    name: 'writeDoubleLE(value: number, offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function writeDoubleLE(value: number, offset: number, noAssert?:
        boolean)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeFloatBE
    name: 'writeFloatBE(value: number, offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function writeFloatBE(value: number, offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeFloatLE
    name: 'writeFloatLE(value: number, offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function writeFloatLE(value: number, offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeInt16BE
    name: 'writeInt16BE(value: number, offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function writeInt16BE(value: number, offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeInt16LE
    name: 'writeInt16LE(value: number, offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function writeInt16LE(value: number, offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeInt32BE
    name: 'writeInt32BE(value: number, offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function writeInt32BE(value: number, offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeInt32LE
    name: 'writeInt32LE(value: number, offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function writeInt32LE(value: number, offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeInt8
    name: 'writeInt8(value: number, offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function writeInt8(value: number, offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeIntBE
    name: >-
      writeIntBE(value: number, offset: number, byteLength: number, noAssert?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function writeIntBE(value: number, offset: number, byteLength: number,
        noAssert?: boolean)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeIntLE
    name: >-
      writeIntLE(value: number, offset: number, byteLength: number, noAssert?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function writeIntLE(value: number, offset: number, byteLength: number,
        noAssert?: boolean)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeUInt16BE
    name: 'writeUInt16BE(value: number, offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function writeUInt16BE(value: number, offset: number, noAssert?:
        boolean)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeUInt16LE
    name: 'writeUInt16LE(value: number, offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function writeUInt16LE(value: number, offset: number, noAssert?:
        boolean)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeUInt32BE
    name: 'writeUInt32BE(value: number, offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function writeUInt32BE(value: number, offset: number, noAssert?:
        boolean)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeUInt32LE
    name: 'writeUInt32LE(value: number, offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function writeUInt32LE(value: number, offset: number, noAssert?:
        boolean)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeUInt8
    name: 'writeUInt8(value: number, offset: number, noAssert?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: 'function writeUInt8(value: number, offset: number, noAssert?: boolean)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeUIntBE
    name: >-
      writeUIntBE(value: number, offset: number, byteLength: number, noAssert?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function writeUIntBE(value: number, offset: number, byteLength: number,
        noAssert?: boolean)
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.NodeBuffer.writeUIntLE
    name: >-
      writeUIntLE(value: number, offset: number, byteLength: number, noAssert?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - number
          description: ''
        - id: offset
          type:
            - number
          description: ''
        - id: byteLength
          type:
            - number
          description: ''
        - id: noAssert
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function writeUIntLE(value: number, offset: number, byteLength: number,
        noAssert?: boolean)
      return:
        type:
          - number
    type: method
