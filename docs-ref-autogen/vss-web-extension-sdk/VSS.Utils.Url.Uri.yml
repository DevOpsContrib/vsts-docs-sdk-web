### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Utils.Url.Uri
    name: Uri
    fullName: Uri
    children:
      - vss-web-extension-sdk.VSS.Utils.Url.Uri.absoluteUri
      - vss-web-extension-sdk.VSS.Utils.Url.Uri.addQueryParam
      - vss-web-extension-sdk.VSS.Utils.Url.Uri.getEffectivePort
      - vss-web-extension-sdk.VSS.Utils.Url.Uri.getQueryParam
      - vss-web-extension-sdk.VSS.Utils.Url.Uri.hashString
      - vss-web-extension-sdk.VSS.Utils.Url.Uri.host
      - vss-web-extension-sdk.VSS.Utils.Url.Uri.parse
      - vss-web-extension-sdk.VSS.Utils.Url.Uri.path
      - vss-web-extension-sdk.VSS.Utils.Url.Uri.port
      - vss-web-extension-sdk.VSS.Utils.Url.Uri.queryParameters
      - vss-web-extension-sdk.VSS.Utils.Url.Uri.queryString
      - vss-web-extension-sdk.VSS.Utils.Url.Uri.scheme
      - vss-web-extension-sdk.VSS.Utils.Url.Uri.constructor
    langs:
      - typeScript
    type: class
    summary: >-
      Class that represents a Uri and allows parsing/getting and setting of
      individual parts
    package: vss-web-extension-sdk
    module: VSS/Utils/Url
  - uid: vss-web-extension-sdk.VSS.Utils.Url.Uri.absoluteUri
    name: absoluteUri
    fullName: absoluteUri
    children: []
    langs:
      - typeScript
    type: property
    summary: Set the absolute uri string for this Uri. Replaces all existing values
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Utils.Url.Uri.addQueryParam
    name: 'addQueryParam(name: string, value: string, replaceExisting?: boolean)'
    children: []
    langs:
      - typeScript
    summary: Adds a query string parameter to the current uri
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: The Query parameter name
        - id: value
          type:
            - string
          description: The Query parameter value
        - id: replaceExisting
          type:
            - boolean
          description: |
            If true, replace all existing parameters with the same name
          optional: true
      content: >-
        function addQueryParam(name: string, value: string, replaceExisting?:
        boolean)
    type: method
  - uid: vss-web-extension-sdk.VSS.Utils.Url.Uri.getEffectivePort
    name: getEffectivePort()
    children: []
    langs:
      - typeScript
    summary: >-
      Gets the effective port number, returning the default port number if
      omitted for the given scheme.
    syntax:
      parameters: []
      content: function getEffectivePort()
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.Utils.Url.Uri.getQueryParam
    name: 'getQueryParam(name: string)'
    children: []
    langs:
      - typeScript
    summary: Get the value of the query parameter with the given key
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: |
            Query parameter name
      content: 'function getQueryParam(name: string)'
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Utils.Url.Uri.hashString
    name: hashString
    fullName: hashString
    children: []
    langs:
      - typeScript
    type: property
    summary: The hash string of the uri
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Utils.Url.Uri.host
    name: host
    fullName: host
    children: []
    langs:
      - typeScript
    type: property
    summary: The uri hostname (does not include port or scheme)
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Utils.Url.Uri.parse
    name: 'parse(uri: string, options?: IUriParseOptions)'
    children: []
    langs:
      - typeScript
    summary: Parse a uri string into a Uri member
    syntax:
      parameters:
        - id: uri
          type:
            - string
          description: Uri string to parse
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.Utils.Url.IUriParseOptions'
          description: |
            Options for parsing the uri string
          optional: true
      content: 'function parse(uri: string, options?: IUriParseOptions)'
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Utils.Url.Uri'
    type: method
  - uid: vss-web-extension-sdk.VSS.Utils.Url.Uri.path
    name: path
    fullName: path
    children: []
    langs:
      - typeScript
    type: property
    summary: The relative path of the uri
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Utils.Url.Uri.port
    name: port
    fullName: port
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The port number of the uri as supplied in the url. 0 if left out in the
      url (e.g. the default port for the scheme).
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.VSS.Utils.Url.Uri.queryParameters
    name: queryParameters
    fullName: queryParameters
    children: []
    langs:
      - typeScript
    type: property
    summary: The array of query parameters in the uri
    syntax:
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Utils.Url.IQueryParameter[]'
  - uid: vss-web-extension-sdk.VSS.Utils.Url.Uri.queryString
    name: queryString
    fullName: queryString
    children: []
    langs:
      - typeScript
    type: property
    summary: Set the query string for this Uri. Replaces existing value
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Utils.Url.Uri.scheme
    name: scheme
    fullName: scheme
    children: []
    langs:
      - typeScript
    type: property
    summary: The uri scheme such as http or https
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Utils.Url.Uri.constructor
    name: 'Uri(uri?: string)'
    children: []
    langs:
      - typeScript
    summary: Create a new Uri.
    syntax:
      parameters:
        - id: uri
          type:
            - string
          description: |
            Optional uri string to populate values with
          optional: true
      content: 'new Uri(uri?: string)'
    type: constructor
