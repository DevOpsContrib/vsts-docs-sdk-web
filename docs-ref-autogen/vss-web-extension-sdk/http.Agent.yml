### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.http.Agent
    name: Agent
    fullName: Agent
    children:
      - vss-web-extension-sdk.http.Agent.constructor
      - vss-web-extension-sdk.http.Agent.destroy
      - vss-web-extension-sdk.http.Agent.maxSockets
      - vss-web-extension-sdk.http.Agent.requests
      - vss-web-extension-sdk.http.Agent.sockets
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: http
  - uid: vss-web-extension-sdk.http.Agent.constructor
    name: 'Agent(opts?: AgentOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: opts
          type:
            - '@vss-web-extension-sdk.http.AgentOptions'
          description: ''
          optional: true
      content: 'new Agent(opts?: AgentOptions)'
    type: constructor
  - uid: vss-web-extension-sdk.http.Agent.destroy
    name: destroy()
    children: []
    langs:
      - typeScript
    summary: >-
      Destroy any sockets that are currently in use by the agent.

      It is usually not necessary to do this. However, if you are using an agent
      with KeepAlive enabled,

      then it is best to explicitly shut down the agent when you know that it
      will no longer be used. Otherwise,

      sockets may hang open for quite a long time before the server terminates
      them.
    syntax:
      parameters: []
      content: function destroy()
    type: method
  - uid: vss-web-extension-sdk.http.Agent.maxSockets
    name: maxSockets
    fullName: maxSockets
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.http.Agent.requests
    name: requests
    fullName: requests
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.http.Agent.sockets
    name: sockets
    fullName: sockets
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
