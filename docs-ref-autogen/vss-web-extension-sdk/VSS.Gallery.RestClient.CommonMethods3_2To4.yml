### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4
    name: CommonMethods3_2To4
    fullName: CommonMethods3_2To4
    children:
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.constructor
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.createExtension
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.createExtensionWithPublisher
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.createQuestion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.createResponse
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.deleteQuestion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.deleteResponse
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.getQuestions
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.getReviewsSummary
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.getVerificationLog
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.reportQuestion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.sendNotifications
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.updateExtension
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.updateExtensionById
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.updateQuestion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.updateResponse
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4'
    source:
      path: vss.d.ts
      startLine: 23687
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.constructor
    name: CommonMethods3_2To4
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new CommonMethods3_2To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.createExtension
    name: createExtension
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: 'function createExtension(content: any)'
      parameters:
        - id: content
          type:
            - any
          description: Content to upload
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.PublishedExtension>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.createExtensionWithPublisher
    name: createExtensionWithPublisher
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function createExtensionWithPublisher(content: any, publisherName:
        string)
      parameters:
        - id: content
          type:
            - any
          description: Content to upload
        - id: publisherName
          type:
            - string
          description: ''
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.PublishedExtension>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.createQuestion
    name: createQuestion
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Creates a new question for an extension.'
    syntax:
      content: >-
        function createQuestion(question: Question, publisherName: string,
        extensionName: string)
      parameters:
        - id: question
          type:
            - '@vss-web-extension-sdk.VSS.Gallery.Contracts.Question'
          description: Question to be created for the extension.
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.Question>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.createResponse
    name: createResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Preview API] Creates a new response for a given question for an
      extension.
    syntax:
      content: >-
        function createResponse(response: Response, publisherName: string,
        extensionName: string, questionId: number)
      parameters:
        - id: response
          type:
            - '@vss-web-extension-sdk.VSS.Gallery.Contracts.Response'
          description: Response to be created for the extension.
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: >-
            Identifier of the question for which response is to be created for
            the extension.
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.Response>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.deleteQuestion
    name: deleteQuestion
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Preview API] Deletes an existing question and all its associated
      responses for an extension. (soft delete)
    syntax:
      content: >-
        function deleteQuestion(publisherName: string, extensionName: string,
        questionId: number)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: Identifier of the question to be deleted for the extension.
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.deleteResponse
    name: deleteResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Deletes a response for an extension. (soft delete)'
    syntax:
      content: >-
        function deleteResponse(publisherName: string, extensionName: string,
        questionId: number, responseId: number)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: Identifies the question whose response is to be deleted.
        - id: responseId
          type:
            - number
          description: Identifies the response to be deleted.
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.getQuestions
    name: getQuestions
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns a list of questions with their responses associated
      with an extension.
    syntax:
      content: >-
        function getQuestions(publisherName: string, extensionName: string,
        count?: number, page?: number, afterDate?: Date)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: count
          type:
            - number
          description: Number of questions to retrieve (defaults to 10).
          optional: true
        - id: page
          type:
            - number
          description: Page number from which set of questions are to be retrieved.
          optional: true
        - id: afterDate
          type:
            - Date
          description: >-
            If provided, results questions are returned which were posted after
            this date
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.QuestionsResult>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.getReviewsSummary
    name: getReviewsSummary
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Returns a summary of the reviews'
    syntax:
      content: >-
        function getReviewsSummary(pubName: string, extName: string,
        beforeDate?: Date, afterDate?: Date)
      parameters:
        - id: pubName
          type:
            - string
          description: Name of the publisher who published the extension
        - id: extName
          type:
            - string
          description: Name of the extension
        - id: beforeDate
          type:
            - Date
          description: >-
            Use if you want to fetch summary of reviews older than the specified
            date, defaults to null
          optional: true
        - id: afterDate
          type:
            - Date
          description: >-
            Use if you want to fetch summary of reviews newer than the specified
            date, defaults to null
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.ReviewSummary>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.getVerificationLog
    name: getVerificationLog
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function getVerificationLog(publisherName: string, extensionName:
        string, version: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<ArrayBuffer>'
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.reportQuestion
    name: reportQuestion
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Flags a concern with an existing question for an extension.'
    syntax:
      content: >-
        function reportQuestion(concern: Concern, pubName: string, extName:
        string, questionId: number)
      parameters:
        - id: concern
          type:
            - '@vss-web-extension-sdk.VSS.Gallery.Contracts.Concern'
          description: User reported concern with a question for the extension.
        - id: pubName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: Identifier of the question to be updated for the extension.
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.Concern>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.sendNotifications
    name: sendNotifications
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Send Notification'
    syntax:
      content: 'function sendNotifications(notificationData: NotificationsData)'
      parameters:
        - id: notificationData
          type:
            - '@vss-web-extension-sdk.VSS.Gallery.Contracts.NotificationsData'
          description: Denoting the data needed to send notification
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.updateExtension
    name: updateExtension
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function updateExtension(content: any, publisherName: string,
        extensionName: string)
      parameters:
        - id: content
          type:
            - any
          description: Content to upload
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.PublishedExtension>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.updateExtensionById
    name: updateExtensionById
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: 'function updateExtensionById(extensionId: string)'
      parameters:
        - id: extensionId
          type:
            - string
          description: ''
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.PublishedExtension>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.updateQuestion
    name: updateQuestion
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Updates an existing question for an extension.'
    syntax:
      content: >-
        function updateQuestion(question: Question, publisherName: string,
        extensionName: string, questionId: number)
      parameters:
        - id: question
          type:
            - '@vss-web-extension-sdk.VSS.Gallery.Contracts.Question'
          description: Updated question to be set for the extension.
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: Identifier of the question to be updated for the extension.
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.Question>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_2To4.updateResponse
    name: updateResponse
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Preview API] Updates an existing response for a given question for an
      extension.
    syntax:
      content: >-
        function updateResponse(response: Response, publisherName: string,
        extensionName: string, questionId: number, responseId: number)
      parameters:
        - id: response
          type:
            - '@vss-web-extension-sdk.VSS.Gallery.Contracts.Response'
          description: Updated response to be set for the extension.
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: >-
            Identifier of the question for which response is to be updated for
            the extension.
        - id: responseId
          type:
            - number
          description: Identifier of the response which has to be updated.
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.Response>
    module: VSS/Gallery/RestClient
