### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor
    name: CellEditor
    fullName: CellEditor
    children:
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.beginEdit
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.constructor
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.clearValue
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.dispose
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.endEdit
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.fireEndEdit
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.focus
      - >-
        vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.getDisplayValue
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.getHeight
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.getValue
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.initialize
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.setPosition
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.setSize
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.setValue
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.valueChanged
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.Controls.BaseControl'
    source:
      path: vss.d.ts
      startLine: 11061
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/EditableGrid
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.beginEdit
    name: 'beginEdit(initValue: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: initValue
          type:
            - string
          description: ''
      content: 'function beginEdit(initValue: string)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.constructor
    name: 'CellEditor(options: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
      content: 'new CellEditor(options: any)'
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.clearValue
    name: 'clearValue(setEmpty?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: setEmpty
          type:
            - boolean
          description: ''
          optional: true
      content: 'function clearValue(setEmpty?: boolean)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.dispose
    name: dispose()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function dispose()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.endEdit
    name: endEdit
    fullName: endEdit
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - function
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.fireEndEdit
    name: 'fireEndEdit(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function fireEndEdit(e?: JQueryEventObject)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.focus
    name: focus()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function focus()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.getDisplayValue
    name: getDisplayValue()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getDisplayValue()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.getHeight
    name: getHeight()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getHeight()
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.getValue
    name: getValue()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getValue()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.initialize
    name: initialize()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function initialize()
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.setPosition
    name: 'setPosition(top: number, left: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: top
          type:
            - number
          description: ''
        - id: left
          type:
            - number
          description: ''
      content: 'function setPosition(top: number, left: number)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.setSize
    name: 'setSize($cellContext: JQuery)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: $cellContext
          type:
            - JQuery
          description: ''
      content: 'function setSize($cellContext: JQuery)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.setValue
    name: 'setValue(value: string, doNotSavePrevious?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - string
          description: ''
        - id: doNotSavePrevious
          type:
            - boolean
          description: ''
          optional: true
      content: 'function setValue(value: string, doNotSavePrevious?: boolean)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor.valueChanged
    name: valueChanged
    fullName: valueChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - function
