### YamlMime:UniversalReference
items:
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl
    name: IdentityPickerSearchControl
    fullName: IdentityPickerSearchControl
    children:
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.addIdentitiesToMru
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.clear
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.DIALOG_MOVE_EVENT
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.disableReadOnlyMode
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.dispose
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.enableReadOnlyMode
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.focusOnSearchInput
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.getDropdownPrefix
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.getIdentitySearchResult
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.getInputText
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.constructor
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.initialize
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.initializeOptionsInternal
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.INVALID_INPUT_EVENT
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.isDropdownFiltered
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.isDropdownVisible
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.load
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.RESOLVED_INPUT_REMOVED_EVENT
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.SEARCH_FINISHED_EVENT
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.SEARCH_MRU_TRIANGLE_CLASS
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.SEARCH_STARTED_EVENT
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.setEntities
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.showMruDropdown
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.VALID_INPUT_EVENT
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: >-
        @vss-web-extension-sdk.VSS.Controls.Control<@vss-web-extension-sdk.VSS.Identities.Picker.Controls.IIdentityPickerSearchOptions>
    source:
      path: vss.d.ts
      startLine: 25720
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.addIdentitiesToMru
    name: addIdentitiesToMru
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function addIdentitiesToMru(identities: IEntity[])'
      parameters:
        - id: identities
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.RestClient.IEntity[]'
          description: ''
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.clear
    name: clear
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function clear()
      parameters: []
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.DIALOG_MOVE_EVENT
    name: DIALOG_MOVE_EVENT
    fullName: DIALOG_MOVE_EVENT
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string DIALOG_MOVE_EVENT
      return:
        type:
          - string
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.disableReadOnlyMode
    name: disableReadOnlyMode
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function disableReadOnlyMode()
      parameters: []
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.dispose
    name: dispose
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function dispose()
      parameters: []
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.enableReadOnlyMode
    name: enableReadOnlyMode
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function enableReadOnlyMode()
      parameters: []
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.focusOnSearchInput
    name: focusOnSearchInput
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Focuses on the visible input element or on an available
      resolved/unresolved item if the input is hidden. It also triggers the
      focus event on the container element for eventual styling
    syntax:
      content: function focusOnSearchInput()
      parameters: []
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.getDropdownPrefix
    name: getDropdownPrefix
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getDropdownPrefix()
      parameters: []
      return:
        type:
          - string
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.getIdentitySearchResult
    name: getIdentitySearchResult
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getIdentitySearchResult()
      parameters: []
      return:
        type:
          - >-
            @vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentitySearchResult
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.getInputText
    name: getInputText
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getInputText()
      parameters: []
      return:
        type:
          - string
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.constructor
    name: IdentityPickerSearchControl
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new IdentityPickerSearchControl(options?: IIdentityPickerSearchOptions,
        testUse?: boolean)
      parameters:
        - id: options
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Controls.IIdentityPickerSearchOptions
          description: ''
          optional: true
        - id: testUse
          type:
            - boolean
          description: ''
          optional: true
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.initialize
    name: initialize
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function initialize()
      parameters: []
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.initializeOptionsInternal
    name: initializeOptionsInternal
    children: []
    type: method
    langs:
      - typeScript
    summary: To be used only by unit tests
    syntax:
      content: >-
        function initializeOptionsInternal(options:
        IIdentityPickerSearchOptionsInternal)
      parameters:
        - id: options
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Controls.IIdentityPickerSearchOptionsInternal
          description: ''
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.INVALID_INPUT_EVENT
    name: INVALID_INPUT_EVENT
    fullName: INVALID_INPUT_EVENT
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string INVALID_INPUT_EVENT
      return:
        type:
          - string
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.isDropdownFiltered
    name: isDropdownFiltered
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isDropdownFiltered()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.isDropdownVisible
    name: isDropdownVisible
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isDropdownVisible()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.load
    name: load
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function load()
      parameters: []
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<boolean>'
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.RESOLVED_INPUT_REMOVED_EVENT
    name: RESOLVED_INPUT_REMOVED_EVENT
    fullName: RESOLVED_INPUT_REMOVED_EVENT
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string RESOLVED_INPUT_REMOVED_EVENT
      return:
        type:
          - string
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.SEARCH_FINISHED_EVENT
    name: SEARCH_FINISHED_EVENT
    fullName: SEARCH_FINISHED_EVENT
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string SEARCH_FINISHED_EVENT
      return:
        type:
          - string
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.SEARCH_MRU_TRIANGLE_CLASS
    name: SEARCH_MRU_TRIANGLE_CLASS
    fullName: SEARCH_MRU_TRIANGLE_CLASS
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string SEARCH_MRU_TRIANGLE_CLASS
      return:
        type:
          - string
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.SEARCH_STARTED_EVENT
    name: SEARCH_STARTED_EVENT
    fullName: SEARCH_STARTED_EVENT
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string SEARCH_STARTED_EVENT
      return:
        type:
          - string
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.setEntities
    name: setEntities
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Appends to the search control's entities - this expects valid IEntity
      objects or valid query tokens - such as unique email addresses - entity
      objects must have been retrieved at some point from the control or DDS, or
      created using EntityFactory
    syntax:
      content: >-
        function setEntities(entities: IEntity[], queryTokens: string[],
        operationScope?: IOperationScope)
      parameters:
        - id: entities
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.RestClient.IEntity[]'
          description: ''
        - id: queryTokens
          type:
            - 'string[]'
          description: ''
        - id: operationScope
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IOperationScope
          description: ''
          optional: true
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.showMruDropdown
    name: showMruDropdown
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function showMruDropdown()
      parameters: []
    module: VSS/Identities/Picker/Controls
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Controls.IdentityPickerSearchControl.VALID_INPUT_EVENT
    name: VALID_INPUT_EVENT
    fullName: VALID_INPUT_EVENT
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string VALID_INPUT_EVENT
      return:
        type:
          - string
    module: VSS/Identities/Picker/Controls
