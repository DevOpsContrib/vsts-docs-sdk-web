### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException
    name: WrappedException
    fullName: WrappedException
    children:
      - >-
        vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.customProperties
      - vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.errorCode
      - vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.eventId
      - vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.helpLink
      - >-
        vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.innerException
      - vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.message
      - vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.stackTrace
      - vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.typeKey
      - vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.typeName
    langs:
      - typeScript
    type: interface
    summary: ''
    source:
      path: vss.d.ts
      startLine: 35233
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/WebApi/Contracts
  - uid: >-
      vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.customProperties
    name: customProperties
    fullName: customProperties
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: '[key: string]: any customProperties'
      return:
        type:
          - '[key: string]: any'
  - uid: vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.errorCode
    name: errorCode
    fullName: errorCode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: number errorCode
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.eventId
    name: eventId
    fullName: eventId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: number eventId
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.helpLink
    name: helpLink
    fullName: helpLink
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string helpLink
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.innerException
    name: innerException
    fullName: innerException
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: >-
        @vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException
        innerException
      return:
        type:
          - '@vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException'
  - uid: vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.message
    name: message
    fullName: message
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string message
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.stackTrace
    name: stackTrace
    fullName: stackTrace
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string stackTrace
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.typeKey
    name: typeKey
    fullName: typeKey
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string typeKey
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.WebApi.Contracts.WrappedException.typeName
    name: typeName
    fullName: typeName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: string typeName
      return:
        type:
          - string
