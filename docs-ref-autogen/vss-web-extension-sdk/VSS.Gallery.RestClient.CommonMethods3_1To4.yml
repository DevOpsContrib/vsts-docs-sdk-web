### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4
    name: CommonMethods3_1To4
    fullName: CommonMethods3_1To4
    children:
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.constructor
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.getCategoryTree
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.getExtensionDailyStats
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.getExtensionDailyStatsAnonymous
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.getExtensionEvents
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.getExtensionReports
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.getGalleryUserSettings
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.getRootCategories
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.incrementExtensionDailyStat
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.publishExtensionEvents
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.setGalleryUserSettings
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3To4'
    source:
      path: vss.d.ts
      startLine: 23571
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.constructor
    name: CommonMethods3_1To4
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new CommonMethods3_1To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.getCategoryTree
    name: getCategoryTree
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function getCategoryTree(product: string, categoryId: string, lcid?:
        number, source?: string, productVersion?: string, skus?: string,
        subSkus?: string)
      parameters:
        - id: product
          type:
            - string
          description: ''
        - id: categoryId
          type:
            - string
          description: ''
        - id: lcid
          type:
            - number
          description: ''
          optional: true
        - id: source
          type:
            - string
          description: ''
          optional: true
        - id: productVersion
          type:
            - string
          description: ''
          optional: true
        - id: skus
          type:
            - string
          description: ''
          optional: true
        - id: subSkus
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.ProductCategory>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.getExtensionDailyStats
    name: getExtensionDailyStats
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function getExtensionDailyStats(publisherName: string, extensionName:
        string, days?: number, aggregate?: ExtensionStatsAggregateType,
        afterDate?: Date)
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: days
          type:
            - number
          description: ''
          optional: true
        - id: aggregate
          type:
            - ExtensionStatsAggregateType
          description: ''
          optional: true
        - id: afterDate
          type:
            - Date
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.ExtensionDailyStats>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.getExtensionDailyStatsAnonymous
    name: getExtensionDailyStatsAnonymous
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Preview API] This route/location id only supports HTTP POST anonymously,
      so that the page view daily stat can be incremented from Marketplace
      client. Trying to call GET on this route should result in an exception.
      Without this explicit implementation, calling GET on this public route
      invokes the above GET implementation GetExtensionDailyStats.
    syntax:
      content: >-
        function getExtensionDailyStatsAnonymous(publisherName: string,
        extensionName: string, version: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: version
          type:
            - string
          description: Version of the extension
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.ExtensionDailyStats>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.getExtensionEvents
    name: getExtensionEvents
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Preview API] Get install/uninstall events of an extension. If both count
      and afterDate parameters are specified, count takes precedence.
    syntax:
      content: >-
        function getExtensionEvents(publisherName: string, extensionName:
        string, count?: number, afterDate?: Date, include?: string,
        includeProperty?: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: count
          type:
            - number
          description: 'Count of events to fetch, applies to each event type.'
          optional: true
        - id: afterDate
          type:
            - Date
          description: Fetch events that occurred on or after this date
          optional: true
        - id: include
          type:
            - string
          description: >-
            Filter options. Supported values: install, uninstall, review,
            acquisition, sales. Default is to fetch all types of events
          optional: true
        - id: includeProperty
          type:
            - string
          description: >-
            Event properties to include. Currently only 'lastContactDetails' is
            supported for uninstall events
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.ExtensionEvents>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.getExtensionReports
    name: getExtensionReports
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Returns extension reports'
    syntax:
      content: >-
        function getExtensionReports(publisherName: string, extensionName:
        string, days?: number, count?: number, afterDate?: Date)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: days
          type:
            - number
          description: >-
            Last n days report. If afterDate and days are specified, days will
            take priority
          optional: true
        - id: count
          type:
            - number
          description: Number of events to be returned
          optional: true
        - id: afterDate
          type:
            - Date
          description: Use if you want to fetch events newer than the specified date
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<any>'
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.getGalleryUserSettings
    name: getGalleryUserSettings
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Get all setting entries for the given user/all-users scope'
    syntax:
      content: 'function getGalleryUserSettings(userScope: string, key?: string)'
      parameters:
        - id: userScope
          type:
            - string
          description: >-
            User-Scope at which to get the value. Should be "me" for the current
            user or "host" for all users.
        - id: key
          type:
            - string
          description: Optional key under which to filter all the entries
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<[key: string]: any>'
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.getRootCategories
    name: getRootCategories
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function getRootCategories(product: string, lcid?: number, source?:
        string, productVersion?: string, skus?: string, subSkus?: string)
      parameters:
        - id: product
          type:
            - string
          description: ''
        - id: lcid
          type:
            - number
          description: ''
          optional: true
        - id: source
          type:
            - string
          description: ''
          optional: true
        - id: productVersion
          type:
            - string
          description: ''
          optional: true
        - id: skus
          type:
            - string
          description: ''
          optional: true
        - id: subSkus
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Gallery.Contracts.ProductCategoriesResult>
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.incrementExtensionDailyStat
    name: incrementExtensionDailyStat
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Increments a daily statistic associated with the extension'
    syntax:
      content: >-
        function incrementExtensionDailyStat(publisherName: string,
        extensionName: string, version: string, statType: string)
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: version
          type:
            - string
          description: Version of the extension
        - id: statType
          type:
            - string
          description: Type of stat to increment
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.publishExtensionEvents
    name: publishExtensionEvents
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Preview API] API endpoint to publish extension install/uninstall events.
      This is meant to be invoked by EMS only for sending us data related to
      install/uninstall of an extension.
    syntax:
      content: 'function publishExtensionEvents(extensionEvents: ExtensionEvents[])'
      parameters:
        - id: extensionEvents
          type:
            - '@vss-web-extension-sdk.VSS.Gallery.Contracts.ExtensionEvents[]'
          description: ''
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    module: VSS/Gallery/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.CommonMethods3_1To4.setGalleryUserSettings
    name: setGalleryUserSettings
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Set all setting entries for the given user/all-users scope'
    syntax:
      content: >-
        function setGalleryUserSettings(entries: [key: string]: any, userScope:
        string)
      parameters:
        - id: entries
          type:
            - '[key: string]: any'
          description: A key-value pair of all settings that need to be set
        - id: userScope
          type:
            - string
          description: >-
            User-Scope at which to get the value. Should be "me" for the current
            user or "host" for all users.
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    module: VSS/Gallery/RestClient
