### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO
    name: GridO
    fullName: GridO<TOptions>
    children:
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.afterOnToggle
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.ancestorFolderToggled
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.beginFormatTable
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.cacheRows
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.collapseAll
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.collapseAllNodes
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.collapseByLevel
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.collapseNode
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.copySelectedItems
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.DATA_DRAGGING_ROWINFO
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.DATA_DROPPING_ROWINFO
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.disableDragDrop
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.disableEvent
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.enableDragDrop
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.enableEvent
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.enhancementTypeName
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.ensureDataIndexExpanded
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.EVENT_ROW_TOGGLED
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.EVENT_ROW_UPDATED
      - >-
        vss-web-extension-sdk.VSS.Controls.Grids.GridO.EVENT_SELECTED_INDEX_CHANGED
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.expandAll
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.expandAllNodes
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.expandByLevel
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.expandNode
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.focus
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getColumns
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getColumnText
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getColumnValue
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getContextMenuRowInfo
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getDraggingRowInfo
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getExpandStates
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getFocusElement
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getLastRowDataIndex
      - >-
        vss-web-extension-sdk.VSS.Controls.Grids.GridO.getPinAndFocusElementForContextMenu
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getRowData
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getRowInfo
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getSelectedDataIndex
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getSelectedDataIndices
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getSelectedRowIndex
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getSelectedRowIntoView
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getSelectionCount
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.getSortOrder
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.constructor
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.initialize
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.initializeDataSource
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.initializeOptions
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.layout
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.MAX_COPY_SIZE
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.nonAncestorFolderToggled
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.onContextMenu
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.onDeleteKey
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.onEnterKey
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.onGutterClick
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.onOpenRowDetail
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.onRowClick
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.onRowDoubleClick
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.onRowMouseDown
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.onRowMouseUp
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.onSort
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.PAYLOAD_SIZE
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.redraw
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.selectAll
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.selectedIndexChanged
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.selectionChanged
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.setColumnOptions
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.setDataSource
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.setDataSource_1
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.setSelectedDataIndex
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.setSelectedRowIndex
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.setupDragDrop
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.tryToggle
      - vss-web-extension-sdk.VSS.Controls.Grids.GridO.updateRow
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.Controls.Control<TOptions>'
    source:
      path: vss.d.ts
      startLine: 12226
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.afterOnToggle
    name: afterOnToggle
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function afterOnToggle(rowInfo: any)'
      parameters:
        - id: rowInfo
          type:
            - any
          description: ''
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.ancestorFolderToggled
    name: ancestorFolderToggled
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function ancestorFolderToggled(rowInfo: any)'
      parameters:
        - id: rowInfo
          type:
            - any
          description: ''
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.beginFormatTable
    name: beginFormatTable
    children: []
    type: method
    langs:
      - typeScript
    summary: Generates a table of the selected items in the grid.
    syntax:
      content: >-
        function beginFormatTable(operationCompleteCallback: IResultCallback,
        errorCallback?: IErrorCallback, formatterType?: function, options?: any)
      parameters:
        - id: operationCompleteCallback
          type:
            - '@vss-web-extension-sdk.IResultCallback'
          description: |-
            A callback function invoked when the
            current selection is available to the client for processing.
        - id: errorCallback
          type:
            - '@vss-web-extension-sdk.IErrorCallback'
          description: |+

          optional: true
        - id: formatterType
          type:
            - function
          description: ''
          optional: true
        - id: options
          type:
            - any
          description: ''
          optional: true
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.cacheRows
    name: cacheRows
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function cacheRows(aboveRange: any, visibleRange: any, belowRange: any)'
      parameters:
        - id: aboveRange
          type:
            - any
          description: ''
        - id: visibleRange
          type:
            - any
          description: ''
        - id: belowRange
          type:
            - any
          description: ''
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.collapseAll
    name: collapseAll
    children: []
    type: method
    langs:
      - typeScript
    summary: Collapses all rows of the grid (if source data is hierarchical).
    syntax:
      content: function collapseAll()
      parameters: []
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.collapseAllNodes
    name: collapseAllNodes
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function collapseAllNodes()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.collapseByLevel
    name: collapseByLevel
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Collapses all rows at or below specified level (if source data is
      hierarchical).
    syntax:
      content: 'function collapseByLevel(level: number)'
      parameters:
        - id: level
          type:
            - number
          description: Level to collapse.
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.collapseNode
    name: collapseNode
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function collapseNode(dataIndex: any)'
      parameters:
        - id: dataIndex
          type:
            - any
          description: ''
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.copySelectedItems
    name: copySelectedItems
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function copySelectedItems(formatterType?: function, copyAsHtml?:
        boolean, options?: any)
      parameters:
        - id: formatterType
          type:
            - function
          description: ''
          optional: true
        - id: copyAsHtml
          type:
            - boolean
          description: ''
          optional: true
        - id: options
          type:
            - any
          description: ''
          optional: true
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.DATA_DRAGGING_ROWINFO
    name: DATA_DRAGGING_ROWINFO
    fullName: DATA_DRAGGING_ROWINFO
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string DATA_DRAGGING_ROWINFO
      return:
        type:
          - string
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.DATA_DROPPING_ROWINFO
    name: DATA_DROPPING_ROWINFO
    fullName: DATA_DROPPING_ROWINFO
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string DATA_DROPPING_ROWINFO
      return:
        type:
          - string
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.disableDragDrop
    name: disableDragDrop
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function disableDragDrop()
      parameters: []
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.disableEvent
    name: disableEvent
    children: []
    type: method
    langs:
      - typeScript
    summary: Disables raising the custom event with the provided event name.
    syntax:
      content: 'function disableEvent(eventName: string)'
      parameters:
        - id: eventName
          type:
            - string
          description: |
            Name of the event to disable.
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.enableDragDrop
    name: enableDragDrop
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function enableDragDrop()
      parameters: []
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.enableEvent
    name: enableEvent
    children: []
    type: method
    langs:
      - typeScript
    summary: Enables raising the custom event with the provided event name.
    syntax:
      content: 'function enableEvent(eventName: string)'
      parameters:
        - id: eventName
          type:
            - string
          description: |
            Name of the event to enable.
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.enhancementTypeName
    name: enhancementTypeName
    fullName: enhancementTypeName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string enhancementTypeName
      return:
        type:
          - string
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.ensureDataIndexExpanded
    name: ensureDataIndexExpanded
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Ensures that an item (identified by a data index) has an associated row by

      expanding any enclosing collapsed rows. Returns the rowIndex of the
      associated row.
    syntax:
      content: 'function ensureDataIndexExpanded(dataIndex: number)'
      parameters:
        - id: dataIndex
          type:
            - number
          description: The data index of the item to ensure is expanded
      return:
        type:
          - number
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.EVENT_ROW_TOGGLED
    name: EVENT_ROW_TOGGLED
    fullName: EVENT_ROW_TOGGLED
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string EVENT_ROW_TOGGLED
      return:
        type:
          - string
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.EVENT_ROW_UPDATED
    name: EVENT_ROW_UPDATED
    fullName: EVENT_ROW_UPDATED
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string EVENT_ROW_UPDATED
      return:
        type:
          - string
    module: VSS/Controls/Grids
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Grids.GridO.EVENT_SELECTED_INDEX_CHANGED
    name: EVENT_SELECTED_INDEX_CHANGED
    fullName: EVENT_SELECTED_INDEX_CHANGED
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string EVENT_SELECTED_INDEX_CHANGED
      return:
        type:
          - string
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.expandAll
    name: expandAll
    children: []
    type: method
    langs:
      - typeScript
    summary: Expands all rows of the grid (if source data is hierarchical).
    syntax:
      content: function expandAll()
      parameters: []
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.expandAllNodes
    name: expandAllNodes
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function expandAllNodes()
      parameters: []
      return:
        type:
          - boolean
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.expandByLevel
    name: expandByLevel
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Expands all rows at or below specified level (if source data is
      hierarchical).
    syntax:
      content: 'function expandByLevel(level: number)'
      parameters:
        - id: level
          type:
            - number
          description: Level to expand.
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.expandNode
    name: expandNode
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function expandNode(dataIndex: any)'
      parameters:
        - id: dataIndex
          type:
            - any
          description: ''
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.focus
    name: focus
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function focus(timeout?: number)'
      parameters:
        - id: timeout
          type:
            - number
          description: |+

          optional: true
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getColumns
    name: getColumns
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the columns currently being displayed in the grid.
    syntax:
      content: function getColumns()
      parameters: []
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getColumnText
    name: getColumnText
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getColumnText(dataIndex: any, column: any, columnOrder?: any)'
      parameters:
        - id: dataIndex
          type:
            - any
          description: ''
        - id: column
          type:
            - any
          description: ''
        - id: columnOrder
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getColumnValue
    name: getColumnValue
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Gets the value for a column. The default use of the return value is to
      convert it to a string and set it as the cell's text value.
    syntax:
      content: >-
        function getColumnValue(dataIndex: number, columnIndex: number,
        columnOrder?: number)
      parameters:
        - id: dataIndex
          type:
            - number
          description: The index for the row data in the data source
        - id: columnIndex
          type:
            - number
          description: The index of the column's data in the row's data array
        - id: columnOrder
          type:
            - number
          description: >-
            The index of the column in the grid's column array. This is the
            current visible order of the column
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getContextMenuRowInfo
    name: getContextMenuRowInfo
    children: []
    type: method
    langs:
      - typeScript
    summary: |
      Gets info about the row on which context menu is opened.
      If no context menu is open, returns null.
    syntax:
      content: function getContextMenuRowInfo()
      parameters: []
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.Grids.IGridRowInfo'
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getDraggingRowInfo
    name: getDraggingRowInfo
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the row information for the item currently being dragged.
    syntax:
      content: function getDraggingRowInfo()
      parameters: []
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getExpandStates
    name: getExpandStates
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the collection of expand states for the grid.
    syntax:
      content: function getExpandStates()
      parameters: []
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getFocusElement
    name: getFocusElement
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Gets the Focus Element for the Grid.

      This is the actual element that receives focus and that all the event
      bindings, like 'keydown', are bound to.
    syntax:
      content: function getFocusElement()
      parameters: []
      return:
        type:
          - JQuery
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getLastRowDataIndex
    name: getLastRowDataIndex
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getLastRowDataIndex()
      parameters: []
      return:
        type:
          - number
    module: VSS/Controls/Grids
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Grids.GridO.getPinAndFocusElementForContextMenu
    name: getPinAndFocusElementForContextMenu
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getPinAndFocusElementForContextMenu(eventArgs: any)'
      parameters:
        - id: eventArgs
          type:
            - any
          description: ''
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getRowData
    name: getRowData
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the data being used to display the row at the provided data index.
    syntax:
      content: 'function getRowData(dataIndex: number)'
      parameters:
        - id: dataIndex
          type:
            - number
          description: The data index for the record to retrieve.
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getRowInfo
    name: getRowInfo
    children: []
    type: method
    langs:
      - typeScript
    summary: >
      Gets the information about a row associated with the given data index.

      Returns a rowInfo object containing rowIndex, dataIndex and a jQuery
      wrapper for the actual row.
    syntax:
      content: 'function getRowInfo(dataIndex: number)'
      parameters:
        - id: dataIndex
          type:
            - number
          description: The data index for the record to retrieve.
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.Grids.IGridRowInfo'
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getSelectedDataIndex
    name: getSelectedDataIndex
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getSelectedDataIndex()
      parameters: []
      return:
        type:
          - number
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getSelectedDataIndices
    name: getSelectedDataIndices
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getSelectedDataIndices()
      parameters: []
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getSelectedRowIndex
    name: getSelectedRowIndex
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getSelectedRowIndex()
      parameters: []
      return:
        type:
          - number
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getSelectedRowIntoView
    name: getSelectedRowIntoView
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getSelectedRowIntoView(force?: boolean)'
      parameters:
        - id: force
          type:
            - boolean
          description: |+

          optional: true
      return:
        type:
          - boolean
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getSelectionCount
    name: getSelectionCount
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the number of selected items.
    syntax:
      content: function getSelectionCount()
      parameters: []
      return:
        type:
          - number
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.getSortOrder
    name: getSortOrder
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the current sort order being used in the grid.
    syntax:
      content: function getSortOrder()
      parameters: []
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.constructor
    name: GridO
    children: []
    type: constructor
    langs:
      - typeScript
    summary: Creates new Grid Control
    syntax:
      content: 'new GridO(options?: TOptions)'
      parameters:
        - id: options
          type:
            - TOptions
          description: >
            The initialization options for the grid which have the following
            properties

               "columns" is a required property containing the array of grid column descriptors that have the following structure:
               {
                   index: The index for the
                   text:      column header text, string, optional, default: "",
                   width:     width in pixels of the column, number, optional, default: 100,
                   canSortBy: true if the grid can be sorted by the column, boolean, optional, default: true
                   canMove: true if this column can be moved (has effect only if allowMoveColumns is set to true for the grid as well), boolean, optional, default: true
                   getCellContents: function that returns cell contents, function, optional, default: this._drawCell
                       The function takes the same parameters as _drawCell and should return a jQuery object
                       that represents the cell's contents. The first element will be appended to the row.
                       If the function returns null or undefined nothing will be appended for that cell.
                   getHeaderCellContents: function that returns column header cell contents, function, optional, default: this._drawHeaderCellValue
                       The function takes the same parameters as _drawHeaderCellValue and should return a jQuery object
                       that represents the cell's contents. The first element will be appended to the header cell's contents.
                       If the function returns null or undefined nothing will be appended for that header cell.
                   getColumnValue: function that returns the value for a cell contents, function, optional, default: this.getColumnValue;
                       The return value of the function will be converted to a string an added as the cell contents.
               }
               "enabledEvents" is an optional property containing an object with properties for each of the enabled events.
               {
                   GridO.EVENT_ROW_UPDATED: true
               }
          optional: true
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.initialize
    name: initialize
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function initialize()
      parameters: []
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.initializeDataSource
    name: initializeDataSource
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function initializeDataSource(suppressRedraw?: boolean)'
      parameters:
        - id: suppressRedraw
          type:
            - boolean
          description: ''
          optional: true
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.initializeOptions
    name: initializeOptions
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function initializeOptions(options?: TOptions)'
      parameters:
        - id: options
          type:
            - TOptions
          description: |+

          optional: true
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.layout
    name: layout
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function layout()
      parameters: []
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.MAX_COPY_SIZE
    name: MAX_COPY_SIZE
    fullName: MAX_COPY_SIZE
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static number MAX_COPY_SIZE
      return:
        type:
          - number
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.nonAncestorFolderToggled
    name: nonAncestorFolderToggled
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function nonAncestorFolderToggled(rowInfo: any, currSelectedDataIndex:
        any)
      parameters:
        - id: rowInfo
          type:
            - any
          description: ''
        - id: currSelectedDataIndex
          type:
            - any
          description: ''
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.onContextMenu
    name: onContextMenu
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onContextMenu(eventArgs: any)'
      parameters:
        - id: eventArgs
          type:
            - any
          description: ''
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.onDeleteKey
    name: onDeleteKey
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onDeleteKey(eventArgs: any)'
      parameters:
        - id: eventArgs
          type:
            - any
          description: ''
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.onEnterKey
    name: onEnterKey
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onEnterKey(eventArgs: any)'
      parameters:
        - id: eventArgs
          type:
            - any
          description: ''
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.onGutterClick
    name: onGutterClick
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onGutterClick(eventArgs: any)'
      parameters:
        - id: eventArgs
          type:
            - any
          description: ''
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.onOpenRowDetail
    name: onOpenRowDetail
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onOpenRowDetail(eventArgs: any)'
      parameters:
        - id: eventArgs
          type:
            - any
          description: ''
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.onRowClick
    name: onRowClick
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onRowClick(eventArgs: any)'
      parameters:
        - id: eventArgs
          type:
            - any
          description: ''
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.onRowDoubleClick
    name: onRowDoubleClick
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onRowDoubleClick(eventArgs: any)'
      parameters:
        - id: eventArgs
          type:
            - any
          description: ''
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.onRowMouseDown
    name: onRowMouseDown
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onRowMouseDown(eventArgs: any)'
      parameters:
        - id: eventArgs
          type:
            - any
          description: ''
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.onRowMouseUp
    name: onRowMouseUp
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onRowMouseUp(eventArgs: JQueryEventObject)'
      parameters:
        - id: eventArgs
          type:
            - JQueryEventObject
          description: ''
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.onSort
    name: onSort
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function onSort(sortOrder: any, sortColumns?: any)'
      parameters:
        - id: sortOrder
          type:
            - any
          description: ''
        - id: sortColumns
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.PAYLOAD_SIZE
    name: PAYLOAD_SIZE
    fullName: PAYLOAD_SIZE
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static number PAYLOAD_SIZE
      return:
        type:
          - number
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.redraw
    name: redraw
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function redraw()
      parameters: []
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.selectAll
    name: selectAll
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function selectAll()
      parameters: []
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.selectedIndexChanged
    name: selectedIndexChanged
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function selectedIndexChanged(selectedRowIndex: any, selectedDataIndex:
        any)
      parameters:
        - id: selectedRowIndex
          type:
            - any
          description: ''
        - id: selectedDataIndex
          type:
            - any
          description: ''
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.selectionChanged
    name: selectionChanged
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function selectionChanged(selectedIndex: any, selectedCount: any,
        selectedRows: any)
      parameters:
        - id: selectedIndex
          type:
            - any
          description: ''
        - id: selectedCount
          type:
            - any
          description: ''
        - id: selectedRows
          type:
            - any
          description: ''
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.setColumnOptions
    name: setColumnOptions
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Set new column info for the column associated with the specified column
      name.
    syntax:
      content: 'function setColumnOptions(columnName: string, options?: IGridColumn)'
      parameters:
        - id: columnName
          type:
            - string
          description: Name of the column to change the options.
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.Controls.Grids.IGridColumn'
          description: New column options.
          optional: true
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.setDataSource
    name: setDataSource
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets the source of the grid using GridSource object.
    syntax:
      content: 'function setDataSource(source: IGridSource)'
      parameters:
        - id: source
          type:
            - '@vss-web-extension-sdk.VSS.Controls.Grids.IGridSource'
          description: GridSource object to set the grid source.
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.setDataSource_1
    name: setDataSource
    children: []
    type: method
    langs:
      - typeScript
    summary: Sets the source of the grid using GridSource object.
    syntax:
      content: >-
        function setDataSource(source?: any[], expandStates?: any[], columns?:
        IGridColumn[], sortOrder?: IGridSortOrder[], selectedIndex?: number,
        suppressRedraw?: boolean)
      parameters:
        - id: source
          type:
            - 'any[]'
          description: New source for the grid (See grid options for details).
          optional: true
        - id: expandStates
          type:
            - 'any[]'
          description: >-
            Expand states for the new source. If source is not in hierarchical
            structure, specify null (See grid options for details).
          optional: true
        - id: columns
          type:
            - '@vss-web-extension-sdk.VSS.Controls.Grids.IGridColumn[]'
          description: New columns for the grid (See grid options for details).
          optional: true
        - id: sortOrder
          type:
            - '@vss-web-extension-sdk.VSS.Controls.Grids.IGridSortOrder[]'
          description: New sort order for the grid (See grid options for details).
          optional: true
        - id: selectedIndex
          type:
            - number
          description: Index of the rows to be selected after new data source is set.
          optional: true
        - id: suppressRedraw
          type:
            - boolean
          description: 'If true, grid is not redrawn after data source is set.'
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.setSelectedDataIndex
    name: setSelectedDataIndex
    children: []
    type: method
    langs:
      - typeScript
    summary: |-
      Sets the selected item in the grid by the data index.
      Optionally ensure that the item is not hidden by collapsed rows.
    syntax:
      content: 'function setSelectedDataIndex(dataIndex: number, expandNodes?: boolean)'
      parameters:
        - id: dataIndex
          type:
            - number
          description: The data index of item to show
        - id: expandNodes
          type:
            - boolean
          description: |
            If true, all containing collapsed nodes will be expanded
          optional: true
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.setSelectedRowIndex
    name: setSelectedRowIndex
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setSelectedRowIndex(selectedRowIndex: any)'
      parameters:
        - id: selectedRowIndex
          type:
            - any
          description: ''
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.setupDragDrop
    name: setupDragDrop
    children: []
    type: method
    langs:
      - typeScript
    summary: Setup the provided draggable and droppable options
    syntax:
      content: 'function setupDragDrop(draggableOptions: any, droppableOptions: any)'
      parameters:
        - id: draggableOptions
          type:
            - any
          description: ''
        - id: droppableOptions
          type:
            - any
          description: ''
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.tryToggle
    name: tryToggle
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Expand or collapse node(s), and set selection focus at a given target
      index or at the current selected index as default behavior.
    syntax:
      content: >-
        function tryToggle(expand: boolean, applyToAllRows: boolean,
        targetIndex?: number)
      parameters:
        - id: expand
          type:
            - boolean
          description: 'If true, expands the node, otherwise collapsed.'
        - id: applyToAllRows
          type:
            - boolean
          description: >-
            True to expand or collapse all nodes, false to expand or collapse
            the node at a given target index, or at the current selected index
            as default behavior.
        - id: targetIndex
          type:
            - number
          description: 'The node index to be expanded or collapsed, and get selection focus.'
          optional: true
      return:
        type:
          - boolean
    module: VSS/Controls/Grids
  - uid: vss-web-extension-sdk.VSS.Controls.Grids.GridO.updateRow
    name: updateRow
    children: []
    type: method
    langs:
      - typeScript
    summary: Updates the row identified by the given rowIndex.
    syntax:
      content: >-
        function updateRow(rowIndex: number, dataIndex?: number,
        columnsToUpdate?: [key: number]: boolean)
      parameters:
        - id: rowIndex
          type:
            - number
          description: Index of row to be updated
        - id: dataIndex
          type:
            - number
          description: DataIndex of row to be updated
          optional: true
        - id: columnsToUpdate
          type:
            - '[key: number]: boolean'
          description: |
            HashSet of column indices. If given,
            only columns in this set will be updated.
          optional: true
    module: VSS/Controls/Grids
