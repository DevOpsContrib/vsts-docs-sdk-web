### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService
    name: HubsService
    fullName: HubsService
    children:
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getDefaultHubForHubGroup
      - vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getHubById
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getHubGroupById
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getHubGroups
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getHubNavigateHandler
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getHubsByGroupId
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getPinnedHubsByGroupId
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getPinningPreferences
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getSelectedHubGroupId
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getSelectedHubId
      - vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.constructor
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.isHubGroupPinned
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.isHubGroupUnpinned
      - vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.isHubPinned
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.navigateToHub
      - vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.pinHub
      - vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.pinHubGroup
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.replaceCurrentHubState
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.saveDefaultHubForGroup
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.triggerSelectedHubChangedEvent
      - vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.unpinHub
      - >-
        vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.unpinHubGroup
    langs:
      - typeScript
    type: class
    summary: Service for managing the hubs on the current page
    source:
      path: vss.d.ts
      startLine: 28527
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Navigation/HubsService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getDefaultHubForHubGroup
    name: getDefaultHubForHubGroup
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the default hub to use for the specified hub group
    syntax:
      content: >-
        function getDefaultHubForHubGroup(hubGroup: HubGroup, hubGroupHubs?:
        Hub[])
      parameters:
        - id: hubGroup
          type:
            - '@vss-web-extension-sdk.HubGroup'
          description: The hub group whose default hub to return
        - id: hubGroupHubs
          type:
            - '@vss-web-extension-sdk.Hub[]'
          description: |
            Optional list of the hubs to consider for the group.
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.Hub'
    module: VSS/Navigation/HubsService
  - uid: vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getHubById
    name: getHubById
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the hub by its id
    syntax:
      content: 'function getHubById(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: |
            Id of the hub to return
      return:
        type:
          - '@vss-web-extension-sdk.Hub'
    module: VSS/Navigation/HubsService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getHubGroupById
    name: getHubGroupById
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the hub group by its id.
    syntax:
      content: 'function getHubGroupById(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: Id of the hub group to return.
      return:
        type:
          - '@vss-web-extension-sdk.HubGroup'
    module: VSS/Navigation/HubsService
  - uid: vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getHubGroups
    name: getHubGroups
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets all hub groups
    syntax:
      content: function getHubGroups()
      parameters: []
    module: VSS/Navigation/HubsService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getHubNavigateHandler
    name: getHubNavigateHandler
    children: []
    type: method
    langs:
      - typeScript
    summary: Get an event handler to navigate to the specified hub
    syntax:
      content: 'function getHubNavigateHandler(hubId: string, url?: string)'
      parameters:
        - id: hubId
          type:
            - string
          description: Id of the hub to navigate to
        - id: url
          type:
            - string
          description: >
            Optional specific url for the hub (the hub's default url if not
            specified)
          optional: true
    module: VSS/Navigation/HubsService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getHubsByGroupId
    name: getHubsByGroupId
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the hubs in the specified hub group
    syntax:
      content: >-
        function getHubsByGroupId(id: string, excludeContributed?: boolean,
        excludeBuiltIn?: boolean, includeHidden?: boolean)
      parameters:
        - id: id
          type:
            - string
          description: Id of the hub group
        - id: excludeContributed
          type:
            - boolean
          description: 'If true, exclude contributed hubs'
          optional: true
        - id: excludeBuiltIn
          type:
            - boolean
          description: 'If true, exclude built-in hubs'
          optional: true
        - id: includeHidden
          type:
            - boolean
          description: |
            If true, exclude hidden hubs
          optional: true
    module: VSS/Navigation/HubsService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getPinnedHubsByGroupId
    name: getPinnedHubsByGroupId
    children: []
    type: method
    langs:
      - typeScript
    summary: 'Gets non-built in, pinned hubs.'
    syntax:
      content: 'function getPinnedHubsByGroupId(hubGroupId: string)'
      parameters:
        - id: hubGroupId
          type:
            - string
          description: |
            Id of the hub group
    module: VSS/Navigation/HubsService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getPinningPreferences
    name: getPinningPreferences
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getPinningPreferences()
      parameters: []
      return:
        type:
          - '@vss-web-extension-sdk.PinningPreferences'
    module: VSS/Navigation/HubsService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getSelectedHubGroupId
    name: getSelectedHubGroupId
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the id of the selected hub group
    syntax:
      content: function getSelectedHubGroupId()
      parameters: []
      return:
        type:
          - string
    module: VSS/Navigation/HubsService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.getSelectedHubId
    name: getSelectedHubId
    children: []
    type: method
    langs:
      - typeScript
    summary: Get the id of the selected hub
    syntax:
      content: function getSelectedHubId()
      parameters: []
      return:
        type:
          - string
    module: VSS/Navigation/HubsService
  - uid: vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.constructor
    name: HubsService
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: new HubsService()
      parameters: []
    module: VSS/Navigation/HubsService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.isHubGroupPinned
    name: isHubGroupPinned
    children: []
    type: method
    langs:
      - typeScript
    summary: Is the specified hub group explicitly pinned by the user?
    syntax:
      content: 'function isHubGroupPinned(hubGroup: HubGroup)'
      parameters:
        - id: hubGroup
          type:
            - '@vss-web-extension-sdk.HubGroup'
          description: |
            The hub group to check
      return:
        type:
          - boolean
    module: VSS/Navigation/HubsService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.isHubGroupUnpinned
    name: isHubGroupUnpinned
    children: []
    type: method
    langs:
      - typeScript
    summary: Is the specified hub group explicitly unpinned by the user?
    syntax:
      content: 'function isHubGroupUnpinned(hubGroup: HubGroup)'
      parameters:
        - id: hubGroup
          type:
            - '@vss-web-extension-sdk.HubGroup'
          description: |
            Hub group to check
      return:
        type:
          - boolean
    module: VSS/Navigation/HubsService
  - uid: vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.isHubPinned
    name: isHubPinned
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Returns true if the specified hub has not been explicitly unpinned by the
      current user
    syntax:
      content: 'function isHubPinned(hub: Hub)'
      parameters:
        - id: hub
          type:
            - '@vss-web-extension-sdk.Hub'
          description: |
            The hub to check
      return:
        type:
          - boolean
    module: VSS/Navigation/HubsService
  - uid: vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.navigateToHub
    name: navigateToHub
    children: []
    type: method
    langs:
      - typeScript
    summary: Navigate the page to the specified hub
    syntax:
      content: 'function navigateToHub(hubId: string, url?: string)'
      parameters:
        - id: hubId
          type:
            - string
          description: Id of the hub to navigate to
        - id: url
          type:
            - string
          description: >
            (Optional) Specific url to navigate to. The hub's default url if not
            specified.
          optional: true
    module: VSS/Navigation/HubsService
  - uid: vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.pinHub
    name: pinHub
    children: []
    type: method
    langs:
      - typeScript
    summary: Pin the specified hub for the current user
    syntax:
      content: 'function pinHub(hub: Hub)'
      parameters:
        - id: hub
          type:
            - '@vss-web-extension-sdk.Hub'
          description: |
            Hub to pin
    module: VSS/Navigation/HubsService
  - uid: vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.pinHubGroup
    name: pinHubGroup
    children: []
    type: method
    langs:
      - typeScript
    summary: Pin the hub group for the current user
    syntax:
      content: 'function pinHubGroup(hubGroup: HubGroup)'
      parameters:
        - id: hubGroup
          type:
            - '@vss-web-extension-sdk.HubGroup'
          description: |
            Hub group to pin
    module: VSS/Navigation/HubsService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.replaceCurrentHubState
    name: replaceCurrentHubState
    children: []
    type: method
    langs:
      - typeScript
    summary: Replace current hub state
    syntax:
      content: 'function replaceCurrentHubState(hubId: string, url?: string)'
      parameters:
        - id: hubId
          type:
            - string
          description: Id of the hub to navigate to
        - id: url
          type:
            - string
          description: >
            (Optional) Specific url to navigate to. The hub's default url if not
            specified.
          optional: true
    module: VSS/Navigation/HubsService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.saveDefaultHubForGroup
    name: saveDefaultHubForGroup
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Saves details of the current route to Local Storage, keyed off of the Hub
      Group ID.
    syntax:
      content: 'function saveDefaultHubForGroup(hubGroupId: string, hubId: string)'
      parameters:
        - id: hubGroupId
          type:
            - string
          description: The id of the hub group
        - id: hubId
          type:
            - string
          description: >
            The id of the hub to save/remember as the default hub for the hub
            group for this user
    module: VSS/Navigation/HubsService
  - uid: >-
      vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.triggerSelectedHubChangedEvent
    name: triggerSelectedHubChangedEvent
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      Trigger the global selected-hub-changed event, letting the system know
      that the current hub

      has changed, so all navigation-related elements should be updated
      appropriately.
    syntax:
      content: 'function triggerSelectedHubChangedEvent(hubId: string)'
      parameters:
        - id: hubId
          type:
            - string
          description: |
            The id of the newly selected hub
    module: VSS/Navigation/HubsService
  - uid: vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.unpinHub
    name: unpinHub
    children: []
    type: method
    langs:
      - typeScript
    summary: Unpin the specified hub for the current user
    syntax:
      content: 'function unpinHub(hub: Hub)'
      parameters:
        - id: hub
          type:
            - '@vss-web-extension-sdk.Hub'
          description: |
            Hub to unpin
    module: VSS/Navigation/HubsService
  - uid: vss-web-extension-sdk.VSS.Navigation.HubsService.HubsService.unpinHubGroup
    name: unpinHubGroup
    children: []
    type: method
    langs:
      - typeScript
    summary: Unpin the hub group for the current user
    syntax:
      content: 'function unpinHubGroup(hubGroup: HubGroup)'
      parameters:
        - id: hubGroup
          type:
            - '@vss-web-extension-sdk.HubGroup'
          description: |
            Hub group to unpin
    module: VSS/Navigation/HubsService
