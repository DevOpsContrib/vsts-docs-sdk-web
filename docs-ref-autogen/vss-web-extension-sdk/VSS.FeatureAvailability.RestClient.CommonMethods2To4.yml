### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.FeatureAvailability.RestClient.CommonMethods2To4
    name: CommonMethods2To4
    fullName: CommonMethods2To4
    children:
      - >-
        vss-web-extension-sdk.VSS.FeatureAvailability.RestClient.CommonMethods2To4.constructor
      - >-
        vss-web-extension-sdk.VSS.FeatureAvailability.RestClient.CommonMethods2To4.getAllFeatureFlags
      - >-
        vss-web-extension-sdk.VSS.FeatureAvailability.RestClient.CommonMethods2To4.getFeatureFlagByName
      - >-
        vss-web-extension-sdk.VSS.FeatureAvailability.RestClient.CommonMethods2To4.getFeatureFlagByNameAndUserEmail
      - >-
        vss-web-extension-sdk.VSS.FeatureAvailability.RestClient.CommonMethods2To4.getFeatureFlagByNameAndUserId
      - >-
        vss-web-extension-sdk.VSS.FeatureAvailability.RestClient.CommonMethods2To4.updateFeatureFlag
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.WebApi.RestClient.VssHttpClient'
    source:
      path: vss.d.ts
      startLine: 20436
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/FeatureAvailability/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.FeatureAvailability.RestClient.CommonMethods2To4.constructor
    name: CommonMethods2To4
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new CommonMethods2To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
    module: VSS/FeatureAvailability/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.FeatureAvailability.RestClient.CommonMethods2To4.getAllFeatureFlags
    name: getAllFeatureFlags
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Preview API] Retrieve a listing of all feature flags and their current
      states for a user
    syntax:
      content: 'function getAllFeatureFlags(userEmail?: string)'
      parameters:
        - id: userEmail
          type:
            - string
          description: The email of the user to check
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.FeatureAvailability.Contracts.FeatureFlag[]>
    module: VSS/FeatureAvailability/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.FeatureAvailability.RestClient.CommonMethods2To4.getFeatureFlagByName
    name: getFeatureFlagByName
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Preview API] Retrieve information on a single feature flag and its
      current states
    syntax:
      content: 'function getFeatureFlagByName(name: string)'
      parameters:
        - id: name
          type:
            - string
          description: The name of the feature to retrieve
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.FeatureAvailability.Contracts.FeatureFlag>
    module: VSS/FeatureAvailability/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.FeatureAvailability.RestClient.CommonMethods2To4.getFeatureFlagByNameAndUserEmail
    name: getFeatureFlagByNameAndUserEmail
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Preview API] Retrieve information on a single feature flag and its
      current states for a user
    syntax:
      content: >-
        function getFeatureFlagByNameAndUserEmail(name: string, userEmail:
        string)
      parameters:
        - id: name
          type:
            - string
          description: The name of the feature to retrieve
        - id: userEmail
          type:
            - string
          description: The email of the user to check
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.FeatureAvailability.Contracts.FeatureFlag>
    module: VSS/FeatureAvailability/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.FeatureAvailability.RestClient.CommonMethods2To4.getFeatureFlagByNameAndUserId
    name: getFeatureFlagByNameAndUserId
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Preview API] Retrieve information on a single feature flag and its
      current states for a user
    syntax:
      content: 'function getFeatureFlagByNameAndUserId(name: string, userId: string)'
      parameters:
        - id: name
          type:
            - string
          description: The name of the feature to retrieve
        - id: userId
          type:
            - string
          description: The id of the user to check
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.FeatureAvailability.Contracts.FeatureFlag>
    module: VSS/FeatureAvailability/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.FeatureAvailability.RestClient.CommonMethods2To4.updateFeatureFlag
    name: updateFeatureFlag
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Change the state of an individual feature flag for a name'
    syntax:
      content: >-
        function updateFeatureFlag(state: FeatureFlagPatch, name: string,
        userEmail?: string, checkFeatureExists?: boolean,
        setAtApplicationLevelAlso?: boolean)
      parameters:
        - id: state
          type:
            - >-
              @vss-web-extension-sdk.VSS.FeatureAvailability.Contracts.FeatureFlagPatch
          description: State that should be set
        - id: name
          type:
            - string
          description: The name of the feature to change
        - id: userEmail
          type:
            - string
          description: ''
          optional: true
        - id: checkFeatureExists
          type:
            - boolean
          description: Checks if the feature exists before setting the state
          optional: true
        - id: setAtApplicationLevelAlso
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.FeatureAvailability.Contracts.FeatureFlag>
    module: VSS/FeatureAvailability/RestClient
