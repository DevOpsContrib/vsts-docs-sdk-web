### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.WikiHttpClient4
    name: WikiHttpClient4
    fullName: WikiHttpClient4
    children:
      - vss-web-extension-sdk.WikiHttpClient4.createUpdate
      - vss-web-extension-sdk.WikiHttpClient4.createWiki
      - vss-web-extension-sdk.WikiHttpClient4.getPages
      - vss-web-extension-sdk.WikiHttpClient4.getPageText
      - vss-web-extension-sdk.WikiHttpClient4.getPageZip
      - vss-web-extension-sdk.WikiHttpClient4.getWikis
      - vss-web-extension-sdk.WikiHttpClient4.constructor
      - vss-web-extension-sdk.WikiHttpClient4._beginGetLocation
      - vss-web-extension-sdk.WikiHttpClient4._beginRequest
      - vss-web-extension-sdk.WikiHttpClient4._beginRequestWithAjaxResult
      - vss-web-extension-sdk.WikiHttpClient4._issueAjaxRequest
      - vss-web-extension-sdk.WikiHttpClient4._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
  - uid: vss-web-extension-sdk.WikiHttpClient4.createUpdate
    name: >-
      createUpdate(update: WikiUpdate, project: string, wikiId: string,
      versionDescriptor?: GitVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Creates the wiki page and attachments update on the given
      version of the wiki.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.WikiUpdate
          type:
            - WikiUpdate
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: wikiId
          type:
            - string
          description: ID of the wiki in which the update is to be made.
        - id: vss-web-extension-sdk.GitVersionDescriptor
          type:
            - GitVersionDescriptor
          description: >-
            Version descriptor for the version on which the update is to be
            made. Defaults to deafult branch (Optional)
          optional: true
      content: >-
        function createUpdate(update: WikiUpdate, project: string, wikiId:
        string, versionDescriptor?: GitVersionDescriptor)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.WikiHttpClient4.createWiki
    name: 'createWiki(wikiToCreate: GitRepository, project?: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Creates a backing git repository and does the intiailization
      of the wiki for the given project.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.GitRepository
          type:
            - GitRepository
          description: >-
            Object containing name of the wiki to be created and the ID of the
            project in which the wiki is to be created. The provided name will
            also be used in the name of the backing git repository. If this is
            empty, the name will be auto generated.
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function createWiki(wikiToCreate: GitRepository, project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.WikiHttpClient4.getPages
    name: >-
      getPages(project: string, wikiId: string, path?: string, recursionLevel?:
      function, versionDescriptor?: GitVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Gets the wiki pages metadata/content under the provided page
      path.
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: wikiId
          type:
            - string
          description: ID of the wiki from which the page is to be retrieved.
        - id: path
          type:
            - string
          description: Path from which the pages are to retrieved.
          optional: true
        - id: recursionLevel
          type:
            - function
          description: Recusion level for the page retrieval. Defaults to None (Optional).
          optional: true
        - id: vss-web-extension-sdk.GitVersionDescriptor
          type:
            - GitVersionDescriptor
          description: >-
            Version descriptor for the page. Defaults to deafult branch
            (Optional).
          optional: true
      content: >-
        function getPages(project: string, wikiId: string, path?: string,
        recursionLevel?: function, versionDescriptor?: GitVersionDescriptor)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.WikiHttpClient4.getPageText
    name: >-
      getPageText(project: string, wikiId: string, path?: string,
      recursionLevel?: function, versionDescriptor?: GitVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Gets the wiki pages metadata/content under the provided page
      path.
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: wikiId
          type:
            - string
          description: ID of the wiki from which the page is to be retrieved.
        - id: path
          type:
            - string
          description: Path from which the pages are to retrieved.
          optional: true
        - id: recursionLevel
          type:
            - function
          description: Recusion level for the page retrieval. Defaults to None (Optional).
          optional: true
        - id: vss-web-extension-sdk.GitVersionDescriptor
          type:
            - GitVersionDescriptor
          description: >-
            Version descriptor for the page. Defaults to deafult branch
            (Optional).
          optional: true
      content: >-
        function getPageText(project: string, wikiId: string, path?: string,
        recursionLevel?: function, versionDescriptor?: GitVersionDescriptor)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.WikiHttpClient4.getPageZip
    name: >-
      getPageZip(project: string, wikiId: string, path?: string,
      recursionLevel?: function, versionDescriptor?: GitVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Gets the wiki pages metadata/content under the provided page
      path.
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: wikiId
          type:
            - string
          description: ID of the wiki from which the page is to be retrieved.
        - id: path
          type:
            - string
          description: Path from which the pages are to retrieved.
          optional: true
        - id: recursionLevel
          type:
            - function
          description: Recusion level for the page retrieval. Defaults to None (Optional).
          optional: true
        - id: vss-web-extension-sdk.GitVersionDescriptor
          type:
            - GitVersionDescriptor
          description: >-
            Version descriptor for the page. Defaults to deafult branch
            (Optional).
          optional: true
      content: >-
        function getPageZip(project: string, wikiId: string, path?: string,
        recursionLevel?: function, versionDescriptor?: GitVersionDescriptor)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.WikiHttpClient4.getWikis
    name: 'getWikis(project?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Retrieves wiki repositories in a project or collection.'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function getWikis(project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.WikiHttpClient4.constructor
    name: 'WikiHttpClient4(rootRequestPath: string, options?: IVssHttpClientOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: vss-web-extension-sdk.IVssHttpClientOptions
          type:
            - IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new WikiHttpClient4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      return:
        type:
          - vss-web-extension-sdk.WikiHttpClient4
    type: constructor
  - uid: vss-web-extension-sdk.WikiHttpClient4._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.WikiHttpClient4._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.WikiHttpClient4._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: vss-web-extension-sdk.WikiHttpClient4._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vss-web-extension-sdk.IVssAjaxOptions
          type:
            - IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.WikiHttpClient4._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.IPromise
          type:
            - IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
