### YamlMime:UniversalReference
items:
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4
    name: CommonMethods2To4
    fullName: CommonMethods2To4
    children:
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.authorizationsApiVersion
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.authorize
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.authorizeHost
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.authTokenManager
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.constructor
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.createRegistration
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.deleteRegistration
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.forceOptionsCallForAutoNegotiate
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.getAuthorizations
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.getHostAuthorizations
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.getRegistration
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.getRegistrations
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.getSecret
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.hostAuthorizationApiVersion
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.initiateAuthorization
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.registrationApiVersion
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.registrationSecretApiVersion
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.revokeAuthorization
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.revokeHostAuthorization
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.updateRegistration
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4._beginGetLocation
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4._beginRequest
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4._beginRequestWithAjaxResult
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4._issueAjaxRequest
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4._rootRequestPath
      - >-
        vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS/DelegatedAuthorization/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.authorizationsApiVersion
    name: authorizationsApiVersion
    fullName: authorizationsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.authorize
    name: >-
      authorize(responseType: function, clientId: string, redirectUri: string,
      scopes: string, userId?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: responseType
          type:
            - function
          description: ''
        - id: clientId
          type:
            - string
          description: ''
        - id: redirectUri
          type:
            - string
          description: ''
        - id: scopes
          type:
            - string
          description: ''
        - id: userId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function authorize(responseType: function, clientId: string,
        redirectUri: string, scopes: string, userId?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.authorizeHost
    name: 'authorizeHost(clientId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: clientId
          type:
            - string
          description: ''
      content: 'function authorizeHost(clientId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.authTokenManager
    name: authTokenManager
    fullName: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.constructor
    name: >-
      CommonMethods2To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new CommonMethods2To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.createRegistration
    name: 'createRegistration(registration: Registration, includeSecret?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: registration
          type:
            - >-
              vss-web-extension-sdk.VSS.DelegatedAuthorization.Contracts.Registration
          description: ''
        - id: includeSecret
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function createRegistration(registration: Registration, includeSecret?:
        boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.deleteRegistration
    name: 'deleteRegistration(registrationId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: registrationId
          type:
            - string
          description: ''
      content: 'function deleteRegistration(registrationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    fullName: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.getAuthorizations
    name: 'getAuthorizations(userId?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: userId
          type:
            - string
          description: ''
          optional: true
      content: 'function getAuthorizations(userId?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.getHostAuthorizations
    name: 'getHostAuthorizations(hostId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: hostId
          type:
            - string
          description: ''
      content: 'function getHostAuthorizations(hostId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.getRegistration
    name: 'getRegistration(registrationId: string, includeSecret?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: registrationId
          type:
            - string
          description: ''
        - id: includeSecret
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getRegistration(registrationId: string, includeSecret?:
        boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.getRegistrations
    name: getRegistrations()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getRegistrations()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.getSecret
    name: 'getSecret(registrationId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: registrationId
          type:
            - string
          description: ''
      content: 'function getSecret(registrationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.hostAuthorizationApiVersion
    name: hostAuthorizationApiVersion
    fullName: hostAuthorizationApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.initiateAuthorization
    name: >-
      initiateAuthorization(responseType: function, clientId: string,
      redirectUri: string, scopes: string, userId?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: responseType
          type:
            - function
          description: ''
        - id: clientId
          type:
            - string
          description: ''
        - id: redirectUri
          type:
            - string
          description: ''
        - id: scopes
          type:
            - string
          description: ''
        - id: userId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function initiateAuthorization(responseType: function, clientId: string,
        redirectUri: string, scopes: string, userId?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.registrationApiVersion
    name: registrationApiVersion
    fullName: registrationApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.registrationSecretApiVersion
    name: registrationSecretApiVersion
    fullName: registrationSecretApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.revokeAuthorization
    name: 'revokeAuthorization(authorizationId: string, userId?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: authorizationId
          type:
            - string
          description: ''
        - id: userId
          type:
            - string
          description: ''
          optional: true
      content: 'function revokeAuthorization(authorizationId: string, userId?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.revokeHostAuthorization
    name: 'revokeHostAuthorization(clientId: string, hostId?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: clientId
          type:
            - string
          description: ''
        - id: hostId
          type:
            - string
          description: ''
          optional: true
      content: 'function revokeHostAuthorization(clientId: string, hostId?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4.updateRegistration
    name: 'updateRegistration(registration: Registration, includeSecret?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: registration
          type:
            - >-
              vss-web-extension-sdk.VSS.DelegatedAuthorization.Contracts.Registration
          description: ''
        - id: includeSecret
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function updateRegistration(registration: Registration, includeSecret?:
        boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vssRequestOptions
          type:
            - vss-web-extension-sdk.IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4._rootRequestPath
    name: _rootRequestPath
    fullName: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.DelegatedAuthorization.RestClient.CommonMethods2To4._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: promise
          type:
            - vss-web-extension-sdk.IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
