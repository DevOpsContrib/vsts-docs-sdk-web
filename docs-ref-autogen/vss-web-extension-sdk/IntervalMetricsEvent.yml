### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.IntervalMetricsEvent
    name: IntervalMetricsEvent
    fullName: IntervalMetricsEvent
    children:
      - vss-web-extension-sdk.IntervalMetricsEvent.area
      - vss-web-extension-sdk.IntervalMetricsEvent.begin
      - vss-web-extension-sdk.IntervalMetricsEvent.close
      - vss-web-extension-sdk.IntervalMetricsEvent.closeThis
      - vss-web-extension-sdk.IntervalMetricsEvent.elapsedTime
      - vss-web-extension-sdk.IntervalMetricsEvent.end
      - vss-web-extension-sdk.IntervalMetricsEvent.feature
      - vss-web-extension-sdk.IntervalMetricsEvent.constructor
      - vss-web-extension-sdk.IntervalMetricsEvent.isClosed
      - vss-web-extension-sdk.IntervalMetricsEvent.newInnerMetrics
      - vss-web-extension-sdk.IntervalMetricsEvent.properties
      - vss-web-extension-sdk.IntervalMetricsEvent.publishOnClose
      - vss-web-extension-sdk.IntervalMetricsEvent.setValue
      - vss-web-extension-sdk.IntervalMetricsEvent.startTime
    langs:
      - typeScript
    type: class
    summary: >-
      Provides an easy-to-use tracking object for sending customer intelligence
      telemetries
  - uid: vss-web-extension-sdk.IntervalMetricsEvent.area
    name: area
    fullName: area
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IntervalMetricsEvent.begin
    name: begin()
    children: []
    langs:
      - typeScript
    summary: Set startTime for this metrics event to Date.now()
    syntax:
      parameters: []
      content: function begin()
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.IntervalMetricsEvent.close
    name: close()
    children: []
    langs:
      - typeScript
    summary: >-
      Marks a MetricsEvent project as closed, once it is closed, it will not be
      updated with any new values

      invokes closeThis for specific implementations.
    syntax:
      parameters: []
      content: function close()
      return:
        type:
          - Q.Promise
    type: method
  - uid: vss-web-extension-sdk.IntervalMetricsEvent.closeThis
    name: closeThis()
    children: []
    langs:
      - typeScript
    summary: |-
      Publishes data to telemetry services
      To be overriden for specific implementations
    syntax:
      parameters: []
      content: function closeThis()
      return:
        type:
          - Q.Promise
    type: method
  - uid: vss-web-extension-sdk.IntervalMetricsEvent.elapsedTime
    name: elapsedTime
    fullName: elapsedTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.IntervalMetricsEvent.end
    name: end()
    children: []
    langs:
      - typeScript
    summary: >-
      Set elapsedTime if the start timestamp has been set by Date.now() -
      startTime
    syntax:
      parameters: []
      content: function end()
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.IntervalMetricsEvent.feature
    name: feature
    fullName: feature
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IntervalMetricsEvent.constructor
    name: >-
      IntervalMetricsEvent(area: string, feature: string, publishOnClose:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Creates a MetricsEvent with specified area and feature
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: ''
        - id: feature
          type:
            - string
          description: ''
        - id: publishOnClose
          type:
            - boolean
          description: ''
      content: >-
        new IntervalMetricsEvent(area: string, feature: string, publishOnClose:
        boolean)
      return:
        type:
          - vss-web-extension-sdk.IntervalMetricsEvent
    type: constructor
  - uid: vss-web-extension-sdk.IntervalMetricsEvent.isClosed
    name: isClosed
    fullName: isClosed
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IntervalMetricsEvent.newInnerMetrics
    name: 'newInnerMetrics(innerFeature: string)'
    children: []
    langs:
      - typeScript
    summary: Create inner metrics by prefixing the keys with innerFeature
    syntax:
      parameters:
        - id: innerFeature
          type:
            - string
          description: ''
      content: 'function newInnerMetrics(innerFeature: string)'
      return:
        type:
          - vss-web-extension-sdk.IntervalMetricsEvent
    type: method
  - uid: vss-web-extension-sdk.IntervalMetricsEvent.properties
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - vss-web-extension-sdk.IDictionaryStringTo
  - uid: vss-web-extension-sdk.IntervalMetricsEvent.publishOnClose
    name: publishOnClose
    fullName: publishOnClose
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IntervalMetricsEvent.setValue
    name: 'setValue(key: string, value: T)'
    children: []
    langs:
      - typeScript
    summary: Set value for a metric field
    syntax:
      parameters:
        - id: key
          type:
            - string
          description: ''
        - id: value
          type:
            - T
          description: ''
      content: 'function setValue(key: string, value: T)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.IntervalMetricsEvent.startTime
    name: startTime
    fullName: startTime
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - number
