### YamlMime:UniversalReference
items:
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.ExtensionContracts.IReleaseViewExtensionConfig
    name: IReleaseViewExtensionConfig
    fullName: IReleaseViewExtensionConfig
    children:
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.ExtensionContracts.IReleaseViewExtensionConfig.onReleaseChanged
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.ExtensionContracts.IReleaseViewExtensionConfig.onViewDisplayed
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.ExtensionContracts.IReleaseViewExtensionConfig.selectTab
    langs:
      - typeScript
    type: interface
    summary: >-
      Interface defining the configuration that is shared between extension
      targeted at "ms.vss-releaseManagement-web.release-details-view" and the
      host
    source:
      path: rmo.d.ts
      startLine: 2204
      remote:
        path: typings\rmo.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: ReleaseManagement/Core/ExtensionContracts
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.ExtensionContracts.IReleaseViewExtensionConfig.onReleaseChanged
    name: onReleaseChanged
    fullName: onReleaseChanged
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Required if reacting to the current release.

      More than one callbacks can be added, and all will be called.

      It is important to have atleast one call back, since that's how an
      extension can get information about the current release.
    syntax:
      content: '(handler: (release: Release) => void) => void onReleaseChanged'
      return:
        type:
          - '(handler: (release: Release) => void) => void'
    module: ReleaseManagement/Core/ExtensionContracts
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.ExtensionContracts.IReleaseViewExtensionConfig.onViewDisplayed
    name: onViewDisplayed
    fullName: onViewDisplayed
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Optional, If needed, this callback will be called when this particular
      extension is selected/displayed
    syntax:
      content: '(onDisplayedCallBack: () => void) => void onViewDisplayed'
      return:
        type:
          - '(onDisplayedCallBack: () => void) => void'
    module: ReleaseManagement/Core/ExtensionContracts
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.ExtensionContracts.IReleaseViewExtensionConfig.selectTab
    name: selectTab
    fullName: selectTab
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      Optional, for a given tab id, which can be contribution id,
      the corresponding tab is selected if the tab is visible.
    syntax:
      content: '(tabId: string) => void selectTab'
      return:
        type:
          - '(tabId: string) => void'
    module: ReleaseManagement/Core/ExtensionContracts
