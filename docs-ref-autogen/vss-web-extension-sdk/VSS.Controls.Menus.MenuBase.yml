### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBase
    name: MenuBase
    fullName: MenuBase<TOptions>
    children:
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.actionArguments
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.getActionArguments
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.getContextInfo
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.getMenuType
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.getOwner
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.getParent
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.getParentMenu
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.isMenuBar
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.constructor
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.updateCommandStates
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.Controls.Control<TOptions>'
    source:
      path: vss.d.ts
      startLine: 13761
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/Menus
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.actionArguments
    name: actionArguments
    fullName: actionArguments
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: any actionArguments
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.getActionArguments
    name: getActionArguments()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getActionArguments()
      parameters: []
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.getContextInfo
    name: getContextInfo()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getContextInfo()
      parameters: []
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.getMenuType
    name: getMenuType()
    children: []
    langs:
      - typeScript
    summary: Returns the menu type. The values are outlines in the MenuType enumeration
    syntax:
      content: function getMenuType()
      parameters: []
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.getOwner
    name: getOwner()
    children: []
    langs:
      - typeScript
    summary: Get the root menu of this object. (Not the immediate parent)
    syntax:
      content: function getOwner()
      parameters: []
      return:
        type:
          - >-
            @vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner<@vss-web-extension-sdk.VSS.Controls.Menus.MenuOwnerOptions>
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.getParent
    name: getParent()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getParent()
      parameters: []
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.Menus.MenuBase<TOptions>'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.getParentMenu
    name: getParentMenu()
    children: []
    langs:
      - typeScript
    summary: Get the parent menu of this.
    syntax:
      content: function getParentMenu()
      parameters: []
      return:
        type:
          - >-
            @vss-web-extension-sdk.VSS.Controls.Menus.Menu<@vss-web-extension-sdk.VSS.Controls.Menus.MenuOptions>
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.isMenuBar
    name: isMenuBar()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isMenuBar()
      parameters: []
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.constructor
    name: 'MenuBase(options?: TOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new MenuBase(options?: TOptions)'
      parameters:
        - id: options
          type:
            - TOptions
          description: |+

          optional: true
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuBase.updateCommandStates
    name: 'updateCommandStates(commands: ICommand[])'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function updateCommandStates(commands: ICommand[])'
      parameters:
        - id: commands
          type:
            - '@vss-web-extension-sdk.VSS.Controls.Menus.ICommand[]'
          description: ''
    type: method
