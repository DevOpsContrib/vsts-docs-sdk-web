### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions
    name: IIdentityPickerIdCardDialogOptions
    fullName: IIdentityPickerIdCardDialogOptions
    children:
      - vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.anchor
      - vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.anchorContainer
      - vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.appendTo
      - vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.consumerId
      - vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.extensionData
      - >-
        vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.focusElementOnClose
      - >-
        vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.getFilterByScope
      - vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.httpClient
      - vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.identity
      - vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.identityType
      - vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.leftValue
      - vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.maxResults
      - vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.minResults
      - vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.operationScope
      - vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.topValue
      - >-
        vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.uniqueIdentifier
    langs:
      - typeScript
    type: interface
    summary: ''
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.anchor
    name: anchor
    children: []
    langs:
      - typeScript
    type: property
    summary: A base element which shall be used as reference for positioning the dialog
    syntax:
      return:
        type:
          - JQuery
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.anchorContainer
    name: anchorContainer
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An optional container of the anchor to be considered. Passing an iframe
      allows for positioning over an anchor in an other frame.
    syntax:
      return:
        type:
          - JQuery
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.appendTo
    name: appendTo
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Defined by JQueryUI.DialogOptions -- optional JQuery selector string for
      element to append dialog to, instead of DOM root
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.consumerId
    name: consumerId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The source of the request - please update the Common Identity Picker wiki
      with your consumer GUID
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.extensionData
    name: extensionData
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Details about the control's current environment that might help an
      IEntityOperationsExtension in modifying requests.
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IExtensionData
  - uid: >-
      vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.focusElementOnClose
    name: focusElementOnClose
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      An element that will receive focus when the contact card is closed. If
      unset, the focus will go to the previously active element
    syntax:
      return:
        type:
          - JQuery
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.getFilterByScope
    name: getFilterByScope
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      The scope over which the search and MRU results are filtered by.
        A consumer must pass a delegate that returns a FilterByScope instance, which can be constructed by passing two arrays of strings
        corresponding to Entity Ids and Ancestor Entity Ids
        over which the scope is restricted.
        Default null.
        NOTE: Null scope and an empty scope (a scope which is not null but whose internal arrays are empty) are treated differently.
              Null scope means no filtering will take place on entities, whereas empty scope means no entities would be returned.
              So an empty FilterByScope will result in no search being issued.
    syntax:
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.httpClient
    name: httpClient
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The httpClient that should be used instead of the
      CommonIdentityPickerHttpClient
    syntax:
      return:
        type:
          - vss-web-extension-sdk.AbstractIdentityPickerHttpClient
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.identity
    name: identity
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      an identity to initialize with (and to avoid a call to the identity picker
      service API)
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IEntity
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.identityType
    name: identityType
    children: []
    langs:
      - typeScript
    type: property
    summary: type of identities - one or more of User or Group
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IEntityType
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.leftValue
    name: leftValue
    children: []
    langs:
      - typeScript
    type: property
    summary: The left positioning offset of the dialog
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.maxResults
    name: maxResults
    children: []
    langs:
      - typeScript
    type: property
    summary: The maximum results that need to be fetched
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.minResults
    name: minResults
    children: []
    langs:
      - typeScript
    type: property
    summary: The minimum results that need to be fetched
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.operationScope
    name: operationScope
    children: []
    langs:
      - typeScript
    type: property
    summary: 'scope - one or more of AAD, IMS, Source, AD, WMD'
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IOperationScope
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.topValue
    name: topValue
    children: []
    langs:
      - typeScript
    type: property
    summary: The top positioning offset of the dialog
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.IIdentityPickerIdCardDialogOptions.uniqueIdentifier
    name: uniqueIdentifier
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      the uniqueIdentifier of the identity which shall be used for resolving the
      IdCardDialog - signInAddress or entityId for users and entityId for other
      kinds of entities
    syntax:
      return:
        type:
          - string
