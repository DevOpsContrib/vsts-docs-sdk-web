### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.IMenuItemSpec
    name: IMenuItemSpec
    fullName: IMenuItemSpec
    children:
      - vss-web-extension-sdk.IMenuItemSpec.action
      - vss-web-extension-sdk.IMenuItemSpec.arguments
      - vss-web-extension-sdk.IMenuItemSpec.ariaLabel
      - vss-web-extension-sdk.IMenuItemSpec.childItems
      - vss-web-extension-sdk.IMenuItemSpec.childOptions
      - vss-web-extension-sdk.IMenuItemSpec.clickOpensSubMenu
      - vss-web-extension-sdk.IMenuItemSpec.contributionId
      - vss-web-extension-sdk.IMenuItemSpec.cssClass
      - vss-web-extension-sdk.IMenuItemSpec.disabled
      - vss-web-extension-sdk.IMenuItemSpec.dynamic
      - vss-web-extension-sdk.IMenuItemSpec.extraOptions
      - vss-web-extension-sdk.IMenuItemSpec.focusable
      - vss-web-extension-sdk.IMenuItemSpec.groupId
      - vss-web-extension-sdk.IMenuItemSpec.hidden
      - vss-web-extension-sdk.IMenuItemSpec.hideDrop
      - vss-web-extension-sdk.IMenuItemSpec.href
      - vss-web-extension-sdk.IMenuItemSpec.html
      - vss-web-extension-sdk.IMenuItemSpec.icon
      - vss-web-extension-sdk.IMenuItemSpec.id
      - vss-web-extension-sdk.IMenuItemSpec.idIsAction
      - vss-web-extension-sdk.IMenuItemSpec.isContribution
      - vss-web-extension-sdk.IMenuItemSpec.isGroupSeparator
      - vss-web-extension-sdk.IMenuItemSpec.noIcon
      - vss-web-extension-sdk.IMenuItemSpec.pinningMenuOptions
      - vss-web-extension-sdk.IMenuItemSpec.pinningOptions
      - vss-web-extension-sdk.IMenuItemSpec.rank
      - vss-web-extension-sdk.IMenuItemSpec.selected
      - vss-web-extension-sdk.IMenuItemSpec.separator
      - vss-web-extension-sdk.IMenuItemSpec.setDefaultTitle
      - vss-web-extension-sdk.IMenuItemSpec.setTitleOnlyOnOverflow
      - vss-web-extension-sdk.IMenuItemSpec.showHtml
      - vss-web-extension-sdk.IMenuItemSpec.showText
      - vss-web-extension-sdk.IMenuItemSpec.sourceExtensionId
      - vss-web-extension-sdk.IMenuItemSpec.splitDropOptions
      - vss-web-extension-sdk.IMenuItemSpec.text
      - vss-web-extension-sdk.IMenuItemSpec.title
    langs:
      - typeScript
    type: interface
    summary: ''
  - uid: vss-web-extension-sdk.IMenuItemSpec.action
    name: action
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.IMenuItemSpec.arguments
    name: arguments
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.IMenuItemSpec.ariaLabel
    name: ariaLabel
    children: []
    langs:
      - typeScript
    type: property
    summary: Text to be used by screen reader
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IMenuItemSpec.childItems
    name: childItems
    children: []
    langs:
      - typeScript
    type: property
    summary: Children of this menu item
    syntax:
      content: ''
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.IMenuItemSpec.childOptions
    name: childOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Menu options for any sub menu created by this menu.
    syntax:
      content: ''
      return:
        type:
          - vss-web-extension-sdk.MenuOptions
  - uid: vss-web-extension-sdk.IMenuItemSpec.clickOpensSubMenu
    name: clickOpensSubMenu
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Determines whether clicking a menu item with children opens sub menu or
      not.
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.contributionId
    name: contributionId
    children: []
    langs:
      - typeScript
    type: property
    summary: The id of the contribution that defines the menu item.
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IMenuItemSpec.cssClass
    name: cssClass
    children: []
    langs:
      - typeScript
    type: property
    summary: Extra css class name for this menu item
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IMenuItemSpec.disabled
    name: disabled
    children: []
    langs:
      - typeScript
    type: property
    summary: Determines whether the menu item is initially disabled or not
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.dynamic
    name: dynamic
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If childItems is a function and dynamic is true, call the function to
      update the child items every time they are displayed.
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.extraOptions
    name: extraOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Extra option overriding default settings
    syntax:
      content: ''
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.IMenuItemSpec.focusable
    name: focusable
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If explicitly set to false, menu item will not be focusable via keyboard
      navigation.

      Use only for menu items that have alternative means of being focused.
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.groupId
    name: groupId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IMenuItemSpec.hidden
    name: hidden
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If true, the menu item will not be displayed.'
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.hideDrop
    name: hideDrop
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      If this is true, and there are child items, don't show the
      drop indicator icon.
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.href
    name: href
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      If specified, create an <a> tag around this menu item with the specified
      href.
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IMenuItemSpec.html
    name: html
    children: []
    langs:
      - typeScript
    type: property
    summary: Display html of the menu item (mutually exclusive with text)
    syntax:
      content: ''
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.IMenuItemSpec.icon
    name: icon
    children: []
    langs:
      - typeScript
    type: property
    summary: Icon for the menu item
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IMenuItemSpec.id
    name: id
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Id of the menu item. Used to distinguish the menu item when action is
      executed or when changing command state of a menu item
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IMenuItemSpec.idIsAction
    name: idIsAction
    children: []
    langs:
      - typeScript
    type: property
    summary: |-
      By default, a menu item's id will be used as a command id to execute
      an action. Set this to false if this menu item's action should not
      default to the item's id.
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.isContribution
    name: isContribution
    children: []
    langs:
      - typeScript
    type: property
    summary: Set to true for menu items that are contributed my an extension.
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.isGroupSeparator
    name: isGroupSeparator
    children: []
    langs:
      - typeScript
    type: property
    summary: Indicates that this menu item is a separator between menu item groups.
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.noIcon
    name: noIcon
    children: []
    langs:
      - typeScript
    type: property
    summary: Determines whether to disable icon for this item or not.
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.pinningMenuOptions
    name: pinningMenuOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Options to control the pinning behavior of this item's submenu.
    syntax:
      content: ''
      return:
        type:
          - vss-web-extension-sdk.IMenuPinningOptions
  - uid: vss-web-extension-sdk.IMenuItemSpec.pinningOptions
    name: pinningOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Options to enable pinning for the menu item.
    syntax:
      content: ''
      return:
        type:
          - vss-web-extension-sdk.IMenuItemPinningOptions
  - uid: vss-web-extension-sdk.IMenuItemSpec.rank
    name: rank
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.IMenuItemSpec.selected
    name: selected
    children: []
    langs:
      - typeScript
    type: property
    summary: 'If true, item gets ''selected'' class.'
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.separator
    name: separator
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Determines whether the menu item is a separator or not. If specified along
      with text, menu item acts like a group text
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.setDefaultTitle
    name: setDefaultTitle
    children: []
    langs:
      - typeScript
    type: property
    summary: Set title to text if not provided.
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.setTitleOnlyOnOverflow
    name: setTitleOnlyOnOverflow
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Set the item's title only when the text overflows and when the mouse is
      hovering over it
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.showHtml
    name: showHtml
    children: []
    langs:
      - typeScript
    type: property
    summary: Determines whether to show html for this item or not.
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.showText
    name: showText
    children: []
    langs:
      - typeScript
    type: property
    summary: Determines whether to show text for this item or not.
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.IMenuItemSpec.sourceExtensionId
    name: sourceExtensionId
    children: []
    langs:
      - typeScript
    type: property
    summary: The id of the extension that contributed the menu item.
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IMenuItemSpec.splitDropOptions
    name: splitDropOptions
    children: []
    langs:
      - typeScript
    type: property
    summary: Option to renders a split drop menu item (eg a chevron or triangle)
    syntax:
      content: ''
      return:
        type:
          - vss-web-extension-sdk.ISplitDropMenuItemSpec
  - uid: vss-web-extension-sdk.IMenuItemSpec.text
    name: text
    children: []
    langs:
      - typeScript
    type: property
    summary: Display text of the menu item
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.IMenuItemSpec.title
    name: title
    children: []
    langs:
      - typeScript
    type: property
    summary: Text displayed when mouse is hovered on the menu item.
    syntax:
      content: ''
      return:
        type:
          - string
