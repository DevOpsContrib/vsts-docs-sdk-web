### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3
    name: TaskAgentHttpClient3
    fullName: TaskAgentHttpClient3
    children:
      - vss-web-extension-sdk.TaskAgentHttpClient3.addAgent
      - vss-web-extension-sdk.TaskAgentHttpClient3.addAgentPool
      - vss-web-extension-sdk.TaskAgentHttpClient3.addAgentQueue
      - vss-web-extension-sdk.TaskAgentHttpClient3.addTaskGroup
      - vss-web-extension-sdk.TaskAgentHttpClient3.createAgentSession
      - vss-web-extension-sdk.TaskAgentHttpClient3.createServiceEndpoint
      - vss-web-extension-sdk.TaskAgentHttpClient3.createTeamProject
      - vss-web-extension-sdk.TaskAgentHttpClient3.deleteAgent
      - vss-web-extension-sdk.TaskAgentHttpClient3.deleteAgentPool
      - vss-web-extension-sdk.TaskAgentHttpClient3.deleteAgentQueue
      - vss-web-extension-sdk.TaskAgentHttpClient3.deleteAgentRequest
      - vss-web-extension-sdk.TaskAgentHttpClient3.deleteAgentSession
      - vss-web-extension-sdk.TaskAgentHttpClient3.deleteMessage
      - vss-web-extension-sdk.TaskAgentHttpClient3.deleteServiceEndpoint
      - vss-web-extension-sdk.TaskAgentHttpClient3.deleteTaskDefinition
      - vss-web-extension-sdk.TaskAgentHttpClient3.deleteTaskGroup
      - vss-web-extension-sdk.TaskAgentHttpClient3.executeServiceEndpointRequest
      - vss-web-extension-sdk.TaskAgentHttpClient3.getAgent
      - vss-web-extension-sdk.TaskAgentHttpClient3.getAgentPool
      - vss-web-extension-sdk.TaskAgentHttpClient3.getAgentPoolRoles
      - vss-web-extension-sdk.TaskAgentHttpClient3.getAgentPools
      - vss-web-extension-sdk.TaskAgentHttpClient3.getAgentQueue
      - vss-web-extension-sdk.TaskAgentHttpClient3.getAgentQueueRoles
      - vss-web-extension-sdk.TaskAgentHttpClient3.getAgentQueues
      - vss-web-extension-sdk.TaskAgentHttpClient3.getAgentRequest
      - vss-web-extension-sdk.TaskAgentHttpClient3.getAgentRequestsForAgent
      - vss-web-extension-sdk.TaskAgentHttpClient3.getAgentRequestsForAgents
      - vss-web-extension-sdk.TaskAgentHttpClient3.getAgentRequestsForPlan
      - vss-web-extension-sdk.TaskAgentHttpClient3.getAgents
      - vss-web-extension-sdk.TaskAgentHttpClient3.getAzureSubscriptions
      - vss-web-extension-sdk.TaskAgentHttpClient3.getMessage
      - vss-web-extension-sdk.TaskAgentHttpClient3.getPackage
      - vss-web-extension-sdk.TaskAgentHttpClient3.getPackages
      - vss-web-extension-sdk.TaskAgentHttpClient3.getServiceEndpointDetails
      - vss-web-extension-sdk.TaskAgentHttpClient3.getServiceEndpoints
      - vss-web-extension-sdk.TaskAgentHttpClient3.getServiceEndpointTypes
      - vss-web-extension-sdk.TaskAgentHttpClient3.getTaskContentZip
      - vss-web-extension-sdk.TaskAgentHttpClient3.getTaskDefinition
      - vss-web-extension-sdk.TaskAgentHttpClient3.getTaskDefinitions
      - vss-web-extension-sdk.TaskAgentHttpClient3.getTaskGroups
      - vss-web-extension-sdk.TaskAgentHttpClient3.getTaskHubLicenseDetails
      - vss-web-extension-sdk.TaskAgentHttpClient3.queryEndpoint
      - vss-web-extension-sdk.TaskAgentHttpClient3.queryServiceEndpoint
      - vss-web-extension-sdk.TaskAgentHttpClient3.queueAgentRequest
      - vss-web-extension-sdk.TaskAgentHttpClient3.refreshAgent
      - vss-web-extension-sdk.TaskAgentHttpClient3.refreshAgents
      - vss-web-extension-sdk.TaskAgentHttpClient3.replaceAgent
      - vss-web-extension-sdk.TaskAgentHttpClient3.sendMessage
      - vss-web-extension-sdk.TaskAgentHttpClient3.constructor
      - vss-web-extension-sdk.TaskAgentHttpClient3.updateAgent
      - vss-web-extension-sdk.TaskAgentHttpClient3.updateAgentPool
      - vss-web-extension-sdk.TaskAgentHttpClient3.updateAgentRequest
      - vss-web-extension-sdk.TaskAgentHttpClient3.updateAgentUserCapabilities
      - vss-web-extension-sdk.TaskAgentHttpClient3.updateServiceEndpoint
      - vss-web-extension-sdk.TaskAgentHttpClient3.updateTaskGroup
      - vss-web-extension-sdk.TaskAgentHttpClient3.updateTaskHubLicenseDetails
      - vss-web-extension-sdk.TaskAgentHttpClient3._beginGetLocation
      - vss-web-extension-sdk.TaskAgentHttpClient3._beginRequest
      - vss-web-extension-sdk.TaskAgentHttpClient3._beginRequestWithAjaxResult
      - vss-web-extension-sdk.TaskAgentHttpClient3._issueAjaxRequest
      - vss-web-extension-sdk.TaskAgentHttpClient3._setInitializationPromise
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.addAgent
    name: 'addAgent(agent: TaskAgent, poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: agent
          type:
            - TaskAgent
          description: ''
        - id: poolId
          type:
            - number
          description: ''
      content: 'function addAgent(agent: TaskAgent, poolId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.addAgentPool
    name: 'addAgentPool(pool: TaskAgentPool)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: pool
          type:
            - TaskAgentPool
          description: ''
      content: 'function addAgentPool(pool: TaskAgentPool)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.addAgentQueue
    name: 'addAgentQueue(queue: TaskAgentQueue, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: queue
          type:
            - TaskAgentQueue
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function addAgentQueue(queue: TaskAgentQueue, project?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.addTaskGroup
    name: 'addTaskGroup(taskGroup: TaskGroup, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskGroup
          type:
            - TaskGroup
          description: Task group object to create.
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function addTaskGroup(taskGroup: TaskGroup, project: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.createAgentSession
    name: 'createAgentSession(session: TaskAgentSession, poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: session
          type:
            - TaskAgentSession
          description: ''
        - id: poolId
          type:
            - number
          description: ''
      content: 'function createAgentSession(session: TaskAgentSession, poolId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.createServiceEndpoint
    name: 'createServiceEndpoint(endpoint: ServiceEndpoint, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: endpoint
          type:
            - ServiceEndpoint
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
      content: >-
        function createServiceEndpoint(endpoint: ServiceEndpoint, project:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.createTeamProject
    name: 'createTeamProject(project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function createTeamProject(project?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.deleteAgent
    name: 'deleteAgent(poolId: number, agentId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
      content: 'function deleteAgent(poolId: number, agentId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.deleteAgentPool
    name: 'deleteAgentPool(poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
      content: 'function deleteAgentPool(poolId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.deleteAgentQueue
    name: 'deleteAgentQueue(queueId: number, project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: queueId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function deleteAgentQueue(queueId: number, project?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.deleteAgentRequest
    name: >-
      deleteAgentRequest(poolId: number, requestId: number, lockToken: string,
      result?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: requestId
          type:
            - number
          description: ''
        - id: lockToken
          type:
            - string
          description: ''
        - id: result
          type:
            - function
          description: ''
          optional: true
      content: >-
        function deleteAgentRequest(poolId: number, requestId: number,
        lockToken: string, result?: function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.deleteAgentSession
    name: 'deleteAgentSession(poolId: number, sessionId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: sessionId
          type:
            - string
          description: ''
      content: 'function deleteAgentSession(poolId: number, sessionId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.deleteMessage
    name: 'deleteMessage(poolId: number, messageId: number, sessionId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: messageId
          type:
            - number
          description: ''
        - id: sessionId
          type:
            - string
          description: ''
      content: >-
        function deleteMessage(poolId: number, messageId: number, sessionId:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.deleteServiceEndpoint
    name: 'deleteServiceEndpoint(project: string, endpointId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: endpointId
          type:
            - string
          description: ''
      content: 'function deleteServiceEndpoint(project: string, endpointId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.deleteTaskDefinition
    name: 'deleteTaskDefinition(taskId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskId
          type:
            - string
          description: ''
      content: 'function deleteTaskDefinition(taskId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.deleteTaskGroup
    name: 'deleteTaskGroup(project: string, taskGroupId: string, comment?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: taskGroupId
          type:
            - string
          description: Id of the task group to be deleted.
        - id: comment
          type:
            - string
          description: Comments to delete.
          optional: true
      content: >-
        function deleteTaskGroup(project: string, taskGroupId: string, comment?:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.executeServiceEndpointRequest
    name: >-
      executeServiceEndpointRequest(serviceEndpointRequest:
      ServiceEndpointRequest, project: string, endpointId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: serviceEndpointRequest
          type:
            - ServiceEndpointRequest
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: endpointId
          type:
            - string
          description: ''
      content: >-
        function executeServiceEndpointRequest(serviceEndpointRequest:
        ServiceEndpointRequest, project: string, endpointId: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getAgent
    name: >-
      getAgent(poolId: number, agentId: number, includeCapabilities?: boolean,
      includeAssignedRequest?: boolean, propertyFilters?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
        - id: includeCapabilities
          type:
            - boolean
          description: ''
          optional: true
        - id: includeAssignedRequest
          type:
            - boolean
          description: ''
          optional: true
        - id: propertyFilters
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getAgent(poolId: number, agentId: number, includeCapabilities?:
        boolean, includeAssignedRequest?: boolean, propertyFilters?: function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getAgentPool
    name: >-
      getAgentPool(poolId: number, properties?: function, actionFilter?:
      function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: properties
          type:
            - function
          description: ''
          optional: true
        - id: actionFilter
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getAgentPool(poolId: number, properties?: function,
        actionFilter?: function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getAgentPoolRoles
    name: 'getAgentPoolRoles(poolId?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
          optional: true
      content: 'function getAgentPoolRoles(poolId?: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getAgentPools
    name: >-
      getAgentPools(poolName?: string, properties?: function, poolType?:
      function, actionFilter?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolName
          type:
            - string
          description: ''
          optional: true
        - id: properties
          type:
            - function
          description: ''
          optional: true
        - id: poolType
          type:
            - function
          description: ''
          optional: true
        - id: actionFilter
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getAgentPools(poolName?: string, properties?: function,
        poolType?: function, actionFilter?: function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getAgentQueue
    name: 'getAgentQueue(queueId: number, project?: string, actionFilter?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: queueId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: actionFilter
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getAgentQueue(queueId: number, project?: string, actionFilter?:
        function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getAgentQueueRoles
    name: 'getAgentQueueRoles(queueId?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: queueId
          type:
            - number
          description: ''
          optional: true
      content: 'function getAgentQueueRoles(queueId?: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getAgentQueues
    name: >-
      getAgentQueues(project?: string, queueName?: string, actionFilter?:
      function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: queueName
          type:
            - string
          description: ''
          optional: true
        - id: actionFilter
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getAgentQueues(project?: string, queueName?: string,
        actionFilter?: function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getAgentRequest
    name: 'getAgentRequest(poolId: number, requestId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: requestId
          type:
            - number
          description: ''
      content: 'function getAgentRequest(poolId: number, requestId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getAgentRequestsForAgent
    name: >-
      getAgentRequestsForAgent(poolId: number, agentId: number,
      completedRequestCount?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
        - id: completedRequestCount
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getAgentRequestsForAgent(poolId: number, agentId: number,
        completedRequestCount?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getAgentRequestsForAgents
    name: >-
      getAgentRequestsForAgents(poolId: number, agentIds?: function,
      completedRequestCount?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentIds
          type:
            - function
          description: ''
          optional: true
        - id: completedRequestCount
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getAgentRequestsForAgents(poolId: number, agentIds?: function,
        completedRequestCount?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getAgentRequestsForPlan
    name: 'getAgentRequestsForPlan(poolId: number, planId: string, jobId?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: planId
          type:
            - string
          description: ''
        - id: jobId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getAgentRequestsForPlan(poolId: number, planId: string, jobId?:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getAgents
    name: >-
      getAgents(poolId: number, agentName?: string, includeCapabilities?:
      boolean, includeAssignedRequest?: boolean, propertyFilters?: function,
      demands?: function)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentName
          type:
            - string
          description: ''
          optional: true
        - id: includeCapabilities
          type:
            - boolean
          description: ''
          optional: true
        - id: includeAssignedRequest
          type:
            - boolean
          description: ''
          optional: true
        - id: propertyFilters
          type:
            - function
          description: ''
          optional: true
        - id: demands
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getAgents(poolId: number, agentName?: string,
        includeCapabilities?: boolean, includeAssignedRequest?: boolean,
        propertyFilters?: function, demands?: function)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getAzureSubscriptions
    name: getAzureSubscriptions()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getAzureSubscriptions()
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getMessage
    name: 'getMessage(poolId: number, sessionId: string, lastMessageId?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: sessionId
          type:
            - string
          description: ''
        - id: lastMessageId
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getMessage(poolId: number, sessionId: string, lastMessageId?:
        number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getPackage
    name: 'getPackage(packageType: string, platform: string, version: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: packageType
          type:
            - string
          description: ''
        - id: platform
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
      content: >-
        function getPackage(packageType: string, platform: string, version:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getPackages
    name: 'getPackages(packageType?: string, platform?: string, top?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: packageType
          type:
            - string
          description: ''
          optional: true
        - id: platform
          type:
            - string
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getPackages(packageType?: string, platform?: string, top?:
        number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getServiceEndpointDetails
    name: 'getServiceEndpointDetails(project: string, endpointId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: endpointId
          type:
            - string
          description: ''
      content: 'function getServiceEndpointDetails(project: string, endpointId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getServiceEndpoints
    name: >-
      getServiceEndpoints(project: string, type?: string, authSchemes?:
      function, endpointIds?: function, includeFailed?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: type
          type:
            - string
          description: ''
          optional: true
        - id: authSchemes
          type:
            - function
          description: ''
          optional: true
        - id: endpointIds
          type:
            - function
          description: ''
          optional: true
        - id: includeFailed
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getServiceEndpoints(project: string, type?: string,
        authSchemes?: function, endpointIds?: function, includeFailed?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getServiceEndpointTypes
    name: 'getServiceEndpointTypes(type?: string, scheme?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: type
          type:
            - string
          description: ''
          optional: true
        - id: scheme
          type:
            - string
          description: ''
          optional: true
      content: 'function getServiceEndpointTypes(type?: string, scheme?: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getTaskContentZip
    name: >-
      getTaskContentZip(taskId: string, versionString: string, visibility?:
      function, scopeLocal?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskId
          type:
            - string
          description: ''
        - id: versionString
          type:
            - string
          description: ''
        - id: visibility
          type:
            - function
          description: ''
          optional: true
        - id: scopeLocal
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getTaskContentZip(taskId: string, versionString: string,
        visibility?: function, scopeLocal?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getTaskDefinition
    name: >-
      getTaskDefinition(taskId: string, versionString: string, visibility?:
      function, scopeLocal?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskId
          type:
            - string
          description: ''
        - id: versionString
          type:
            - string
          description: ''
        - id: visibility
          type:
            - function
          description: ''
          optional: true
        - id: scopeLocal
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getTaskDefinition(taskId: string, versionString: string,
        visibility?: function, scopeLocal?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getTaskDefinitions
    name: >-
      getTaskDefinitions(taskId?: string, visibility?: function, scopeLocal?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskId
          type:
            - string
          description: ''
          optional: true
        - id: visibility
          type:
            - function
          description: ''
          optional: true
        - id: scopeLocal
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getTaskDefinitions(taskId?: string, visibility?: function,
        scopeLocal?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getTaskGroups
    name: >-
      getTaskGroups(project: string, taskGroupId?: string, expanded?: boolean,
      taskIdFilter?: string, deleted?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: taskGroupId
          type:
            - string
          description: Id of the task group.
          optional: true
        - id: expanded
          type:
            - boolean
          description: '''true'' to recursively expand task groups. Default is ''false''.'
          optional: true
        - id: taskIdFilter
          type:
            - string
          description: Guid of the taskId to filter.
          optional: true
        - id: deleted
          type:
            - boolean
          description: '''true''to include deleted task groups. Default is ''false''.'
          optional: true
      content: >-
        function getTaskGroups(project: string, taskGroupId?: string, expanded?:
        boolean, taskIdFilter?: string, deleted?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.getTaskHubLicenseDetails
    name: >-
      getTaskHubLicenseDetails(hubName: string, includeEnterpriseUsersCount?:
      boolean, includeHostedAgentMinutesCount?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: hubName
          type:
            - string
          description: ''
        - id: includeEnterpriseUsersCount
          type:
            - boolean
          description: ''
          optional: true
        - id: includeHostedAgentMinutesCount
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getTaskHubLicenseDetails(hubName: string,
        includeEnterpriseUsersCount?: boolean, includeHostedAgentMinutesCount?:
        boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.queryEndpoint
    name: 'queryEndpoint(endpoint: TaskDefinitionEndpoint)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: endpoint
          type:
            - TaskDefinitionEndpoint
          description: Describes the URL to fetch.
      content: 'function queryEndpoint(endpoint: TaskDefinitionEndpoint)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.queryServiceEndpoint
    name: 'queryServiceEndpoint(binding: DataSourceBinding, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: binding
          type:
            - DataSourceBinding
          description: Describes the data source to fetch.
        - id: project
          type:
            - string
          description: Project ID or project name
      content: >-
        function queryServiceEndpoint(binding: DataSourceBinding, project:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.queueAgentRequest
    name: 'queueAgentRequest(request: TaskAgentJobRequest, poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: request
          type:
            - TaskAgentJobRequest
          description: ''
        - id: poolId
          type:
            - number
          description: ''
      content: 'function queueAgentRequest(request: TaskAgentJobRequest, poolId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.refreshAgent
    name: 'refreshAgent(poolId: number, agentId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
      content: 'function refreshAgent(poolId: number, agentId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.refreshAgents
    name: 'refreshAgents(poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: poolId
          type:
            - number
          description: ''
      content: 'function refreshAgents(poolId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.replaceAgent
    name: 'replaceAgent(agent: TaskAgent, poolId: number, agentId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: agent
          type:
            - TaskAgent
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
      content: 'function replaceAgent(agent: TaskAgent, poolId: number, agentId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.sendMessage
    name: 'sendMessage(message: TaskAgentMessage, poolId: number, requestId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: message
          type:
            - TaskAgentMessage
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: requestId
          type:
            - number
          description: ''
      content: >-
        function sendMessage(message: TaskAgentMessage, poolId: number,
        requestId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.constructor
    name: >-
      TaskAgentHttpClient3(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new TaskAgentHttpClient3(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      return:
        type:
          - TaskAgentHttpClient3
    type: constructor
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.updateAgent
    name: 'updateAgent(agent: TaskAgent, poolId: number, agentId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: agent
          type:
            - TaskAgent
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
      content: 'function updateAgent(agent: TaskAgent, poolId: number, agentId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.updateAgentPool
    name: 'updateAgentPool(pool: TaskAgentPool, poolId: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: pool
          type:
            - TaskAgentPool
          description: ''
        - id: poolId
          type:
            - number
          description: ''
      content: 'function updateAgentPool(pool: TaskAgentPool, poolId: number)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.updateAgentRequest
    name: >-
      updateAgentRequest(request: TaskAgentJobRequest, poolId: number,
      requestId: number, lockToken: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: request
          type:
            - TaskAgentJobRequest
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: requestId
          type:
            - number
          description: ''
        - id: lockToken
          type:
            - string
          description: ''
      content: >-
        function updateAgentRequest(request: TaskAgentJobRequest, poolId:
        number, requestId: number, lockToken: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.updateAgentUserCapabilities
    name: >-
      updateAgentUserCapabilities(userCapabilities: function, poolId: number,
      agentId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: userCapabilities
          type:
            - function
          description: ''
        - id: poolId
          type:
            - number
          description: ''
        - id: agentId
          type:
            - number
          description: ''
      content: >-
        function updateAgentUserCapabilities(userCapabilities: function, poolId:
        number, agentId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.updateServiceEndpoint
    name: >-
      updateServiceEndpoint(endpoint: ServiceEndpoint, project: string,
      endpointId: string, operation?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: endpoint
          type:
            - ServiceEndpoint
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: endpointId
          type:
            - string
          description: ''
        - id: operation
          type:
            - string
          description: ''
          optional: true
      content: >-
        function updateServiceEndpoint(endpoint: ServiceEndpoint, project:
        string, endpointId: string, operation?: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.updateTaskGroup
    name: 'updateTaskGroup(taskGroup: TaskGroup, project: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskGroup
          type:
            - TaskGroup
          description: Task group to update.
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function updateTaskGroup(taskGroup: TaskGroup, project: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3.updateTaskHubLicenseDetails
    name: >-
      updateTaskHubLicenseDetails(taskHubLicenseDetails: TaskHubLicenseDetails,
      hubName: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: taskHubLicenseDetails
          type:
            - TaskHubLicenseDetails
          description: ''
        - id: hubName
          type:
            - string
          description: ''
      content: >-
        function updateTaskHubLicenseDetails(taskHubLicenseDetails:
        TaskHubLicenseDetails, hubName: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestParams
          type:
            - VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestParams
          type:
            - VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vssRequestOptions
          type:
            - IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskAgentHttpClient3._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: promise
          type:
            - IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
