### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.NodeJS.ReadableStream
    name: ReadableStream
    fullName: ReadableStream
    children:
      - vss-web-extension-sdk.NodeJS.ReadableStream.isPaused
      - vss-web-extension-sdk.NodeJS.ReadableStream.pause
      - vss-web-extension-sdk.NodeJS.ReadableStream.pipe
      - vss-web-extension-sdk.NodeJS.ReadableStream.read
      - vss-web-extension-sdk.NodeJS.ReadableStream.readable
      - vss-web-extension-sdk.NodeJS.ReadableStream.resume
      - vss-web-extension-sdk.NodeJS.ReadableStream.setEncoding
      - vss-web-extension-sdk.NodeJS.ReadableStream.unpipe
      - vss-web-extension-sdk.NodeJS.ReadableStream.unshift
      - vss-web-extension-sdk.NodeJS.ReadableStream.wrap
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      - '@vss-web-extension-sdk.NodeJS.EventEmitter'
    package: vss-web-extension-sdk
    module: NodeJS
  - uid: vss-web-extension-sdk.NodeJS.ReadableStream.isPaused
    name: isPaused()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function isPaused()
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.NodeJS.ReadableStream.pause
    name: pause()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function pause()
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.NodeJS.ReadableStream.pipe
    name: 'pipe(destination: T, options?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: destination
          type:
            - T
          description: ''
        - id: options
          type:
            - function
          description: ''
          optional: true
      content: 'function pipe(destination: T, options?: function)'
      return:
        type:
          - T
    type: method
  - uid: vss-web-extension-sdk.NodeJS.ReadableStream.read
    name: 'read(size?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: size
          type:
            - number
          description: ''
          optional: true
      content: 'function read(size?: number)'
    type: method
  - uid: vss-web-extension-sdk.NodeJS.ReadableStream.readable
    name: readable
    fullName: readable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.NodeJS.ReadableStream.resume
    name: resume()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function resume()
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.NodeJS.ReadableStream.setEncoding
    name: 'setEncoding(encoding: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: encoding
          type:
            - string
          description: ''
      content: 'function setEncoding(encoding: string)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.NodeJS.ReadableStream.unpipe
    name: 'unpipe(destination?: T)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: destination
          type:
            - T
          description: ''
          optional: true
      content: 'function unpipe(destination?: T)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.NodeJS.ReadableStream.unshift
    name: 'unshift(chunk: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: chunk
          type:
            - string
          description: ''
      content: 'function unshift(chunk: string)'
    type: method
  - uid: vss-web-extension-sdk.NodeJS.ReadableStream.wrap
    name: 'wrap(oldStream: ReadableStream)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: oldStream
          type:
            - '@vss-web-extension-sdk.NodeJS.ReadableStream'
          description: ''
      content: 'function wrap(oldStream: ReadableStream)'
      return:
        type:
          - '@vss-web-extension-sdk.NodeJS.ReadableStream'
    type: method
