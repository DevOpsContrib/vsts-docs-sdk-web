### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.IExtensionHost
    name: IExtensionHost
    fullName: IExtensionHost
    children:
      - vss-web-extension-sdk.IExtensionHost.dispose
      - vss-web-extension-sdk.IExtensionHost.getLoadPromise
      - vss-web-extension-sdk.IExtensionHost.getRegisteredInstance
    langs:
      - typeScript
    type: interface
    summary: Common interface between internal and external contribution hosts
  - uid: vss-web-extension-sdk.IExtensionHost.dispose
    name: dispose()
    children: []
    langs:
      - typeScript
    summary: Dispose the host control
    syntax:
      parameters: []
      content: function dispose()
    type: method
  - uid: vss-web-extension-sdk.IExtensionHost.getLoadPromise
    name: getLoadPromise()
    children: []
    langs:
      - typeScript
    summary: >-
      Gets the promise that is resolved when the host is loaded, and rejected
      when the load fails or times out.
    syntax:
      parameters: []
      content: function getLoadPromise()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.IExtensionHost.getRegisteredInstance
    name: 'getRegisteredInstance(instanceId: string, contextData?: any)'
    children: []
    langs:
      - typeScript
    summary: Get an instance of a registered object in an extension
    syntax:
      parameters:
        - id: instanceId
          type:
            - string
          description: Id of the instance to get
        - id: contextData
          type:
            - any
          description: >-
            Optional data to pass to the extension for it to use when creating
            the instance
          optional: true
      content: 'function getRegisteredInstance(instanceId: string, contextData?: any)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
