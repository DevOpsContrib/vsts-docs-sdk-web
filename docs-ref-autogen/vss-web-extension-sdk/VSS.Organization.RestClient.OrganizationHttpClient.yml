### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient
    name: OrganizationHttpClient
    fullName: OrganizationHttpClient
    children:
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.authTokenManager
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.collectionPropertiesApiVersion
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.collectionsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.createCollection
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.createOrganization
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.deleteCollection
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.exportOrganizationMigrationBlob
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.forceOptionsCallForAutoNegotiate
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.getCollection
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.getCollections
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.getOrganization
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.getOrganizations
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.getRegions
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.importOrganizationMigrationBlob
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.constructor
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.organizationMigrationBlobsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.organizationPropertiesApiVersion
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.organizationsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.regionsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.restoreCollection
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.serviceInstanceId
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.updateCollection
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.updateCollectionProperties
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.updateOrganization
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.updateOrganizationProperties
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient._beginGetLocation
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient._beginRequest
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient._beginRequestWithAjaxResult
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient._issueAjaxRequest
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient._rootRequestPath
      - >-
        vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS.Organization.RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.authTokenManager
    name: authTokenManager
    fullName: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.collectionPropertiesApiVersion
    name: collectionPropertiesApiVersion
    fullName: collectionPropertiesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.collectionsApiVersion
    name: collectionsApiVersion
    fullName: collectionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.createCollection
    name: 'createCollection(resource: Collection)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: resource
          type:
            - vss-web-extension-sdk.VSS.Organization.Contracts.Collection
          description: ''
      content: 'function createCollection(resource: Collection)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.createOrganization
    name: 'createOrganization(resource: Organization)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: resource
          type:
            - vss-web-extension-sdk.VSS.Organization.Contracts.Organization
          description: ''
      content: 'function createOrganization(resource: Organization)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.deleteCollection
    name: 'deleteCollection(collectionId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: collectionId
          type:
            - string
          description: ''
      content: 'function deleteCollection(collectionId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.exportOrganizationMigrationBlob
    name: 'exportOrganizationMigrationBlob(organizationId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: organizationId
          type:
            - string
          description: ''
      content: 'function exportOrganizationMigrationBlob(organizationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    fullName: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.getCollection
    name: 'getCollection(collectionId: string, propertyNames?: function)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: collectionId
          type:
            - string
          description: ''
        - id: propertyNames
          type:
            - function
          description: ''
          optional: true
      content: 'function getCollection(collectionId: string, propertyNames?: function)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.getCollections
    name: getCollections()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getCollections()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.getOrganization
    name: 'getOrganization(organizationId: string, propertyNames?: function)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: organizationId
          type:
            - string
          description: ''
        - id: propertyNames
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getOrganization(organizationId: string, propertyNames?:
        function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.getOrganizations
    name: >-
      getOrganizations(searchKind: function, searchValue: string, isActivated?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: searchKind
          type:
            - function
          description: ''
        - id: searchValue
          type:
            - string
          description: ''
        - id: isActivated
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getOrganizations(searchKind: function, searchValue: string,
        isActivated?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.getRegions
    name: getRegions()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getRegions()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.importOrganizationMigrationBlob
    name: 'importOrganizationMigrationBlob(migrationBlob: OrganizationMigrationBlob)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: migrationBlob
          type:
            - >-
              vss-web-extension-sdk.VSS.Organization.Contracts.OrganizationMigrationBlob
          description: ''
      content: >-
        function importOrganizationMigrationBlob(migrationBlob:
        OrganizationMigrationBlob)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.constructor
    name: >-
      OrganizationHttpClient(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new OrganizationHttpClient(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.organizationMigrationBlobsApiVersion
    name: organizationMigrationBlobsApiVersion
    fullName: organizationMigrationBlobsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.organizationPropertiesApiVersion
    name: organizationPropertiesApiVersion
    fullName: organizationPropertiesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.organizationsApiVersion
    name: organizationsApiVersion
    fullName: organizationsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.regionsApiVersion
    name: regionsApiVersion
    fullName: regionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.restoreCollection
    name: 'restoreCollection(collectionId: string, collectionName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: collectionId
          type:
            - string
          description: ''
        - id: collectionName
          type:
            - string
          description: ''
      content: 'function restoreCollection(collectionId: string, collectionName: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.updateCollection
    name: 'updateCollection(patchDocument: JsonPatchDocument, collectionId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: patchDocument
          type:
            - vss-web-extension-sdk.VSS.WebApi.Contracts.JsonPatchDocument
          description: ''
        - id: collectionId
          type:
            - string
          description: ''
      content: >-
        function updateCollection(patchDocument: JsonPatchDocument,
        collectionId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.updateCollectionProperties
    name: >-
      updateCollectionProperties(collectionId: string, patchDocument:
      JsonPatchDocument)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: collectionId
          type:
            - string
          description: ''
        - id: patchDocument
          type:
            - vss-web-extension-sdk.VSS.WebApi.Contracts.JsonPatchDocument
          description: ''
      content: >-
        function updateCollectionProperties(collectionId: string, patchDocument:
        JsonPatchDocument)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.updateOrganization
    name: >-
      updateOrganization(patchDocument: JsonPatchDocument, organizationId:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: patchDocument
          type:
            - vss-web-extension-sdk.VSS.WebApi.Contracts.JsonPatchDocument
          description: ''
        - id: organizationId
          type:
            - string
          description: ''
      content: >-
        function updateOrganization(patchDocument: JsonPatchDocument,
        organizationId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient.updateOrganizationProperties
    name: >-
      updateOrganizationProperties(organizationId: string, patchDocument:
      JsonPatchDocument)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: organizationId
          type:
            - string
          description: ''
        - id: patchDocument
          type:
            - vss-web-extension-sdk.VSS.WebApi.Contracts.JsonPatchDocument
          description: ''
      content: >-
        function updateOrganizationProperties(organizationId: string,
        patchDocument: JsonPatchDocument)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vssRequestOptions
          type:
            - vss-web-extension-sdk.IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient._rootRequestPath
    name: _rootRequestPath
    fullName: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Organization.RestClient.OrganizationHttpClient._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: promise
          type:
            - vss-web-extension-sdk.IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
