### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.IExtensionDataService
    name: IExtensionDataService
    fullName: IExtensionDataService
    children:
      - vss-web-extension-sdk.IExtensionDataService.createDocument
      - vss-web-extension-sdk.IExtensionDataService.deleteDocument
      - vss-web-extension-sdk.IExtensionDataService.getDocument
      - vss-web-extension-sdk.IExtensionDataService.getDocuments
      - vss-web-extension-sdk.IExtensionDataService.getValue
      - vss-web-extension-sdk.IExtensionDataService.setDocument
      - vss-web-extension-sdk.IExtensionDataService.setValue
      - vss-web-extension-sdk.IExtensionDataService.updateDocument
    langs:
      - typeScript
    type: interface
    summary: Service which allows for getting and setting of extension data
    package: vss-web-extension-sdk
  - uid: vss-web-extension-sdk.IExtensionDataService.createDocument
    name: >-
      createDocument(collectionName: string, doc: any, documentOptions?:
      IDocumentOptions)
    children: []
    langs:
      - typeScript
    summary: Returns a promise for creating a document in the provided collection
    syntax:
      parameters:
        - id: collectionName
          type:
            - string
          description: The name of the collection where the document lives
        - id: doc
          type:
            - any
          description: The document to store
        - id: vss-web-extension-sdk.IDocumentOptions
          type:
            - IDocumentOptions
          description: >
            The scope in which the value is stored - default value is
            account-wide
          optional: true
      content: >-
        function createDocument(collectionName: string, doc: any,
        documentOptions?: IDocumentOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.IExtensionDataService.deleteDocument
    name: >-
      deleteDocument(collectionName: string, id: string, documentOptions?:
      IDocumentOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Returns a promise for deleting the document at the provided scope,
      collection and id
    syntax:
      parameters:
        - id: collectionName
          type:
            - string
          description: The name of the collection where the document lives
        - id: id
          type:
            - string
          description: The id of the document in the collection
        - id: vss-web-extension-sdk.IDocumentOptions
          type:
            - IDocumentOptions
          description: >
            The scope in which the value is stored - default value is
            account-wide
          optional: true
      content: >-
        function deleteDocument(collectionName: string, id: string,
        documentOptions?: IDocumentOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.IExtensionDataService.getDocument
    name: >-
      getDocument(collectionName: string, id: string, documentOptions?:
      IDocumentOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Returns a promise for getting a document with the provided id in the
      provided collection
    syntax:
      parameters:
        - id: collectionName
          type:
            - string
          description: The name of the collection where the document lives
        - id: id
          type:
            - string
          description: The id of the document in the collection
        - id: vss-web-extension-sdk.IDocumentOptions
          type:
            - IDocumentOptions
          description: >
            The scope in which the value is stored - default value is
            account-wide
          optional: true
      content: >-
        function getDocument(collectionName: string, id: string,
        documentOptions?: IDocumentOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.IExtensionDataService.getDocuments
    name: 'getDocuments(collectionName: string, documentOptions?: IDocumentOptions)'
    children: []
    langs:
      - typeScript
    summary: >-
      Returns a promise for getting all of the documents in the provided
      collection
    syntax:
      parameters:
        - id: collectionName
          type:
            - string
          description: The name of the collection where the document lives
        - id: vss-web-extension-sdk.IDocumentOptions
          type:
            - IDocumentOptions
          description: >
            The scope in which the value is stored - default value is
            account-wide
          optional: true
      content: >-
        function getDocuments(collectionName: string, documentOptions?:
        IDocumentOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.IExtensionDataService.getValue
    name: 'getValue(key: string, documentOptions?: IDocumentOptions)'
    children: []
    langs:
      - typeScript
    summary: Returns a promise for retrieving a setting at the provided key and scope
    syntax:
      parameters:
        - id: key
          type:
            - string
          description: The key to retrieve a value for
        - id: vss-web-extension-sdk.IDocumentOptions
          type:
            - IDocumentOptions
          description: >
            The scope in which the value is stored - default value is
            account-wide
          optional: true
      content: 'function getValue(key: string, documentOptions?: IDocumentOptions)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.IExtensionDataService.setDocument
    name: >-
      setDocument(collectionName: string, doc: any, documentOptions?:
      IDocumentOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Returns a promise for setting a document in the provided collection

      Creates the document if it does not exist, otherwise updates the existing
      document with the id provided
    syntax:
      parameters:
        - id: collectionName
          type:
            - string
          description: The name of the collection where the document lives
        - id: doc
          type:
            - any
          description: The document to store
        - id: vss-web-extension-sdk.IDocumentOptions
          type:
            - IDocumentOptions
          description: >
            The scope in which the value is stored - default value is
            account-wide
          optional: true
      content: >-
        function setDocument(collectionName: string, doc: any, documentOptions?:
        IDocumentOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.IExtensionDataService.setValue
    name: 'setValue(key: string, value: T, documentOptions?: IDocumentOptions)'
    children: []
    langs:
      - typeScript
    summary: Returns a promise for saving a setting at the provided key and scope
    syntax:
      parameters:
        - id: key
          type:
            - string
          description: The key to save a value for
        - id: value
          type:
            - T
          description: The value to save
        - id: vss-web-extension-sdk.IDocumentOptions
          type:
            - IDocumentOptions
          description: >
            The scope in which the value is stored - default value is
            account-wide
          optional: true
      content: >-
        function setValue(key: string, value: T, documentOptions?:
        IDocumentOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.IExtensionDataService.updateDocument
    name: >-
      updateDocument(collectionName: string, doc: any, documentOptions?:
      IDocumentOptions)
    children: []
    langs:
      - typeScript
    summary: |-
      Returns a promise for updating a document in the provided collection
      A document with the id provided must exist
    syntax:
      parameters:
        - id: collectionName
          type:
            - string
          description: The name of the collection where the document lives
        - id: doc
          type:
            - any
          description: The document to store
        - id: vss-web-extension-sdk.IDocumentOptions
          type:
            - IDocumentOptions
          description: >
            The scope in which the value is stored - default value is
            account-wide
          optional: true
      content: >-
        function updateDocument(collectionName: string, doc: any,
        documentOptions?: IDocumentOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
