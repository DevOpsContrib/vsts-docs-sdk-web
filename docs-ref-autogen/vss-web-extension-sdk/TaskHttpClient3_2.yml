### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TaskHttpClient3_2
    name: TaskHttpClient3_2
    fullName: TaskHttpClient3_2
    children:
      - vss-web-extension-sdk.TaskHttpClient3_2.appendLogContent
      - vss-web-extension-sdk.TaskHttpClient3_2.appendTimelineRecordFeed
      - vss-web-extension-sdk.TaskHttpClient3_2.createAttachment
      - vss-web-extension-sdk.TaskHttpClient3_2.createLog
      - vss-web-extension-sdk.TaskHttpClient3_2.createTimeline
      - vss-web-extension-sdk.TaskHttpClient3_2.deleteTimeline
      - vss-web-extension-sdk.TaskHttpClient3_2.getAttachment
      - vss-web-extension-sdk.TaskHttpClient3_2.getAttachmentContent
      - vss-web-extension-sdk.TaskHttpClient3_2.getAttachments
      - vss-web-extension-sdk.TaskHttpClient3_2.getLog
      - vss-web-extension-sdk.TaskHttpClient3_2.getLogs
      - vss-web-extension-sdk.TaskHttpClient3_2.getPlan
      - vss-web-extension-sdk.TaskHttpClient3_2.getPlanAttachments
      - vss-web-extension-sdk.TaskHttpClient3_2.getPlanGroupsQueueMetrics
      - vss-web-extension-sdk.TaskHttpClient3_2.getQueuedPlanGroup
      - vss-web-extension-sdk.TaskHttpClient3_2.getQueuedPlanGroups
      - vss-web-extension-sdk.TaskHttpClient3_2.getRecords
      - vss-web-extension-sdk.TaskHttpClient3_2.getTimeline
      - vss-web-extension-sdk.TaskHttpClient3_2.getTimelines
      - vss-web-extension-sdk.TaskHttpClient3_2.constructor
      - vss-web-extension-sdk.TaskHttpClient3_2.updateRecords
      - vss-web-extension-sdk.TaskHttpClient3_2._beginGetLocation
      - vss-web-extension-sdk.TaskHttpClient3_2._beginRequest
      - vss-web-extension-sdk.TaskHttpClient3_2._beginRequestWithAjaxResult
      - vss-web-extension-sdk.TaskHttpClient3_2._issueAjaxRequest
      - vss-web-extension-sdk.TaskHttpClient3_2._setInitializationPromise
    langs:
      - typeScript
    type: Class
    summary: ''
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.appendLogContent
    name: >-
      appendLogContent(content: string, scopeIdentifier: string, hubName:
      string, planId: string, logId: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: content
          type:
            - string
          description: Content to upload
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: logId
          type:
            - number
          description: ''
      content: >-
        function appendLogContent(content: string, scopeIdentifier: string,
        hubName: string, planId: string, logId: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.appendTimelineRecordFeed
    name: >-
      appendTimelineRecordFeed(lines: VssJsonCollectionWrapperV,
      scopeIdentifier: string, hubName: string, planId: string, timelineId:
      string, recordId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: lines
          type:
            - VssJsonCollectionWrapperV
          description: ''
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
        - id: recordId
          type:
            - string
          description: ''
      content: >-
        function appendTimelineRecordFeed(lines: VssJsonCollectionWrapperV,
        scopeIdentifier: string, hubName: string, planId: string, timelineId:
        string, recordId: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.createAttachment
    name: >-
      createAttachment(content: string, scopeIdentifier: string, hubName:
      string, planId: string, timelineId: string, recordId: string, type:
      string, name: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: content
          type:
            - string
          description: Content to upload
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
        - id: recordId
          type:
            - string
          description: ''
        - id: type
          type:
            - string
          description: ''
        - id: name
          type:
            - string
          description: ''
      content: >-
        function createAttachment(content: string, scopeIdentifier: string,
        hubName: string, planId: string, timelineId: string, recordId: string,
        type: string, name: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.createLog
    name: >-
      createLog(log: TaskLog, scopeIdentifier: string, hubName: string, planId:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: log
          type:
            - TaskLog
          description: ''
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
      content: >-
        function createLog(log: TaskLog, scopeIdentifier: string, hubName:
        string, planId: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.createTimeline
    name: >-
      createTimeline(timeline: Timeline, scopeIdentifier: string, hubName:
      string, planId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: timeline
          type:
            - Timeline
          description: ''
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
      content: >-
        function createTimeline(timeline: Timeline, scopeIdentifier: string,
        hubName: string, planId: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.deleteTimeline
    name: >-
      deleteTimeline(scopeIdentifier: string, hubName: string, planId: string,
      timelineId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
      content: >-
        function deleteTimeline(scopeIdentifier: string, hubName: string,
        planId: string, timelineId: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.getAttachment
    name: >-
      getAttachment(scopeIdentifier: string, hubName: string, planId: string,
      timelineId: string, recordId: string, type: string, name: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
        - id: recordId
          type:
            - string
          description: ''
        - id: type
          type:
            - string
          description: ''
        - id: name
          type:
            - string
          description: ''
      content: >-
        function getAttachment(scopeIdentifier: string, hubName: string, planId:
        string, timelineId: string, recordId: string, type: string, name:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.getAttachmentContent
    name: >-
      getAttachmentContent(scopeIdentifier: string, hubName: string, planId:
      string, timelineId: string, recordId: string, type: string, name: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
        - id: recordId
          type:
            - string
          description: ''
        - id: type
          type:
            - string
          description: ''
        - id: name
          type:
            - string
          description: ''
      content: >-
        function getAttachmentContent(scopeIdentifier: string, hubName: string,
        planId: string, timelineId: string, recordId: string, type: string,
        name: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.getAttachments
    name: >-
      getAttachments(scopeIdentifier: string, hubName: string, planId: string,
      timelineId: string, recordId: string, type: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
        - id: recordId
          type:
            - string
          description: ''
        - id: type
          type:
            - string
          description: ''
      content: >-
        function getAttachments(scopeIdentifier: string, hubName: string,
        planId: string, timelineId: string, recordId: string, type: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.getLog
    name: >-
      getLog(scopeIdentifier: string, hubName: string, planId: string, logId:
      number, startLine?: number, endLine?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: logId
          type:
            - number
          description: ''
        - id: startLine
          type:
            - number
          description: ''
          optional: true
        - id: endLine
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getLog(scopeIdentifier: string, hubName: string, planId:
        string, logId: number, startLine?: number, endLine?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.getLogs
    name: 'getLogs(scopeIdentifier: string, hubName: string, planId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
      content: >-
        function getLogs(scopeIdentifier: string, hubName: string, planId:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.getPlan
    name: 'getPlan(scopeIdentifier: string, hubName: string, planId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
      content: >-
        function getPlan(scopeIdentifier: string, hubName: string, planId:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.getPlanAttachments
    name: >-
      getPlanAttachments(scopeIdentifier: string, hubName: string, planId:
      string, type: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: type
          type:
            - string
          description: ''
      content: >-
        function getPlanAttachments(scopeIdentifier: string, hubName: string,
        planId: string, type: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.getPlanGroupsQueueMetrics
    name: 'getPlanGroupsQueueMetrics(scopeIdentifier: string, hubName: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
      content: >-
        function getPlanGroupsQueueMetrics(scopeIdentifier: string, hubName:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.getQueuedPlanGroup
    name: >-
      getQueuedPlanGroup(scopeIdentifier: string, hubName: string, planGroup:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planGroup
          type:
            - string
          description: ''
      content: >-
        function getQueuedPlanGroup(scopeIdentifier: string, hubName: string,
        planGroup: string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.getQueuedPlanGroups
    name: >-
      getQueuedPlanGroups(scopeIdentifier: string, hubName: string,
      statusFilter?: function, count?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: statusFilter
          type:
            - function
          description: ''
          optional: true
        - id: count
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getQueuedPlanGroups(scopeIdentifier: string, hubName: string,
        statusFilter?: function, count?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.getRecords
    name: >-
      getRecords(scopeIdentifier: string, hubName: string, planId: string,
      timelineId: string, changeId?: number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
        - id: changeId
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getRecords(scopeIdentifier: string, hubName: string, planId:
        string, timelineId: string, changeId?: number)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.getTimeline
    name: >-
      getTimeline(scopeIdentifier: string, hubName: string, planId: string,
      timelineId: string, changeId?: number, includeRecords?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
        - id: changeId
          type:
            - number
          description: ''
          optional: true
        - id: includeRecords
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getTimeline(scopeIdentifier: string, hubName: string, planId:
        string, timelineId: string, changeId?: number, includeRecords?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.getTimelines
    name: 'getTimelines(scopeIdentifier: string, hubName: string, planId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
      content: >-
        function getTimelines(scopeIdentifier: string, hubName: string, planId:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.constructor
    name: >-
      TaskHttpClient3_2(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new TaskHttpClient3_2(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      return:
        type:
          - TaskHttpClient3_2
    type: constructor
  - uid: vss-web-extension-sdk.TaskHttpClient3_2.updateRecords
    name: >-
      updateRecords(records: VssJsonCollectionWrapperV, scopeIdentifier: string,
      hubName: string, planId: string, timelineId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: records
          type:
            - VssJsonCollectionWrapperV
          description: ''
        - id: scopeIdentifier
          type:
            - string
          description: The project GUID to scope the request
        - id: hubName
          type:
            - string
          description: >-
            The name of the server hub: "build" for the Build server or "rm" for
            the Release Management server
        - id: planId
          type:
            - string
          description: ''
        - id: timelineId
          type:
            - string
          description: ''
      content: >-
        function updateRecords(records: VssJsonCollectionWrapperV,
        scopeIdentifier: string, hubName: string, planId: string, timelineId:
        string)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestParams
          type:
            - VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestParams
          type:
            - VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vssRequestOptions
          type:
            - IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - IPromise
    type: method
  - uid: vss-web-extension-sdk.TaskHttpClient3_2._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: promise
          type:
            - IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
