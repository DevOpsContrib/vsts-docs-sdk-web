### YamlMime:UniversalReference
items:
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1
    name: FileContainerHttpClient2_1
    fullName: FileContainerHttpClient2_1
    children:
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.authTokenManager
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.containersApiVersion
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.createItem
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.createItems
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.deleteItem
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.constructor
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.forceOptionsCallForAutoNegotiate
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.getContainers
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.getItems
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1._beginGetLocation
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1._beginRequest
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1._beginRequestWithAjaxResult
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1._issueAjaxRequest
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1._rootRequestPath
      - >-
        vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS.FileContainer.RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.authTokenManager
    name: authTokenManager
    fullName: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.containersApiVersion
    name: containersApiVersion
    fullName: containersApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.createItem
    name: >-
      createItem(content: string, containerId: number, itemPath: string, scope?:
      string)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Creates the specified item in the container referenced
      container.
    syntax:
      parameters:
        - id: content
          type:
            - string
          description: Content to upload
        - id: containerId
          type:
            - number
          description: ''
        - id: itemPath
          type:
            - string
          description: ''
        - id: scope
          type:
            - string
          description: >-
            A guid representing the scope of the container. This is often the
            project id.
          optional: true
      content: >-
        function createItem(content: string, containerId: number, itemPath:
        string, scope?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.createItems
    name: >-
      createItems(items: VssJsonCollectionWrapperV, containerId: number, scope?:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Creates the specified items in in the referenced container.'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.WebApi.Contracts.VssJsonCollectionWrapperV
          type:
            - VssJsonCollectionWrapperV
          description: ''
        - id: containerId
          type:
            - number
          description: ''
        - id: scope
          type:
            - string
          description: >-
            A guid representing the scope of the container. This is often the
            project id.
          optional: true
      content: >-
        function createItems(items: VssJsonCollectionWrapperV, containerId:
        number, scope?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.deleteItem
    name: 'deleteItem(containerId: number, itemPath: string, scope?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Deletes the specified items in a container.'
    syntax:
      parameters:
        - id: containerId
          type:
            - number
          description: Container Id.
        - id: itemPath
          type:
            - string
          description: Path to delete.
        - id: scope
          type:
            - string
          description: >-
            A guid representing the scope of the container. This is often the
            project id.
          optional: true
      content: >-
        function deleteItem(containerId: number, itemPath: string, scope?:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.constructor
    name: >-
      FileContainerHttpClient2_1(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions
          type:
            - IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new FileContainerHttpClient2_1(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      return:
        type:
          - >-
            vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    fullName: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.getContainers
    name: 'getContainers(scope?: string, artifactUris?: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Gets containers filtered by a comma separated list of
      artifact uris within the same scope, if not specified returns all
      containers
    syntax:
      parameters:
        - id: scope
          type:
            - string
          description: >-
            A guid representing the scope of the container. This is often the
            project id.
          optional: true
        - id: artifactUris
          type:
            - string
          description: ''
          optional: true
      content: 'function getContainers(scope?: string, artifactUris?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1.getItems
    name: >-
      getItems(containerId: number, scope?: string, itemPath?: string,
      metadata?: boolean, format?: string, downloadFileName?: string,
      includeDownloadTickets?: boolean, isShallow?: boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: containerId
          type:
            - number
          description: ''
        - id: scope
          type:
            - string
          description: ''
          optional: true
        - id: itemPath
          type:
            - string
          description: ''
          optional: true
        - id: metadata
          type:
            - boolean
          description: ''
          optional: true
        - id: format
          type:
            - string
          description: ''
          optional: true
        - id: downloadFileName
          type:
            - string
          description: ''
          optional: true
        - id: includeDownloadTickets
          type:
            - boolean
          description: ''
          optional: true
        - id: isShallow
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getItems(containerId: number, scope?: string, itemPath?:
        string, metadata?: boolean, format?: string, downloadFileName?: string,
        includeDownloadTickets?: boolean, isShallow?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: >-
            vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: >-
            vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vss-web-extension-sdk.IVssAjaxOptions
          type:
            - IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1._rootRequestPath
    name: _rootRequestPath
    fullName: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.FileContainer.RestClient.FileContainerHttpClient2_1._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.IPromise
          type:
            - IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
