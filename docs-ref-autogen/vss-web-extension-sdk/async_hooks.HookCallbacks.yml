### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.async_hooks.HookCallbacks
    name: HookCallbacks
    fullName: HookCallbacks
    children:
      - vss-web-extension-sdk.async_hooks.HookCallbacks.after
      - vss-web-extension-sdk.async_hooks.HookCallbacks.before
      - vss-web-extension-sdk.async_hooks.HookCallbacks.destroy
      - vss-web-extension-sdk.async_hooks.HookCallbacks.init
    langs:
      - typeScript
    type: interface
    summary: ''
    package: vss-web-extension-sdk
    module: async_hooks
  - uid: vss-web-extension-sdk.async_hooks.HookCallbacks.after
    name: 'after(asyncId: number)'
    children: []
    langs:
      - typeScript
    summary: Called immediately after the callback specified in before is completed.
    syntax:
      parameters:
        - id: asyncId
          type:
            - number
          description: >
            the unique identifier assigned to the resource which has executed
            the callback.
      content: 'function after(asyncId: number)'
    type: method
  - uid: vss-web-extension-sdk.async_hooks.HookCallbacks.before
    name: 'before(asyncId: number)'
    children: []
    langs:
      - typeScript
    summary: >-
      When an asynchronous operation is initiated or completes a callback is
      called to notify the user.

      The before callback is called just before said callback is executed.
    syntax:
      parameters:
        - id: asyncId
          type:
            - number
          description: >
            the unique identifier assigned to the resource about to execute the
            callback.
      content: 'function before(asyncId: number)'
    type: method
  - uid: vss-web-extension-sdk.async_hooks.HookCallbacks.destroy
    name: 'destroy(asyncId: number)'
    children: []
    langs:
      - typeScript
    summary: Called after the resource corresponding to asyncId is destroyed
    syntax:
      parameters:
        - id: asyncId
          type:
            - number
          description: |
            a unique ID for the async resource
      content: 'function destroy(asyncId: number)'
    type: method
  - uid: vss-web-extension-sdk.async_hooks.HookCallbacks.init
    name: >-
      init(asyncId: number, type: string, triggerAsyncId: number, resource:
      Object)
    children: []
    langs:
      - typeScript
    summary: >-
      Called when a class is constructed that has the possibility to emit an
      asynchronous event.
    syntax:
      parameters:
        - id: asyncId
          type:
            - number
          description: a unique ID for the async resource
        - id: type
          type:
            - string
          description: the type of the async resource
        - id: triggerAsyncId
          type:
            - number
          description: >-
            the unique ID of the async resource in whose execution context this
            async resource was created
        - id: resource
          type:
            - Object
          description: >
            reference to the resource representing the async operation, needs to
            be released during destroy
      content: >-
        function init(asyncId: number, type: string, triggerAsyncId: number,
        resource: Object)
    type: method
