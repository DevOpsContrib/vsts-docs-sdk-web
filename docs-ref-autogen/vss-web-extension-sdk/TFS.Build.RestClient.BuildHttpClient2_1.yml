### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1
    name: BuildHttpClient2_1
    fullName: BuildHttpClient2_1
    children:
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.constructor
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.createDefinition
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.createQueue
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.deleteBuild
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.deleteQueue
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getAgentPoolQueue
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getArtifact
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getArtifactContentZip
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getArtifacts
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuild
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuildChanges
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuildDeployments
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuildLog
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuildLogs
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuildLogsZip
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuilds
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuildWorkItemsRefs
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuildWorkItemsRefsFromCommits
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getDefinition
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getDefinitions
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getQueues
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getTemplate
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getTemplates
      - vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.queueBuild
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.saveTemplate
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.updateBuild
      - >-
        vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.updateDefinition
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.TFS.Build.RestClient.CommonMethods2_1To4'
    source:
      path: tfs.d.ts
      startLine: 3547
      remote:
        path: typings\tfs.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: TFS/Build/RestClient
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.constructor
    name: >-
      BuildHttpClient2_1(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new BuildHttpClient2_1(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
    type: constructor
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.createDefinition
    name: >-
      createDefinition(definition: BuildDefinition3_2, project?: string,
      definitionToCloneId?: number, definitionToCloneRevision?: number)
    children: []
    langs:
      - typeScript
    summary: Creates a new definition
    syntax:
      content: >-
        function createDefinition(definition: BuildDefinition3_2, project?:
        string, definitionToCloneId?: number, definitionToCloneRevision?:
        number)
      parameters:
        - id: definition
          type:
            - '@vss-web-extension-sdk.TFS.Build.Contracts.BuildDefinition3_2'
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: definitionToCloneId
          type:
            - number
          description: ''
          optional: true
        - id: definitionToCloneRevision
          type:
            - number
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildDefinition3_2>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.createQueue
    name: 'createQueue(queue: AgentPoolQueue)'
    children: []
    langs:
      - typeScript
    summary: Creates a build queue
    syntax:
      content: 'function createQueue(queue: AgentPoolQueue)'
      parameters:
        - id: queue
          type:
            - '@vss-web-extension-sdk.TFS.Build.Contracts.AgentPoolQueue'
          description: ''
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.AgentPoolQueue>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.deleteBuild
    name: 'deleteBuild(buildId: number, project?: string, type?: DefinitionType)'
    children: []
    langs:
      - typeScript
    summary: Deletes a build
    syntax:
      content: >-
        function deleteBuild(buildId: number, project?: string, type?:
        DefinitionType)
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: type
          type:
            - DefinitionType
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.deleteQueue
    name: 'deleteQueue(id: number)'
    children: []
    langs:
      - typeScript
    summary: Deletes a build queue
    syntax:
      content: 'function deleteQueue(id: number)'
      parameters:
        - id: id
          type:
            - number
          description: ''
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getAgentPoolQueue
    name: 'getAgentPoolQueue(controllerId: number)'
    children: []
    langs:
      - typeScript
    summary: Gets a queue
    syntax:
      content: 'function getAgentPoolQueue(controllerId: number)'
      parameters:
        - id: controllerId
          type:
            - number
          description: ''
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.AgentPoolQueue>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getArtifact
    name: >-
      getArtifact(buildId: number, artifactName: string, project?: string,
      definitionType?: DefinitionType)
    children: []
    langs:
      - typeScript
    summary: Gets a specific artifact for a build
    syntax:
      content: >-
        function getArtifact(buildId: number, artifactName: string, project?:
        string, definitionType?: DefinitionType)
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: artifactName
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: definitionType
          type:
            - DefinitionType
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildArtifact>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getArtifactContentZip
    name: >-
      getArtifactContentZip(buildId: number, artifactName: string, project?:
      string, definitionType?: DefinitionType)
    children: []
    langs:
      - typeScript
    summary: Gets a specific artifact for a build
    syntax:
      content: >-
        function getArtifactContentZip(buildId: number, artifactName: string,
        project?: string, definitionType?: DefinitionType)
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: artifactName
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: definitionType
          type:
            - DefinitionType
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<ArrayBuffer>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getArtifacts
    name: >-
      getArtifacts(buildId: number, project?: string, definitionType?:
      DefinitionType)
    children: []
    langs:
      - typeScript
    summary: Gets all artifacts for a build
    syntax:
      content: >-
        function getArtifacts(buildId: number, project?: string,
        definitionType?: DefinitionType)
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: definitionType
          type:
            - DefinitionType
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildArtifact[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuild
    name: >-
      getBuild(buildId: number, project?: string, propertyFilters?: string,
      type?: DefinitionType)
    children: []
    langs:
      - typeScript
    summary: Gets a build
    syntax:
      content: >-
        function getBuild(buildId: number, project?: string, propertyFilters?:
        string, type?: DefinitionType)
      parameters:
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: propertyFilters
          type:
            - string
          description: A comma-delimited list of properties to include in the results
          optional: true
        - id: type
          type:
            - DefinitionType
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Build>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuildChanges
    name: >-
      getBuildChanges(project: string, buildId: number, continuationToken?:
      string, top?: number, includeSourceChange?: boolean, type?:
      DefinitionType)
    children: []
    langs:
      - typeScript
    summary: Gets the changes associated with a build
    syntax:
      content: >-
        function getBuildChanges(project: string, buildId: number,
        continuationToken?: string, top?: number, includeSourceChange?: boolean,
        type?: DefinitionType)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: The maximum number of changes to return
          optional: true
        - id: includeSourceChange
          type:
            - boolean
          description: ''
          optional: true
        - id: type
          type:
            - DefinitionType
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Change[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuildDeployments
    name: 'getBuildDeployments(project: string, buildId: number)'
    children: []
    langs:
      - typeScript
    summary: Gets the deployment information associated with a build
    syntax:
      content: 'function getBuildDeployments(project: string, buildId: number)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Deployment[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuildLog
    name: >-
      getBuildLog(project: string, buildId: number, logId: number, startLine?:
      number, endLine?: number, type?: DefinitionType)
    children: []
    langs:
      - typeScript
    summary: Gets a log
    syntax:
      content: >-
        function getBuildLog(project: string, buildId: number, logId: number,
        startLine?: number, endLine?: number, type?: DefinitionType)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: logId
          type:
            - number
          description: ''
        - id: startLine
          type:
            - number
          description: ''
          optional: true
        - id: endLine
          type:
            - number
          description: ''
          optional: true
        - id: type
          type:
            - DefinitionType
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<ArrayBuffer>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuildLogs
    name: 'getBuildLogs(project: string, buildId: number, type?: DefinitionType)'
    children: []
    langs:
      - typeScript
    summary: Gets logs for a build
    syntax:
      content: >-
        function getBuildLogs(project: string, buildId: number, type?:
        DefinitionType)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: type
          type:
            - DefinitionType
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildLog[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuildLogsZip
    name: 'getBuildLogsZip(project: string, buildId: number, type?: DefinitionType)'
    children: []
    langs:
      - typeScript
    summary: Gets logs for a build
    syntax:
      content: >-
        function getBuildLogsZip(project: string, buildId: number, type?:
        DefinitionType)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: type
          type:
            - DefinitionType
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<ArrayBuffer>'
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuilds
    name: >-
      getBuilds(project?: string, definitions?: number[], queues?: number[],
      buildNumber?: string, minFinishTime?: Date, maxFinishTime?: Date,
      requestedFor?: string, reasonFilter?: BuildReason, statusFilter?:
      BuildStatus, resultFilter?: BuildResult, tagFilters?: string[],
      properties?: string[], type?: DefinitionType, top?: number,
      continuationToken?: string, maxBuildsPerDefinition?: number,
      deletedFilter?: QueryDeletedOption, queryOrder?: BuildQueryOrder,
      branchName?: string)
    children: []
    langs:
      - typeScript
    summary: Gets builds
    syntax:
      content: >-
        function getBuilds(project?: string, definitions?: number[], queues?:
        number[], buildNumber?: string, minFinishTime?: Date, maxFinishTime?:
        Date, requestedFor?: string, reasonFilter?: BuildReason, statusFilter?:
        BuildStatus, resultFilter?: BuildResult, tagFilters?: string[],
        properties?: string[], type?: DefinitionType, top?: number,
        continuationToken?: string, maxBuildsPerDefinition?: number,
        deletedFilter?: QueryDeletedOption, queryOrder?: BuildQueryOrder,
        branchName?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: definitions
          type:
            - 'number[]'
          description: A comma-delimited list of definition ids
          optional: true
        - id: queues
          type:
            - 'number[]'
          description: A comma-delimited list of queue ids
          optional: true
        - id: buildNumber
          type:
            - string
          description: ''
          optional: true
        - id: minFinishTime
          type:
            - Date
          description: ''
          optional: true
        - id: maxFinishTime
          type:
            - Date
          description: ''
          optional: true
        - id: requestedFor
          type:
            - string
          description: ''
          optional: true
        - id: reasonFilter
          type:
            - BuildReason
          description: ''
          optional: true
        - id: statusFilter
          type:
            - BuildStatus
          description: ''
          optional: true
        - id: resultFilter
          type:
            - BuildResult
          description: ''
          optional: true
        - id: tagFilters
          type:
            - 'string[]'
          description: A comma-delimited list of tags
          optional: true
        - id: properties
          type:
            - 'string[]'
          description: A comma-delimited list of properties to include in the results
          optional: true
        - id: type
          type:
            - DefinitionType
          description: The definition type
          optional: true
        - id: top
          type:
            - number
          description: The maximum number of builds to retrieve
          optional: true
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
        - id: maxBuildsPerDefinition
          type:
            - number
          description: ''
          optional: true
        - id: deletedFilter
          type:
            - QueryDeletedOption
          description: ''
          optional: true
        - id: queryOrder
          type:
            - BuildQueryOrder
          description: ''
          optional: true
        - id: branchName
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Build[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuildWorkItemsRefs
    name: >-
      getBuildWorkItemsRefs(project: string, buildId: number, top?: number,
      type?: DefinitionType)
    children: []
    langs:
      - typeScript
    summary: Gets the work item ids associated with a build
    syntax:
      content: >-
        function getBuildWorkItemsRefs(project: string, buildId: number, top?:
        number, type?: DefinitionType)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: top
          type:
            - number
          description: The maximum number of workitems to return
          optional: true
        - id: type
          type:
            - DefinitionType
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.WebApi.Contracts.ResourceRef[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getBuildWorkItemsRefsFromCommits
    name: >-
      getBuildWorkItemsRefsFromCommits(commitIds: string[], project: string,
      buildId: number, top?: number, type?: DefinitionType)
    children: []
    langs:
      - typeScript
    summary: Gets the work item ids associated with build commits
    syntax:
      content: >-
        function getBuildWorkItemsRefsFromCommits(commitIds: string[], project:
        string, buildId: number, top?: number, type?: DefinitionType)
      parameters:
        - id: commitIds
          type:
            - 'string[]'
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: buildId
          type:
            - number
          description: ''
        - id: top
          type:
            - number
          description: >-
            The maximum number of workitems to return, also number of commits to
            consider if commitids are not sent
          optional: true
        - id: type
          type:
            - DefinitionType
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.WebApi.Contracts.ResourceRef[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getDefinition
    name: >-
      getDefinition(definitionId: number, project?: string, revision?: number,
      propertyFilters?: string[], type?: DefinitionType)
    children: []
    langs:
      - typeScript
    summary: 'Gets a definition, optionally at a specific revision'
    syntax:
      content: >-
        function getDefinition(definitionId: number, project?: string,
        revision?: number, propertyFilters?: string[], type?: DefinitionType)
      parameters:
        - id: definitionId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: revision
          type:
            - number
          description: ''
          optional: true
        - id: propertyFilters
          type:
            - 'string[]'
          description: ''
          optional: true
        - id: type
          type:
            - DefinitionType
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.DefinitionReference>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getDefinitions
    name: >-
      getDefinitions(project?: string, name?: string, type?: DefinitionType,
      repositoryId?: string, repositoryType?: string, queryOrder?:
      DefinitionQueryOrder, top?: number)
    children: []
    langs:
      - typeScript
    summary: 'Gets definitions, optionally filtered by name'
    syntax:
      content: >-
        function getDefinitions(project?: string, name?: string, type?:
        DefinitionType, repositoryId?: string, repositoryType?: string,
        queryOrder?: DefinitionQueryOrder, top?: number)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: name
          type:
            - string
          description: ''
          optional: true
        - id: type
          type:
            - DefinitionType
          description: ''
          optional: true
        - id: repositoryId
          type:
            - string
          description: ''
          optional: true
        - id: repositoryType
          type:
            - string
          description: ''
          optional: true
        - id: queryOrder
          type:
            - DefinitionQueryOrder
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.DefinitionReference[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getQueues
    name: 'getQueues(name?: string)'
    children: []
    langs:
      - typeScript
    summary: 'Gets queues, optionally filtered by name'
    syntax:
      content: 'function getQueues(name?: string)'
      parameters:
        - id: name
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.AgentPoolQueue[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getTemplate
    name: 'getTemplate(project: string, templateId: string)'
    children: []
    langs:
      - typeScript
    summary: Gets definition template filtered by id
    syntax:
      content: 'function getTemplate(project: string, templateId: string)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: Id of the requested template.
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildDefinitionTemplate3_2>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.getTemplates
    name: 'getTemplates(project: string)'
    children: []
    langs:
      - typeScript
    summary: Gets definition templates
    syntax:
      content: 'function getTemplates(project: string)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildDefinitionTemplate3_2[]>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.queueBuild
    name: >-
      queueBuild(build: Build, project?: string, ignoreWarnings?: boolean,
      checkInTicket?: string, type?: DefinitionType)
    children: []
    langs:
      - typeScript
    summary: Queues a build
    syntax:
      content: >-
        function queueBuild(build: Build, project?: string, ignoreWarnings?:
        boolean, checkInTicket?: string, type?: DefinitionType)
      parameters:
        - id: build
          type:
            - '@vss-web-extension-sdk.TFS.Build.Contracts.Build'
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: ignoreWarnings
          type:
            - boolean
          description: ''
          optional: true
        - id: checkInTicket
          type:
            - string
          description: ''
          optional: true
        - id: type
          type:
            - DefinitionType
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Build>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.saveTemplate
    name: >-
      saveTemplate(template: BuildDefinitionTemplate3_2, project: string,
      templateId: string)
    children: []
    langs:
      - typeScript
    summary: Saves a definition template
    syntax:
      content: >-
        function saveTemplate(template: BuildDefinitionTemplate3_2, project:
        string, templateId: string)
      parameters:
        - id: template
          type:
            - >-
              @vss-web-extension-sdk.TFS.Build.Contracts.BuildDefinitionTemplate3_2
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: templateId
          type:
            - string
          description: ''
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildDefinitionTemplate3_2>
    type: method
  - uid: vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.updateBuild
    name: >-
      updateBuild(build: Build, buildId: number, project?: string, type?:
      DefinitionType)
    children: []
    langs:
      - typeScript
    summary: Updates a build
    syntax:
      content: >-
        function updateBuild(build: Build, buildId: number, project?: string,
        type?: DefinitionType)
      parameters:
        - id: build
          type:
            - '@vss-web-extension-sdk.TFS.Build.Contracts.Build'
          description: ''
        - id: buildId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: type
          type:
            - DefinitionType
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.Build>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Build.RestClient.BuildHttpClient2_1.updateDefinition
    name: >-
      updateDefinition(definition: BuildDefinition3_2, definitionId: number,
      project?: string, secretsSourceDefinitionId?: number,
      secretsSourceDefinitionRevision?: number)
    children: []
    langs:
      - typeScript
    summary: Updates an existing definition
    syntax:
      content: >-
        function updateDefinition(definition: BuildDefinition3_2, definitionId:
        number, project?: string, secretsSourceDefinitionId?: number,
        secretsSourceDefinitionRevision?: number)
      parameters:
        - id: definition
          type:
            - '@vss-web-extension-sdk.TFS.Build.Contracts.BuildDefinition3_2'
          description: ''
        - id: definitionId
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: secretsSourceDefinitionId
          type:
            - number
          description: ''
          optional: true
        - id: secretsSourceDefinitionRevision
          type:
            - number
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Build.Contracts.BuildDefinition3_2>
    type: method
