### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Filters.FilterControlO
    name: FilterControlO
    fullName: FilterControlO<TOptions>
    children:
      - >-
        vss-web-extension-sdk.VSS.Controls.Filters.FilterControlO.createClauseValueControl
      - >-
        vss-web-extension-sdk.VSS.Controls.Filters.FilterControlO.enhancementTypeName
      - vss-web-extension-sdk.VSS.Controls.Filters.FilterControlO.constructor
      - vss-web-extension-sdk.VSS.Controls.Filters.FilterControlO.getClauseValue
      - >-
        vss-web-extension-sdk.VSS.Controls.Filters.FilterControlO.initializeOptions
      - vss-web-extension-sdk.VSS.Controls.Filters.FilterControlO.setFilter
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.Controls.Control<TOptions>'
    source:
      path: vss.d.ts
      startLine: 11584
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/Filters
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Filters.FilterControlO.createClauseValueControl
    name: createClauseValueControl
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createClauseValueControl(container: JQuery, options?: any)'
      parameters:
        - id: container
          type:
            - JQuery
          description: ''
        - id: options
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - any
    module: VSS/Controls/Filters
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Filters.FilterControlO.enhancementTypeName
    name: enhancementTypeName
    fullName: enhancementTypeName
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string enhancementTypeName
      return:
        type:
          - string
    module: VSS/Controls/Filters
  - uid: vss-web-extension-sdk.VSS.Controls.Filters.FilterControlO.constructor
    name: FilterControlO
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new FilterControlO(options?: any)'
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
    module: VSS/Controls/Filters
  - uid: vss-web-extension-sdk.VSS.Controls.Filters.FilterControlO.getClauseValue
    name: getClauseValue
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getClauseValue(valueControl: any, clause: any)'
      parameters:
        - id: valueControl
          type:
            - any
          description: ''
        - id: clause
          type:
            - any
          description: ''
      return:
        type:
          - string
    module: VSS/Controls/Filters
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Filters.FilterControlO.initializeOptions
    name: initializeOptions
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function initializeOptions(options?: IFilterControlOptions)'
      parameters:
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.Controls.Filters.IFilterControlOptions'
          description: |+

          optional: true
    module: VSS/Controls/Filters
  - uid: vss-web-extension-sdk.VSS.Controls.Filters.FilterControlO.setFilter
    name: setFilter
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setFilter(filter: any)'
      parameters:
        - id: filter
          type:
            - any
          description: ''
    module: VSS/Controls/Filters
