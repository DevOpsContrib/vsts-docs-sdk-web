### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient
    name: SecurityRolesHttpClient
    fullName: SecurityRolesHttpClient
    children:
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.authTokenManager
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.forceOptionsCallForAutoNegotiate
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.getRoleAssignments
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.getRoleDefinitions
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.removeRoleAssignment
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.removeRoleAssignments
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.roleassignmentsApiVersion
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.roledefinitionsApiVersion
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.constructor
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.setRoleAssignment
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.setRoleAssignments
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient._beginGetLocation
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient._beginRequest
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient._beginRequestWithAjaxResult
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient._issueAjaxRequest
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient._rootRequestPath
      - >-
        vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS/SecurityRoles/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.authTokenManager
    name: authTokenManager
    fullName: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    fullName: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.getRoleAssignments
    name: 'getRoleAssignments(scopeId: string, resourceId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeId
          type:
            - string
          description: ''
        - id: resourceId
          type:
            - string
          description: ''
      content: 'function getRoleAssignments(scopeId: string, resourceId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.getRoleDefinitions
    name: 'getRoleDefinitions(scopeId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeId
          type:
            - string
          description: ''
      content: 'function getRoleDefinitions(scopeId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.removeRoleAssignment
    name: >-
      removeRoleAssignment(scopeId: string, resourceId: string, identityId:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: scopeId
          type:
            - string
          description: ''
        - id: resourceId
          type:
            - string
          description: ''
        - id: identityId
          type:
            - string
          description: ''
      content: >-
        function removeRoleAssignment(scopeId: string, resourceId: string,
        identityId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.removeRoleAssignments
    name: >-
      removeRoleAssignments(identityIds: function, scopeId: string, resourceId:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: identityIds
          type:
            - function
          description: ''
        - id: scopeId
          type:
            - string
          description: ''
        - id: resourceId
          type:
            - string
          description: ''
      content: >-
        function removeRoleAssignments(identityIds: function, scopeId: string,
        resourceId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.roleassignmentsApiVersion
    name: roleassignmentsApiVersion
    fullName: roleassignmentsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.roledefinitionsApiVersion
    name: roledefinitionsApiVersion
    fullName: roledefinitionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.constructor
    name: >-
      SecurityRolesHttpClient(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new SecurityRolesHttpClient(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.setRoleAssignment
    name: >-
      setRoleAssignment(roleAssignment: UserRoleAssignmentRef, scopeId: string,
      resourceId: string, identityId: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: roleAssignment
          type:
            - >-
              vss-web-extension-sdk.VSS.SecurityRoles.Contracts.UserRoleAssignmentRef
          description: ''
        - id: scopeId
          type:
            - string
          description: ''
        - id: resourceId
          type:
            - string
          description: ''
        - id: identityId
          type:
            - string
          description: ''
      content: >-
        function setRoleAssignment(roleAssignment: UserRoleAssignmentRef,
        scopeId: string, resourceId: string, identityId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient.setRoleAssignments
    name: >-
      setRoleAssignments(roleAssignments: function, scopeId: string, resourceId:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: roleAssignments
          type:
            - function
          description: ''
        - id: scopeId
          type:
            - string
          description: ''
        - id: resourceId
          type:
            - string
          description: ''
      content: >-
        function setRoleAssignments(roleAssignments: function, scopeId: string,
        resourceId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vssRequestOptions
          type:
            - vss-web-extension-sdk.IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient._rootRequestPath
    name: _rootRequestPath
    fullName: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.SecurityRoles.RestClient.SecurityRolesHttpClient._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: promise
          type:
            - vss-web-extension-sdk.IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
