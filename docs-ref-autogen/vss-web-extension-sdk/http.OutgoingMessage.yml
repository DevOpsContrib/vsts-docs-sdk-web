### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.http.OutgoingMessage
    name: OutgoingMessage
    fullName: OutgoingMessage
    children:
      - vss-web-extension-sdk.http.OutgoingMessage.addTrailers
      - vss-web-extension-sdk.http.OutgoingMessage.chunkedEncoding
      - vss-web-extension-sdk.http.OutgoingMessage.connection
      - vss-web-extension-sdk.http.OutgoingMessage.destroy
      - vss-web-extension-sdk.http.OutgoingMessage.finished
      - vss-web-extension-sdk.http.OutgoingMessage.flushHeaders
      - vss-web-extension-sdk.http.OutgoingMessage.getHeader
      - vss-web-extension-sdk.http.OutgoingMessage.getHeaderNames
      - vss-web-extension-sdk.http.OutgoingMessage.getHeaders
      - vss-web-extension-sdk.http.OutgoingMessage.hasHeader
      - vss-web-extension-sdk.http.OutgoingMessage.headersSent
      - vss-web-extension-sdk.http.OutgoingMessage.constructor
      - vss-web-extension-sdk.http.OutgoingMessage.removeHeader
      - vss-web-extension-sdk.http.OutgoingMessage.sendDate
      - vss-web-extension-sdk.http.OutgoingMessage.setHeader
      - vss-web-extension-sdk.http.OutgoingMessage.setTimeout
      - vss-web-extension-sdk.http.OutgoingMessage.shouldKeepAlive
      - vss-web-extension-sdk.http.OutgoingMessage.upgrading
      - vss-web-extension-sdk.http.OutgoingMessage.useChunkedEncodingByDefault
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.stream.internal.Writable'
    package: vss-web-extension-sdk
    module: http
  - uid: vss-web-extension-sdk.http.OutgoingMessage.addTrailers
    name: 'addTrailers(headers: OutgoingHttpHeaders)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: headers
          type:
            - OutgoingHttpHeaders
          description: ''
      content: 'function addTrailers(headers: OutgoingHttpHeaders)'
    type: method
  - uid: vss-web-extension-sdk.http.OutgoingMessage.chunkedEncoding
    name: chunkedEncoding
    fullName: chunkedEncoding
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.http.OutgoingMessage.connection
    name: connection
    fullName: connection
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - '@vss-web-extension-sdk.net.Socket'
  - uid: vss-web-extension-sdk.http.OutgoingMessage.destroy
    name: 'destroy(error: Error)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: error
          type:
            - Error
          description: ''
      content: 'function destroy(error: Error)'
    type: method
  - uid: vss-web-extension-sdk.http.OutgoingMessage.finished
    name: finished
    fullName: finished
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.http.OutgoingMessage.flushHeaders
    name: flushHeaders()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function flushHeaders()
    type: method
  - uid: vss-web-extension-sdk.http.OutgoingMessage.getHeader
    name: 'getHeader(name: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: ''
      content: 'function getHeader(name: string)'
    type: method
  - uid: vss-web-extension-sdk.http.OutgoingMessage.getHeaderNames
    name: getHeaderNames()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getHeaderNames()
    type: method
  - uid: vss-web-extension-sdk.http.OutgoingMessage.getHeaders
    name: getHeaders()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getHeaders()
      return:
        type:
          - '@vss-web-extension-sdk.http.OutgoingHttpHeaders'
    type: method
  - uid: vss-web-extension-sdk.http.OutgoingMessage.hasHeader
    name: 'hasHeader(name: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: ''
      content: 'function hasHeader(name: string)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.http.OutgoingMessage.headersSent
    name: headersSent
    fullName: headersSent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.http.OutgoingMessage.constructor
    name: OutgoingMessage()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: new OutgoingMessage()
    type: constructor
  - uid: vss-web-extension-sdk.http.OutgoingMessage.removeHeader
    name: 'removeHeader(name: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: ''
      content: 'function removeHeader(name: string)'
    type: method
  - uid: vss-web-extension-sdk.http.OutgoingMessage.sendDate
    name: sendDate
    fullName: sendDate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.http.OutgoingMessage.setHeader
    name: 'setHeader(name: string, value: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: name
          type:
            - string
          description: ''
        - id: value
          type:
            - number
          description: ''
      content: 'function setHeader(name: string, value: number)'
    type: method
  - uid: vss-web-extension-sdk.http.OutgoingMessage.setTimeout
    name: 'setTimeout(msecs: number, callback?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: msecs
          type:
            - number
          description: ''
        - id: callback
          type:
            - function
          description: ''
          optional: true
      content: 'function setTimeout(msecs: number, callback?: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.http.OutgoingMessage.shouldKeepAlive
    name: shouldKeepAlive
    fullName: shouldKeepAlive
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.http.OutgoingMessage.upgrading
    name: upgrading
    fullName: upgrading
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.http.OutgoingMessage.useChunkedEncodingByDefault
    name: useChunkedEncodingByDefault
    fullName: useChunkedEncodingByDefault
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
