### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode
    name: TreeNode
    fullName: TreeNode
    children:
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.application
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.children
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.config
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.create
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.definition
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.droppable
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.emptyFolderNodeText
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.expanded
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.findNode
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.folder
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.hasExpanded
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.icon
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.id
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.isEmptyFolderChildNode
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.isSearchHit
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.iterationPath
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.link
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.linkDelegate
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.moveTo
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.noContextMenu
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.noFocus
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.noTreeIcon
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.owner
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.parent
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.root
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.selected
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.tag
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.text
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.title
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.constructor
      - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.type
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS.Controls.TreeView
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.application
    name: application
    fullName: application
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.children
    name: children
    fullName: children
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.config
    name: config
    fullName: config
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.create
    name: 'create(text: string, config?: any, children?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: text
          type:
            - string
          description: ''
        - id: config
          type:
            - any
          description: ''
          optional: true
        - id: children
          type:
            - function
          description: ''
          optional: true
      content: 'function create(text: string, config?: any, children?: function)'
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.definition
    name: definition
    fullName: definition
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.droppable
    name: droppable
    fullName: droppable
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.emptyFolderNodeText
    name: emptyFolderNodeText
    fullName: emptyFolderNodeText
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.expanded
    name: expanded
    fullName: expanded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.findNode
    name: 'findNode(path: string, sepChar?: string, comparer?: function)'
    children: []
    langs:
      - typeScript
    summary: Finds a node using the given path
    syntax:
      parameters:
        - id: path
          type:
            - string
          description: Path to find
        - id: sepChar
          type:
            - string
          description: 'Path separator, if not given default will be used'
          optional: true
        - id: comparer
          type:
            - function
          description: >
            Comparer used to compare nodes in the path, if not given default
            will be used
          optional: true
      content: 'function findNode(path: string, sepChar?: string, comparer?: function)'
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.folder
    name: folder
    fullName: folder
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.hasExpanded
    name: hasExpanded
    fullName: hasExpanded
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.icon
    name: icon
    fullName: icon
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.id
    name: id
    fullName: id
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.isEmptyFolderChildNode
    name: isEmptyFolderChildNode
    fullName: isEmptyFolderChildNode
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.isSearchHit
    name: isSearchHit
    fullName: isSearchHit
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.iterationPath
    name: iterationPath
    fullName: iterationPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.link
    name: link
    fullName: link
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.linkDelegate
    name: linkDelegate
    fullName: linkDelegate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.moveTo
    name: 'moveTo(newParent: any)'
    children: []
    langs:
      - typeScript
    summary: Move this node to reside under the specified new parent.
    syntax:
      parameters:
        - id: newParent
          type:
            - any
          description: |
            The destination to reparent the source under.
      content: 'function moveTo(newParent: any)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.noContextMenu
    name: noContextMenu
    fullName: noContextMenu
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.noFocus
    name: noFocus
    fullName: noFocus
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.noTreeIcon
    name: noTreeIcon
    fullName: noTreeIcon
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.owner
    name: owner
    fullName: owner
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.parent
    name: parent
    fullName: parent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.root
    name: root
    fullName: root
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.selected
    name: selected
    fullName: selected
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.tag
    name: tag
    fullName: tag
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.text
    name: text
    fullName: text
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.title
    name: title
    fullName: title
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.constructor
    name: 'TreeNode(text: string, config?: any, children?: function, id?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: text
          type:
            - string
          description: ''
        - id: config
          type:
            - any
          description: ''
          optional: true
        - id: children
          type:
            - function
          description: ''
          optional: true
        - id: id
          type:
            - string
          description: |+

          optional: true
      content: >-
        new TreeNode(text: string, config?: any, children?: function, id?:
        string)
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.TreeNode.type
    name: type
    fullName: type
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
