### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Identities.Picker.Cache.ITwoLayerCache
    name: ITwoLayerCache
    fullName: ITwoLayerCache
    children:
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Cache.ITwoLayerCache.addRedirector
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Cache.ITwoLayerCache.configure
      - vss-web-extension-sdk.VSS.Identities.Picker.Cache.ITwoLayerCache.get
      - vss-web-extension-sdk.VSS.Identities.Picker.Cache.ITwoLayerCache.set
    langs:
      - typeScript
    type: interface
    summary: ''
    source:
      path: vss.d.ts
      startLine: 25077
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Identities/Picker/Cache
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Cache.ITwoLayerCache.addRedirector
    name: 'addRedirector(cacheType: CacheableTypes, cache?: ICache<string>)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: cacheType
          type:
            - CacheableTypes
          description: ''
        - id: cache
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.Cache.ICache<string>'
          description: ''
          optional: true
      content: >-
        function addRedirector(cacheType: CacheableTypes, cache?:
        ICache<string>)
    type: method
  - uid: vss-web-extension-sdk.VSS.Identities.Picker.Cache.ITwoLayerCache.configure
    name: 'configure(config: ITwoLayerCacheConfiguration<V>)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: config
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Cache.ITwoLayerCacheConfiguration<V>
          description: ''
      content: 'function configure(config: ITwoLayerCacheConfiguration<V>)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Identities.Picker.Cache.ITwoLayerCache.get
    name: 'get(key: string, cacheTypeHint?: string)'
    children: []
    langs:
      - typeScript
    summary: This method can return null
    syntax:
      parameters:
        - id: key
          type:
            - string
          description: ''
        - id: cacheTypeHint
          type:
            - string
          description: ''
          optional: true
      content: 'function get(key: string, cacheTypeHint?: string)'
      return:
        type:
          - V
    type: method
  - uid: vss-web-extension-sdk.VSS.Identities.Picker.Cache.ITwoLayerCache.set
    name: 'set(key: string, value: V, cacheTypeHint?: string)'
    children: []
    langs:
      - typeScript
    summary: This method is optimistic
    syntax:
      parameters:
        - id: key
          type:
            - string
          description: ''
        - id: value
          type:
            - V
          description: ''
        - id: cacheTypeHint
          type:
            - string
          description: ''
          optional: true
      content: 'function set(key: string, value: V, cacheTypeHint?: string)'
    type: method
