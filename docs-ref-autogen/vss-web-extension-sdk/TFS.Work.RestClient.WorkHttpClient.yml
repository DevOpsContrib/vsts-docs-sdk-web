### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient
    name: WorkHttpClient
    fullName: WorkHttpClient
    children:
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.authTokenManager
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.backlogconfigurationApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.boardcolumnsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.boardfiltersettingsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.boardparentsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.boardrowsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.boardsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.boardusersettingsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.capacitiesApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.cardrulesettingsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.cardsettingsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.chartsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.columnsApiVersion
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.createPlan
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.deletePlan
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.deleteTeamIteration
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.deliverytimelineApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.forceOptionsCallForAutoNegotiate
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBacklogConfigurations
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoard
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardCardRuleSettings
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardCardSettings
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardChart
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardCharts
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardColumns
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardFilterSettings
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardMappingParentItems
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardRows
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoards
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardUserSettings
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getCapacities
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getCapacity
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getColumnSuggestedValues
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getDeliveryTimelineData
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getPlan
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getPlans
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getProcessConfiguration
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getRowSuggestedValues
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getTeamDaysOff
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getTeamFieldValues
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getTeamIteration
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getTeamIterations
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getTeamSettings
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.iterationsApiVersion
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.plansApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.postTeamIteration
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.processconfigurationApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.replaceCapacities
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.rowsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.serviceInstanceId
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.setBoardOptions
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.teamdaysoffApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.teamfieldvaluesApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.teamsettingsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateBoardCardRuleSettings
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateBoardCardSettings
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateBoardChart
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateBoardColumns
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateBoardFilterSettings
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateBoardRows
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateBoardUserSettings
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateCapacity
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updatePlan
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateTeamDaysOff
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateTeamFieldValues
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateTeamSettings
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.constructor
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient._beginGetLocation
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient._beginRequest
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient._beginRequestWithAjaxResult
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient._issueAjaxRequest
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient._rootRequestPath
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: TFS.Work.RestClient
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.authTokenManager
    name: authTokenManager
    fullName: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.backlogconfigurationApiVersion
    name: backlogconfigurationApiVersion
    fullName: backlogconfigurationApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.boardcolumnsApiVersion
    name: boardcolumnsApiVersion
    fullName: boardcolumnsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.boardfiltersettingsApiVersion
    name: boardfiltersettingsApiVersion
    fullName: boardfiltersettingsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.boardparentsApiVersion
    name: boardparentsApiVersion
    fullName: boardparentsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.boardrowsApiVersion
    name: boardrowsApiVersion
    fullName: boardrowsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.boardsApiVersion
    name: boardsApiVersion
    fullName: boardsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.boardusersettingsApiVersion
    name: boardusersettingsApiVersion
    fullName: boardusersettingsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.capacitiesApiVersion
    name: capacitiesApiVersion
    fullName: capacitiesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.cardrulesettingsApiVersion
    name: cardrulesettingsApiVersion
    fullName: cardrulesettingsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.cardsettingsApiVersion
    name: cardsettingsApiVersion
    fullName: cardsettingsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.chartsApiVersion
    name: chartsApiVersion
    fullName: chartsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.columnsApiVersion
    name: columnsApiVersion
    fullName: columnsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.createPlan
    name: 'createPlan(postedPlan: CreatePlan, project: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Add a new plan for the team'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Work.Contracts.CreatePlan
          type:
            - CreatePlan
          description: Plan definition
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function createPlan(postedPlan: CreatePlan, project: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.deletePlan
    name: 'deletePlan(project: string, id: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Delete the specified plan'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: id
          type:
            - string
          description: Identifier of the plan
      content: 'function deletePlan(project: string, id: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.deleteTeamIteration
    name: 'deleteTeamIteration(teamContext: TeamContext, id: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: id
          type:
            - string
          description: ''
      content: 'function deleteTeamIteration(teamContext: TeamContext, id: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.deliverytimelineApiVersion
    name: deliverytimelineApiVersion
    fullName: deliverytimelineApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    fullName: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBacklogConfigurations
    name: 'getBacklogConfigurations(teamContext: TeamContext)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
      content: 'function getBacklogConfigurations(teamContext: TeamContext)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoard
    name: 'getBoard(teamContext: TeamContext, id: string)'
    children: []
    langs:
      - typeScript
    summary: Get board
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: id
          type:
            - string
          description: >-
            identifier for board, either board's backlog level name
            (Eg:"Stories") or Id
      content: 'function getBoard(teamContext: TeamContext, id: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardCardRuleSettings
    name: 'getBoardCardRuleSettings(teamContext: TeamContext, board: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Get board card Rule settings for the board id or board by
      name
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: >-
        function getBoardCardRuleSettings(teamContext: TeamContext, board:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardCardSettings
    name: 'getBoardCardSettings(teamContext: TeamContext, board: string)'
    children: []
    langs:
      - typeScript
    summary: Get board card settings for the board id or board by name
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: 'function getBoardCardSettings(teamContext: TeamContext, board: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardChart
    name: 'getBoardChart(teamContext: TeamContext, board: string, name: string)'
    children: []
    langs:
      - typeScript
    summary: Get a board chart
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: >-
            Identifier for board, either board's backlog level name
            (Eg:"Stories") or Id
        - id: name
          type:
            - string
          description: The chart name
      content: >-
        function getBoardChart(teamContext: TeamContext, board: string, name:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardCharts
    name: 'getBoardCharts(teamContext: TeamContext, board: string)'
    children: []
    langs:
      - typeScript
    summary: Get board charts
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: >-
            Identifier for board, either board's backlog level name
            (Eg:"Stories") or Id
      content: 'function getBoardCharts(teamContext: TeamContext, board: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardColumns
    name: 'getBoardColumns(teamContext: TeamContext, board: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: 'function getBoardColumns(teamContext: TeamContext, board: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardFilterSettings
    name: 'getBoardFilterSettings(teamContext: TeamContext, board: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns the board filter settings for the given board id or
      board by name
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: 'function getBoardFilterSettings(teamContext: TeamContext, board: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardMappingParentItems
    name: >-
      getBoardMappingParentItems(teamContext: TeamContext,
      childBacklogContextCategoryRefName: string, workitemIds: function)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns the list of parent field filter model for the given
      list of workitem ids
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: childBacklogContextCategoryRefName
          type:
            - string
          description: ''
        - id: workitemIds
          type:
            - function
          description: ''
      content: >-
        function getBoardMappingParentItems(teamContext: TeamContext,
        childBacklogContextCategoryRefName: string, workitemIds: function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardRows
    name: 'getBoardRows(teamContext: TeamContext, board: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: 'function getBoardRows(teamContext: TeamContext, board: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoards
    name: 'getBoards(teamContext: TeamContext)'
    children: []
    langs:
      - typeScript
    summary: Get boards
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
      content: 'function getBoards(teamContext: TeamContext)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getBoardUserSettings
    name: 'getBoardUserSettings(teamContext: TeamContext, board: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: 'function getBoardUserSettings(teamContext: TeamContext, board: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getCapacities
    name: 'getCapacities(teamContext: TeamContext, iterationId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: iterationId
          type:
            - string
          description: ''
      content: 'function getCapacities(teamContext: TeamContext, iterationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getCapacity
    name: >-
      getCapacity(teamContext: TeamContext, iterationId: string, teamMemberId:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: iterationId
          type:
            - string
          description: ''
        - id: teamMemberId
          type:
            - string
          description: ''
      content: >-
        function getCapacity(teamContext: TeamContext, iterationId: string,
        teamMemberId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getColumnSuggestedValues
    name: 'getColumnSuggestedValues(project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function getColumnSuggestedValues(project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getDeliveryTimelineData
    name: >-
      getDeliveryTimelineData(project: string, id: string, revision?: number,
      startDate?: Date, endDate?: Date)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get Delivery View Data'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: id
          type:
            - string
          description: Identifier for delivery view
        - id: revision
          type:
            - number
          description: >-
            Revision of the plan for which you want data. If the current plan is
            a different revision you will get an ViewRevisionMismatchException
            exception. If you do not supply a revision you will get data for the
            latest revision.
          optional: true
        - id: startDate
          type:
            - Date
          description: The start date of timeline
          optional: true
        - id: endDate
          type:
            - Date
          description: The end date of timeline
          optional: true
      content: >-
        function getDeliveryTimelineData(project: string, id: string, revision?:
        number, startDate?: Date, endDate?: Date)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getPlan
    name: 'getPlan(project: string, id: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get the information for the specified plan'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: id
          type:
            - string
          description: Identifier of the plan
      content: 'function getPlan(project: string, id: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getPlans
    name: 'getPlans(project: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Get the information for all the plans configured for the
      given team
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function getPlans(project: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getProcessConfiguration
    name: 'getProcessConfiguration(project: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function getProcessConfiguration(project: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getRowSuggestedValues
    name: 'getRowSuggestedValues(project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function getRowSuggestedValues(project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getTeamDaysOff
    name: 'getTeamDaysOff(teamContext: TeamContext, iterationId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: iterationId
          type:
            - string
          description: ''
      content: 'function getTeamDaysOff(teamContext: TeamContext, iterationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getTeamFieldValues
    name: 'getTeamFieldValues(teamContext: TeamContext)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
      content: 'function getTeamFieldValues(teamContext: TeamContext)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getTeamIteration
    name: 'getTeamIteration(teamContext: TeamContext, id: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: id
          type:
            - string
          description: ''
      content: 'function getTeamIteration(teamContext: TeamContext, id: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getTeamIterations
    name: 'getTeamIterations(teamContext: TeamContext, timeframe?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: timeframe
          type:
            - string
          description: ''
          optional: true
      content: 'function getTeamIterations(teamContext: TeamContext, timeframe?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.getTeamSettings
    name: 'getTeamSettings(teamContext: TeamContext)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
      content: 'function getTeamSettings(teamContext: TeamContext)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.iterationsApiVersion
    name: iterationsApiVersion
    fullName: iterationsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.plansApiVersion
    name: plansApiVersion
    fullName: plansApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.postTeamIteration
    name: >-
      postTeamIteration(iteration: TeamSettingsIteration, teamContext:
      TeamContext)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Work.Contracts.TeamSettingsIteration
          type:
            - TeamSettingsIteration
          description: ''
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
      content: >-
        function postTeamIteration(iteration: TeamSettingsIteration,
        teamContext: TeamContext)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.processconfigurationApiVersion
    name: processconfigurationApiVersion
    fullName: processconfigurationApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.replaceCapacities
    name: >-
      replaceCapacities(capacities: function, teamContext: TeamContext,
      iterationId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: capacities
          type:
            - function
          description: ''
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: iterationId
          type:
            - string
          description: ''
      content: >-
        function replaceCapacities(capacities: function, teamContext:
        TeamContext, iterationId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.rowsApiVersion
    name: rowsApiVersion
    fullName: rowsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.setBoardOptions
    name: 'setBoardOptions(options: function, teamContext: TeamContext, id: string)'
    children: []
    langs:
      - typeScript
    summary: Update board options
    syntax:
      parameters:
        - id: options
          type:
            - function
          description: options to updated
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: id
          type:
            - string
          description: >-
            identifier for board, either category plural name (Eg:"Stories") or
            guid
      content: >-
        function setBoardOptions(options: function, teamContext: TeamContext,
        id: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.teamdaysoffApiVersion
    name: teamdaysoffApiVersion
    fullName: teamdaysoffApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.teamfieldvaluesApiVersion
    name: teamfieldvaluesApiVersion
    fullName: teamfieldvaluesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.teamsettingsApiVersion
    name: teamsettingsApiVersion
    fullName: teamsettingsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateBoardCardRuleSettings
    name: >-
      updateBoardCardRuleSettings(boardCardRuleSettings: BoardCardRuleSettings,
      teamContext: TeamContext, board: string)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Update board card Rule settings for the board id or board by
      name
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Work.Contracts.BoardCardRuleSettings
          type:
            - BoardCardRuleSettings
          description: ''
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: >-
        function updateBoardCardRuleSettings(boardCardRuleSettings:
        BoardCardRuleSettings, teamContext: TeamContext, board: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateBoardCardSettings
    name: >-
      updateBoardCardSettings(boardCardSettingsToSave: BoardCardSettings,
      teamContext: TeamContext, board: string)
    children: []
    langs:
      - typeScript
    summary: Update board card settings for the board id or board by name
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Work.Contracts.BoardCardSettings
          type:
            - BoardCardSettings
          description: ''
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: >-
        function updateBoardCardSettings(boardCardSettingsToSave:
        BoardCardSettings, teamContext: TeamContext, board: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateBoardChart
    name: >-
      updateBoardChart(chart: BoardChart, teamContext: TeamContext, board:
      string, name: string)
    children: []
    langs:
      - typeScript
    summary: Update a board chart
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Work.Contracts.BoardChart
          type:
            - BoardChart
          description: ''
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: >-
            Identifier for board, either board's backlog level name
            (Eg:"Stories") or Id
        - id: name
          type:
            - string
          description: The chart name
      content: >-
        function updateBoardChart(chart: BoardChart, teamContext: TeamContext,
        board: string, name: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateBoardColumns
    name: >-
      updateBoardColumns(boardColumns: function, teamContext: TeamContext,
      board: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: boardColumns
          type:
            - function
          description: ''
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: >-
        function updateBoardColumns(boardColumns: function, teamContext:
        TeamContext, board: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateBoardFilterSettings
    name: >-
      updateBoardFilterSettings(filterSettings: BoardFilterSettings,
      teamContext: TeamContext, board: string)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Update board filter settings for the board id or board by
      name
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Work.Contracts.BoardFilterSettings
          type:
            - BoardFilterSettings
          description: ''
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: >-
        function updateBoardFilterSettings(filterSettings: BoardFilterSettings,
        teamContext: TeamContext, board: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateBoardRows
    name: >-
      updateBoardRows(boardRows: function, teamContext: TeamContext, board:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: boardRows
          type:
            - function
          description: ''
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: >-
        function updateBoardRows(boardRows: function, teamContext: TeamContext,
        board: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateBoardUserSettings
    name: >-
      updateBoardUserSettings(boardUserSettings: function, teamContext:
      TeamContext, board: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Update board user settings for the board id'
    syntax:
      parameters:
        - id: boardUserSettings
          type:
            - function
          description: ''
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: >-
        function updateBoardUserSettings(boardUserSettings: function,
        teamContext: TeamContext, board: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateCapacity
    name: >-
      updateCapacity(patch: CapacityPatch, teamContext: TeamContext,
      iterationId: string, teamMemberId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Work.Contracts.CapacityPatch
          type:
            - CapacityPatch
          description: ''
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: iterationId
          type:
            - string
          description: ''
        - id: teamMemberId
          type:
            - string
          description: ''
      content: >-
        function updateCapacity(patch: CapacityPatch, teamContext: TeamContext,
        iterationId: string, teamMemberId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updatePlan
    name: 'updatePlan(updatedPlan: UpdatePlan, project: string, id: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Update the information for the specified plan'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Work.Contracts.UpdatePlan
          type:
            - UpdatePlan
          description: Plan definition to be updated
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: id
          type:
            - string
          description: Identifier of the plan
      content: >-
        function updatePlan(updatedPlan: UpdatePlan, project: string, id:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateTeamDaysOff
    name: >-
      updateTeamDaysOff(daysOffPatch: TeamSettingsDaysOffPatch, teamContext:
      TeamContext, iterationId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Work.Contracts.TeamSettingsDaysOffPatch
          type:
            - TeamSettingsDaysOffPatch
          description: ''
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
        - id: iterationId
          type:
            - string
          description: ''
      content: >-
        function updateTeamDaysOff(daysOffPatch: TeamSettingsDaysOffPatch,
        teamContext: TeamContext, iterationId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateTeamFieldValues
    name: >-
      updateTeamFieldValues(patch: TeamFieldValuesPatch, teamContext:
      TeamContext)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Work.Contracts.TeamFieldValuesPatch
          type:
            - TeamFieldValuesPatch
          description: ''
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
      content: >-
        function updateTeamFieldValues(patch: TeamFieldValuesPatch, teamContext:
        TeamContext)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.updateTeamSettings
    name: >-
      updateTeamSettings(teamSettingsPatch: TeamSettingsPatch, teamContext:
      TeamContext)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TFS.Work.Contracts.TeamSettingsPatch
          type:
            - TeamSettingsPatch
          description: ''
        - id: vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          type:
            - TeamContext
          description: The team context for the operation
      content: >-
        function updateTeamSettings(teamSettingsPatch: TeamSettingsPatch,
        teamContext: TeamContext)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient.constructor
    name: 'WorkHttpClient(rootRequestPath: string, options?: IVssHttpClientOptions)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions
          type:
            - IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new WorkHttpClient(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      return:
        type:
          - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient
    type: constructor
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: >-
            vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: >-
            vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vss-web-extension-sdk.IVssAjaxOptions
          type:
            - IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient._rootRequestPath
    name: _rootRequestPath
    fullName: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.IPromise
          type:
            - IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
