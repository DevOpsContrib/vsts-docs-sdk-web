### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4
    name: CommonMethods2To4
    fullName: CommonMethods2To4
    children:
      - >-
        vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.constructor
      - >-
        vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.queryAccessControlLists
      - >-
        vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.querySecurityNamespaces
      - >-
        vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.removeAccessControlEntries
      - >-
        vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.removeAccessControlLists
      - >-
        vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.removePermission
      - >-
        vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.setAccessControlEntries
      - >-
        vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.setAccessControlLists
      - >-
        vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.setInheritFlag
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.WebApi.RestClient.VssHttpClient'
    source:
      path: vss.d.ts
      startLine: 31505
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Security/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.constructor
    name: >-
      CommonMethods2To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new CommonMethods2To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.queryAccessControlLists
    name: >-
      queryAccessControlLists(securityNamespaceId: string, token?: string,
      descriptors?: string, includeExtendedInfo?: boolean, recurse?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: securityNamespaceId
          type:
            - string
          description: ''
        - id: token
          type:
            - string
          description: ''
          optional: true
        - id: descriptors
          type:
            - string
          description: ''
          optional: true
        - id: includeExtendedInfo
          type:
            - boolean
          description: ''
          optional: true
        - id: recurse
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function queryAccessControlLists(securityNamespaceId: string, token?:
        string, descriptors?: string, includeExtendedInfo?: boolean, recurse?:
        boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Security.Contracts.AccessControlList[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.querySecurityNamespaces
    name: 'querySecurityNamespaces(securityNamespaceId: string, localOnly?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: securityNamespaceId
          type:
            - string
          description: ''
        - id: localOnly
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function querySecurityNamespaces(securityNamespaceId: string,
        localOnly?: boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Security.Contracts.SecurityNamespaceDescription[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.removeAccessControlEntries
    name: >-
      removeAccessControlEntries(securityNamespaceId: string, token?: string,
      descriptors?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: securityNamespaceId
          type:
            - string
          description: ''
        - id: token
          type:
            - string
          description: ''
          optional: true
        - id: descriptors
          type:
            - string
          description: ''
          optional: true
      content: >-
        function removeAccessControlEntries(securityNamespaceId: string, token?:
        string, descriptors?: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<boolean>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.removeAccessControlLists
    name: >-
      removeAccessControlLists(securityNamespaceId: string, tokens?: string,
      recurse?: boolean)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: securityNamespaceId
          type:
            - string
          description: ''
        - id: tokens
          type:
            - string
          description: ''
          optional: true
        - id: recurse
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function removeAccessControlLists(securityNamespaceId: string, tokens?:
        string, recurse?: boolean)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<boolean>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.removePermission
    name: >-
      removePermission(securityNamespaceId: string, permissions?: number,
      token?: string, descriptor?: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: securityNamespaceId
          type:
            - string
          description: ''
        - id: permissions
          type:
            - number
          description: ''
          optional: true
        - id: token
          type:
            - string
          description: ''
          optional: true
        - id: descriptor
          type:
            - string
          description: ''
          optional: true
      content: >-
        function removePermission(securityNamespaceId: string, permissions?:
        number, token?: string, descriptor?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Security.Contracts.AccessControlEntry>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.setAccessControlEntries
    name: 'setAccessControlEntries(container: any, securityNamespaceId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: container
          type:
            - any
          description: ''
        - id: securityNamespaceId
          type:
            - string
          description: ''
      content: >-
        function setAccessControlEntries(container: any, securityNamespaceId:
        string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Security.Contracts.AccessControlEntry[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.setAccessControlLists
    name: >-
      setAccessControlLists(accessControlLists:
      VssJsonCollectionWrapperV<AccessControlListsCollection>,
      securityNamespaceId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: accessControlLists
          type:
            - >-
              @vss-web-extension-sdk.VSS.WebApi.Contracts.VssJsonCollectionWrapperV<@vss-web-extension-sdk.VSS.Security.Contracts.AccessControlListsCollection>
          description: ''
        - id: securityNamespaceId
          type:
            - string
          description: ''
      content: >-
        function setAccessControlLists(accessControlLists:
        VssJsonCollectionWrapperV<AccessControlListsCollection>,
        securityNamespaceId: string)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Security.RestClient.CommonMethods2To4.setInheritFlag
    name: 'setInheritFlag(container: any, securityNamespaceId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: container
          type:
            - any
          description: ''
        - id: securityNamespaceId
          type:
            - string
          description: ''
      content: 'function setInheritFlag(container: any, securityNamespaceId: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
