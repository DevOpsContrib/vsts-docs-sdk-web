### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateViewModel
    name: TemplateViewModel
    fullName: TemplateViewModel
    children:
      - vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateViewModel.computed
      - vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateViewModel.dispose
      - vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateViewModel.subscribe
      - >-
        vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateViewModel.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    source:
      path: vss.d.ts
      startLine: 3440
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Adapters/Knockout
  - uid: vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateViewModel.computed
    name: 'computed(func: function)'
    children: []
    langs:
      - typeScript
    summary: >-
      Proxy for a knockout computed to keep track of it to ensure that when the
      control is disposed, computed is also disposed.
    syntax:
      parameters:
        - id: func
          type:
            - function
          description: ''
      content: 'function computed(func: function)'
      return:
        type:
          - KnockoutComputed<any>
    type: method
  - uid: vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateViewModel.dispose
    name: dispose()
    children: []
    langs:
      - typeScript
    summary: Disposes all disposables.
    syntax:
      parameters: []
      content: function dispose()
    type: method
  - uid: vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateViewModel.subscribe
    name: 'subscribe(subscribable: KnockoutSubscribable<any>, callback: function)'
    children: []
    langs:
      - typeScript
    summary: >-
      Proxy for a knockout subscription to keep track of it to ensure that when
      the control is disposed, subscription is also disposed.
    syntax:
      parameters:
        - id: subscribable
          type:
            - KnockoutSubscribable<any>
          description: ''
        - id: callback
          type:
            - function
          description: ''
      content: >-
        function subscribe(subscribable: KnockoutSubscribable<any>, callback:
        function)
      return:
        type:
          - '@vss-web-extension-sdk.IDisposable'
    type: method
  - uid: vss-web-extension-sdk.VSS.Adapters.Knockout.TemplateViewModel.constructor
    name: TemplateViewModel()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: new TemplateViewModel()
    type: constructor
