### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4
    name: CommonMethods2To4
    fullName: CommonMethods2To4
    children:
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.constructor
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.createChangeset
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getBatchedChangesets
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getBranch
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getBranches
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getBranchRefs
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getChangeset
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getChangesetChanges
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getChangesetWorkItems
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getItem
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getItemContent
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getItems
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getItemsBatch
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getItemsBatchZip
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getItemText
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getItemZip
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getLabel
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getLabelItems
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getLabels
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getShelveset
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getShelvesetChanges
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getShelvesets
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getShelvesetWorkItems
      - >-
        vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.serviceInstanceId
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.WebApi.RestClient.VssHttpClient'
    source:
      path: tfs.d.ts
      startLine: 17299
      remote:
        path: typings\tfs.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: TFS/VersionControl/TfvcRestClient
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.constructor
    name: >-
      CommonMethods2To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new CommonMethods2To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
    type: constructor
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.createChangeset
    name: 'createChangeset(changeset: TfvcChangeset, project?: string)'
    children: []
    langs:
      - typeScript
    summary: Create a new changeset.
    syntax:
      content: 'function createChangeset(changeset: TfvcChangeset, project?: string)'
      parameters:
        - id: changeset
          type:
            - '@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcChangeset'
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcChangesetRef>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getBatchedChangesets
    name: 'getBatchedChangesets(changesetsRequestData: TfvcChangesetsRequestData)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getBatchedChangesets(changesetsRequestData:
        TfvcChangesetsRequestData)
      parameters:
        - id: changesetsRequestData
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcChangesetsRequestData
          description: ''
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcChangesetRef[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getBranch
    name: >-
      getBranch(path: string, project?: string, includeParent?: boolean,
      includeChildren?: boolean)
    children: []
    langs:
      - typeScript
    summary: >-
      Get a single branch hierarchy at the given path with parents or children
      (if specified)
    syntax:
      content: >-
        function getBranch(path: string, project?: string, includeParent?:
        boolean, includeChildren?: boolean)
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: includeParent
          type:
            - boolean
          description: ''
          optional: true
        - id: includeChildren
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcBranch>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getBranches
    name: >-
      getBranches(project?: string, includeParent?: boolean, includeChildren?:
      boolean, includeDeleted?: boolean, includeLinks?: boolean)
    children: []
    langs:
      - typeScript
    summary: >-
      Get a collection of branch roots -- first-level children, branches with no
      parents
    syntax:
      content: >-
        function getBranches(project?: string, includeParent?: boolean,
        includeChildren?: boolean, includeDeleted?: boolean, includeLinks?:
        boolean)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: includeParent
          type:
            - boolean
          description: ''
          optional: true
        - id: includeChildren
          type:
            - boolean
          description: ''
          optional: true
        - id: includeDeleted
          type:
            - boolean
          description: ''
          optional: true
        - id: includeLinks
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcBranch[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getBranchRefs
    name: >-
      getBranchRefs(scopePath: string, project?: string, includeDeleted?:
      boolean, includeLinks?: boolean)
    children: []
    langs:
      - typeScript
    summary: Get branch hierarchies below the specified scopePath
    syntax:
      content: >-
        function getBranchRefs(scopePath: string, project?: string,
        includeDeleted?: boolean, includeLinks?: boolean)
      parameters:
        - id: scopePath
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: includeDeleted
          type:
            - boolean
          description: ''
          optional: true
        - id: includeLinks
          type:
            - boolean
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcBranchRef[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getChangeset
    name: >-
      getChangeset(id: number, project?: string, maxChangeCount?: number,
      includeDetails?: boolean, includeWorkItems?: boolean, maxCommentLength?:
      number, includeSourceRename?: boolean, skip?: number, top?: number,
      orderby?: string, searchCriteria?: TfvcChangesetSearchCriteria)
    children: []
    langs:
      - typeScript
    summary: Retrieve a Tfvc Changeset
    syntax:
      content: >-
        function getChangeset(id: number, project?: string, maxChangeCount?:
        number, includeDetails?: boolean, includeWorkItems?: boolean,
        maxCommentLength?: number, includeSourceRename?: boolean, skip?: number,
        top?: number, orderby?: string, searchCriteria?:
        TfvcChangesetSearchCriteria)
      parameters:
        - id: id
          type:
            - number
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: maxChangeCount
          type:
            - number
          description: ''
          optional: true
        - id: includeDetails
          type:
            - boolean
          description: ''
          optional: true
        - id: includeWorkItems
          type:
            - boolean
          description: ''
          optional: true
        - id: maxCommentLength
          type:
            - number
          description: ''
          optional: true
        - id: includeSourceRename
          type:
            - boolean
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: orderby
          type:
            - string
          description: ''
          optional: true
        - id: searchCriteria
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcChangesetSearchCriteria
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcChangeset>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getChangesetChanges
    name: 'getChangesetChanges(id?: number, skip?: number, top?: number)'
    children: []
    langs:
      - typeScript
    summary: Retrieve Tfvc changes for a given changeset
    syntax:
      content: 'function getChangesetChanges(id?: number, skip?: number, top?: number)'
      parameters:
        - id: id
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcChange[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getChangesetWorkItems
    name: 'getChangesetWorkItems(id?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getChangesetWorkItems(id?: number)'
      parameters:
        - id: id
          type:
            - number
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.AssociatedWorkItem[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getItem
    name: >-
      getItem(path: string, project?: string, fileName?: string, download?:
      boolean, scopePath?: string, recursionLevel?: VersionControlRecursionType,
      versionDescriptor?: TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    syntax:
      content: >-
        function getItem(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor)
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: ''
          optional: true
        - id: download
          type:
            - boolean
          description: ''
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - VersionControlRecursionType
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcVersionDescriptor
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcItem>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getItemContent
    name: >-
      getItemContent(path: string, project?: string, fileName?: string,
      download?: boolean, scopePath?: string, recursionLevel?:
      VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    syntax:
      content: >-
        function getItemContent(path: string, project?: string, fileName?:
        string, download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor)
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: ''
          optional: true
        - id: download
          type:
            - boolean
          description: ''
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - VersionControlRecursionType
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcVersionDescriptor
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<ArrayBuffer>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getItems
    name: >-
      getItems(project?: string, scopePath?: string, recursionLevel?:
      VersionControlRecursionType, includeLinks?: boolean, versionDescriptor?:
      TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: Get a list of Tfvc items
    syntax:
      content: >-
        function getItems(project?: string, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, includeLinks?: boolean, versionDescriptor?:
        TfvcVersionDescriptor)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - VersionControlRecursionType
          description: ''
          optional: true
        - id: includeLinks
          type:
            - boolean
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcVersionDescriptor
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcItem[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getItemsBatch
    name: 'getItemsBatch(itemRequestData: TfvcItemRequestData, project?: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Post for retrieving a set of items given a list of paths or a long path.
      Allows for specifying the recursionLevel and version descriptors for each
      path.
    syntax:
      content: >-
        function getItemsBatch(itemRequestData: TfvcItemRequestData, project?:
        string)
      parameters:
        - id: itemRequestData
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcItemRequestData
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcItem[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getItemsBatchZip
    name: 'getItemsBatchZip(itemRequestData: TfvcItemRequestData, project?: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Post for retrieving a set of items given a list of paths or a long path.
      Allows for specifying the recursionLevel and version descriptors for each
      path.
    syntax:
      content: >-
        function getItemsBatchZip(itemRequestData: TfvcItemRequestData,
        project?: string)
      parameters:
        - id: itemRequestData
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcItemRequestData
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<ArrayBuffer>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getItemText
    name: >-
      getItemText(path: string, project?: string, fileName?: string, download?:
      boolean, scopePath?: string, recursionLevel?: VersionControlRecursionType,
      versionDescriptor?: TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    syntax:
      content: >-
        function getItemText(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor)
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: ''
          optional: true
        - id: download
          type:
            - boolean
          description: ''
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - VersionControlRecursionType
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcVersionDescriptor
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<string>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getItemZip
    name: >-
      getItemZip(path: string, project?: string, fileName?: string, download?:
      boolean, scopePath?: string, recursionLevel?: VersionControlRecursionType,
      versionDescriptor?: TfvcVersionDescriptor)
    children: []
    langs:
      - typeScript
    summary: >-
      Get Item Metadata and/or Content for a single item. The download parameter
      is to indicate whether the content should be available as a download or
      just sent as a stream in the response. Doesn't apply to zipped content
      which is always returned as a download.
    syntax:
      content: >-
        function getItemZip(path: string, project?: string, fileName?: string,
        download?: boolean, scopePath?: string, recursionLevel?:
        VersionControlRecursionType, versionDescriptor?: TfvcVersionDescriptor)
      parameters:
        - id: path
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: fileName
          type:
            - string
          description: ''
          optional: true
        - id: download
          type:
            - boolean
          description: ''
          optional: true
        - id: scopePath
          type:
            - string
          description: ''
          optional: true
        - id: recursionLevel
          type:
            - VersionControlRecursionType
          description: ''
          optional: true
        - id: versionDescriptor
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcVersionDescriptor
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<ArrayBuffer>'
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getLabel
    name: >-
      getLabel(labelId: string, requestData: TfvcLabelRequestData, project?:
      string)
    children: []
    langs:
      - typeScript
    summary: Get a single deep label.
    syntax:
      content: >-
        function getLabel(labelId: string, requestData: TfvcLabelRequestData,
        project?: string)
      parameters:
        - id: labelId
          type:
            - string
          description: Unique identifier of label
        - id: requestData
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcLabelRequestData
          description: maxItemCount
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcLabel>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getLabelItems
    name: 'getLabelItems(labelId: string, top?: number, skip?: number)'
    children: []
    langs:
      - typeScript
    summary: Get items under a label.
    syntax:
      content: 'function getLabelItems(labelId: string, top?: number, skip?: number)'
      parameters:
        - id: labelId
          type:
            - string
          description: Unique identifier of label
        - id: top
          type:
            - number
          description: Max number of items to return
          optional: true
        - id: skip
          type:
            - number
          description: Number of items to skip
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcItem[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getLabels
    name: >-
      getLabels(requestData: TfvcLabelRequestData, project?: string, top?:
      number, skip?: number)
    children: []
    langs:
      - typeScript
    summary: Get a collection of shallow label references.
    syntax:
      content: >-
        function getLabels(requestData: TfvcLabelRequestData, project?: string,
        top?: number, skip?: number)
      parameters:
        - id: requestData
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcLabelRequestData
          description: 'labelScope, name, owner, and itemLabelFilter'
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: top
          type:
            - number
          description: Max number of labels to return
          optional: true
        - id: skip
          type:
            - number
          description: Number of labels to skip
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcLabelRef[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getShelveset
    name: 'getShelveset(shelvesetId: string, requestData?: TfvcShelvesetRequestData)'
    children: []
    langs:
      - typeScript
    summary: Get a single deep shelveset.
    syntax:
      content: >-
        function getShelveset(shelvesetId: string, requestData?:
        TfvcShelvesetRequestData)
      parameters:
        - id: shelvesetId
          type:
            - string
          description: Shelveset's unique ID
        - id: requestData
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcShelvesetRequestData
          description: >-
            includeDetails, includeWorkItems, maxChangeCount, and
            maxCommentLength
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcShelveset>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getShelvesetChanges
    name: 'getShelvesetChanges(shelvesetId: string, top?: number, skip?: number)'
    children: []
    langs:
      - typeScript
    summary: Get changes included in a shelveset.
    syntax:
      content: >-
        function getShelvesetChanges(shelvesetId: string, top?: number, skip?:
        number)
      parameters:
        - id: shelvesetId
          type:
            - string
          description: Shelveset's unique ID
        - id: top
          type:
            - number
          description: Max number of changes to return
          optional: true
        - id: skip
          type:
            - number
          description: Number of changes to skip
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcChange[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getShelvesets
    name: >-
      getShelvesets(requestData?: TfvcShelvesetRequestData, top?: number, skip?:
      number)
    children: []
    langs:
      - typeScript
    summary: Return a collection of shallow shelveset references.
    syntax:
      content: >-
        function getShelvesets(requestData?: TfvcShelvesetRequestData, top?:
        number, skip?: number)
      parameters:
        - id: requestData
          type:
            - >-
              @vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcShelvesetRequestData
          description: 'name, owner, and maxCommentLength'
          optional: true
        - id: top
          type:
            - number
          description: Max number of shelvesets to return
          optional: true
        - id: skip
          type:
            - number
          description: Number of shelvesets to skip
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.TfvcShelvesetRef[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.getShelvesetWorkItems
    name: 'getShelvesetWorkItems(shelvesetId: string)'
    children: []
    langs:
      - typeScript
    summary: Get work items associated with a shelveset.
    syntax:
      content: 'function getShelvesetWorkItems(shelvesetId: string)'
      parameters:
        - id: shelvesetId
          type:
            - string
          description: Shelveset's unique ID
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.VersionControl.Contracts.AssociatedWorkItem[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.VersionControl.TfvcRestClient.CommonMethods2To4.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string serviceInstanceId
      return:
        type:
          - string
