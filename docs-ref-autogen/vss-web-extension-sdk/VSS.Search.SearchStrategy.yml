### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Search.SearchStrategy
    name: SearchStrategy
    fullName: SearchStrategy<T>
    children:
      - vss-web-extension-sdk.VSS.Search.SearchStrategy.clearStrategyStore
      - vss-web-extension-sdk.VSS.Search.SearchStrategy.dataExists
      - vss-web-extension-sdk.VSS.Search.SearchStrategy.getIndexedItemsCount
      - vss-web-extension-sdk.VSS.Search.SearchStrategy.getIndexTotalSize
      - vss-web-extension-sdk.VSS.Search.SearchStrategy.getTerms
      - vss-web-extension-sdk.VSS.Search.SearchStrategy.processItems
      - vss-web-extension-sdk.VSS.Search.SearchStrategy.search
      - vss-web-extension-sdk.VSS.Search.SearchStrategy.constructor
    langs:
      - typeScript
    type: class
    summary: ''
    source:
      path: vss.d.ts
      startLine: 30876
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Search
  - uid: vss-web-extension-sdk.VSS.Search.SearchStrategy.clearStrategyStore
    name: clearStrategyStore()
    children: []
    langs:
      - typeScript
    summary: Clears the items stored in the strategy.
    syntax:
      content: function clearStrategyStore()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Search.SearchStrategy.dataExists
    name: dataExists()
    children: []
    langs:
      - typeScript
    summary: Checks whether data exists in the search strategy
    syntax:
      content: function dataExists()
      parameters: []
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Search.SearchStrategy.getIndexedItemsCount
    name: getIndexedItemsCount()
    children: []
    langs:
      - typeScript
    summary: Return the total count of item indexed.
    syntax:
      content: function getIndexedItemsCount()
      parameters: []
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.Search.SearchStrategy.getIndexTotalSize
    name: getIndexTotalSize()
    children: []
    langs:
      - typeScript
    summary: Return the total size of the indexed store.
    syntax:
      content: function getIndexTotalSize()
      parameters: []
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.Search.SearchStrategy.getTerms
    name: 'getTerms(searchText: string[], delimiter?: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Tokenizes the searchText into separate words using a regex. Empty terms
      ("") will not be returned.
    syntax:
      content: 'static function getTerms(searchText: string[], delimiter?: string)'
      parameters:
        - id: searchText
          type:
            - 'string[]'
          description: The searchText to split up.
        - id: delimiter
          type:
            - string
          description: The string or regex delimiter to use to split up the search terms
          optional: true
    type: method
  - uid: vss-web-extension-sdk.VSS.Search.SearchStrategy.processItems
    name: 'processItems(searchableObjects: SearchableObject<T>[])'
    children: []
    langs:
      - typeScript
    summary: |-
      Stores items and terms for each item in order to later retrieve
          and search upon.
    syntax:
      content: 'function processItems(searchableObjects: SearchableObject<T>[])'
      parameters:
        - id: searchableObjects
          type:
            - '@vss-web-extension-sdk.VSS.Search.SearchableObject<T>[]'
          description: |
            SearchableObjects to add
    type: method
  - uid: vss-web-extension-sdk.VSS.Search.SearchStrategy.search
    name: 'search(query: string)'
    children: []
    langs:
      - typeScript
    summary: |-
      Searches the item store for the query given to it. Returns an
          array of documents representing the documents which match the query.
    syntax:
      content: 'function search(query: string)'
      parameters:
        - id: query
          type:
            - string
          description: The query to search for
    type: method
  - uid: vss-web-extension-sdk.VSS.Search.SearchStrategy.constructor
    name: 'SearchStrategy(options?: ISearchStrategyOptions<T>)'
    children: []
    langs:
      - typeScript
    summary: >-
      Abstract Class to inherit from in order to implement the methods needed to
      store items and search on them.
    syntax:
      content: 'new SearchStrategy(options?: ISearchStrategyOptions<T>)'
      parameters:
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.Search.ISearchStrategyOptions<T>'
          description: ''
          optional: true
    type: constructor
