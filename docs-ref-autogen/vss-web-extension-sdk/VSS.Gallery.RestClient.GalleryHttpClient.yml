### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient
    name: GalleryHttpClient
    fullName: GalleryHttpClient
    children:
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.accountsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.accountsbynameApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.acquisitionoptionsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.acquisitionrequestsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.assetbynameApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.assetsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.associateAzurePublisher
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.authenticatedassetApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.authTokenManager
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.azurepublisherApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.categoriesApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.categoriesApiVersion_1102bb42
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.categoriesApiVersion_31fba831
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.categoriesApiVersion_e0a5a71e
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.certificatesApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.createCategory
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.createExtension
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.createExtensionWithPublisher
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.createPublisher
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.createQuestion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.createResponse
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.createReview
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.deleteExtension
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.deleteExtensionById
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.deletePublisher
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.deleteQuestion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.deleteResponse
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.deleteReview
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.eventsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.eventsApiVersion_3d13c499
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.extensionqueryApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.extensionsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.extensionsApiVersion_a41192c8
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.extensionValidator
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.extensionValidatorApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.forceOptionsCallForAutoNegotiate
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.constructor
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.generateKey
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getAcquisitionOptions
      - vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getAsset
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getAssetAuthenticated
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getAssetByName
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getAssetWithToken
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getCategories
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getCategoryDetails
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getCategoryTree
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getCertificate
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getExtension
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getExtensionById
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getExtensionDailyStats
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getExtensionDailyStatsAnonymous
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getExtensionEvents
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getExtensionReports
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getGalleryUserSettings
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getPackage
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getPublisher
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getQuestions
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getReviews
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getReviewsSummary
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getRootCategories
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getSigningKey
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getVerificationLog
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.incrementExtensionDailyStat
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.notificationsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.packageApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.privateassetApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.publisherqueryApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.publishersApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.publishExtensionEvents
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.qnaApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.qnaApiVersion_6d1d9741
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.qnaApiVersion_784910cd
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.qnaApiVersion_c010d03d
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.queryAssociatedAzurePublisher
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.queryExtensions
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.queryPublishers
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.reportQuestion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.reportsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.requestAcquisition
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.reviewsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.reviewsApiVersion_5b3f819f
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.reviewsApiVersion_b7b44e21
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.securedCategoriesApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.sendNotifications
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.serviceInstanceId
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.setGalleryUserSettings
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.settingsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.shareExtension
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.shareExtensionById
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.signingkeyApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.statisticsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.statsApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.statsApiVersion_ae06047e
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.unshareExtension
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.unshareExtensionById
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updateExtension
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updateExtensionById
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updateExtensionProperties
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updateExtensionStatistics
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updatePublisher
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updateQuestion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updateResponse
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updateReview
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.verificationlogApiVersion
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient._beginGetLocation
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient._beginRequest
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient._beginRequestWithAjaxResult
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient._issueAjaxRequest
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient._rootRequestPath
      - >-
        vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS.Gallery.RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.accountsApiVersion
    name: accountsApiVersion
    fullName: accountsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.accountsbynameApiVersion
    name: accountsbynameApiVersion
    fullName: accountsbynameApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.acquisitionoptionsApiVersion
    name: acquisitionoptionsApiVersion
    fullName: acquisitionoptionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.acquisitionrequestsApiVersion
    name: acquisitionrequestsApiVersion
    fullName: acquisitionrequestsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.assetbynameApiVersion
    name: assetbynameApiVersion
    fullName: assetbynameApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.assetsApiVersion
    name: assetsApiVersion
    fullName: assetsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.associateAzurePublisher
    name: 'associateAzurePublisher(publisherName: string, azurePublisherId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: azurePublisherId
          type:
            - string
          description: ''
      content: >-
        function associateAzurePublisher(publisherName: string,
        azurePublisherId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.authenticatedassetApiVersion
    name: authenticatedassetApiVersion
    fullName: authenticatedassetApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.authTokenManager
    name: authTokenManager
    fullName: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.azurepublisherApiVersion
    name: azurepublisherApiVersion
    fullName: azurepublisherApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.categoriesApiVersion
    name: categoriesApiVersion
    fullName: categoriesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.categoriesApiVersion_1102bb42
    name: categoriesApiVersion_1102bb42
    fullName: categoriesApiVersion_1102bb42
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.categoriesApiVersion_31fba831
    name: categoriesApiVersion_31fba831
    fullName: categoriesApiVersion_31fba831
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.categoriesApiVersion_e0a5a71e
    name: categoriesApiVersion_e0a5a71e
    fullName: categoriesApiVersion_e0a5a71e
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.certificatesApiVersion
    name: certificatesApiVersion
    fullName: certificatesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.createCategory
    name: 'createCategory(category: ExtensionCategory)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.ExtensionCategory
          type:
            - ExtensionCategory
          description: ''
      content: 'function createCategory(category: ExtensionCategory)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.createExtension
    name: 'createExtension(content: any)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: content
          type:
            - any
          description: Content to upload
      content: 'function createExtension(content: any)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.createExtensionWithPublisher
    name: 'createExtensionWithPublisher(content: any, publisherName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: content
          type:
            - any
          description: Content to upload
        - id: publisherName
          type:
            - string
          description: ''
      content: >-
        function createExtensionWithPublisher(content: any, publisherName:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.createPublisher
    name: 'createPublisher(publisher: Publisher)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.Publisher
          type:
            - Publisher
          description: ''
      content: 'function createPublisher(publisher: Publisher)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.createQuestion
    name: >-
      createQuestion(question: Question, publisherName: string, extensionName:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Creates a new question for an extension.'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.Question
          type:
            - Question
          description: Question to be created for the extension.
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
      content: >-
        function createQuestion(question: Question, publisherName: string,
        extensionName: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.createResponse
    name: >-
      createResponse(response: Response, publisherName: string, extensionName:
      string, questionId: number)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Creates a new response for a given question for an
      extension.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.Response
          type:
            - Response
          description: Response to be created for the extension.
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: >-
            Identifier of the question for which response is to be created for
            the extension.
      content: >-
        function createResponse(response: Response, publisherName: string,
        extensionName: string, questionId: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.createReview
    name: 'createReview(review: Review, pubName: string, extName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Creates a new review for an extension'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.Review
          type:
            - Review
          description: Review to be created for the extension
        - id: pubName
          type:
            - string
          description: Name of the publisher who published the extension
        - id: extName
          type:
            - string
          description: Name of the extension
      content: 'function createReview(review: Review, pubName: string, extName: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.deleteExtension
    name: >-
      deleteExtension(publisherName: string, extensionName: string, version?:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
          optional: true
      content: >-
        function deleteExtension(publisherName: string, extensionName: string,
        version?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.deleteExtensionById
    name: 'deleteExtensionById(extensionId: string, version?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: extensionId
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
          optional: true
      content: 'function deleteExtensionById(extensionId: string, version?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.deletePublisher
    name: 'deletePublisher(publisherName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
      content: 'function deletePublisher(publisherName: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.deleteQuestion
    name: >-
      deleteQuestion(publisherName: string, extensionName: string, questionId:
      number)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Deletes an existing question and all its associated
      responses for an extension. (soft delete)
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: Identifier of the question to be deleted for the extension.
      content: >-
        function deleteQuestion(publisherName: string, extensionName: string,
        questionId: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.deleteResponse
    name: >-
      deleteResponse(publisherName: string, extensionName: string, questionId:
      number, responseId: number)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Deletes a response for an extension. (soft delete)'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: Identifies the question whose response is to be deleted.
        - id: responseId
          type:
            - number
          description: Identifies the response to be deleted.
      content: >-
        function deleteResponse(publisherName: string, extensionName: string,
        questionId: number, responseId: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.deleteReview
    name: 'deleteReview(pubName: string, extName: string, reviewId: number)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Deletes a review'
    syntax:
      parameters:
        - id: pubName
          type:
            - string
          description: Name of the pubilsher who published the extension
        - id: extName
          type:
            - string
          description: Name of the extension
        - id: reviewId
          type:
            - number
          description: Id of the review which needs to be updated
      content: >-
        function deleteReview(pubName: string, extName: string, reviewId:
        number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.eventsApiVersion
    name: eventsApiVersion
    fullName: eventsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.eventsApiVersion_3d13c499
    name: eventsApiVersion_3d13c499
    fullName: eventsApiVersion_3d13c499
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.extensionqueryApiVersion
    name: extensionqueryApiVersion
    fullName: extensionqueryApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.extensionsApiVersion
    name: extensionsApiVersion
    fullName: extensionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.extensionsApiVersion_a41192c8
    name: extensionsApiVersion_a41192c8
    fullName: extensionsApiVersion_a41192c8
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.extensionValidator
    name: 'extensionValidator(azureRestApiRequestModel: AzureRestApiRequestModel)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.AzureRestApiRequestModel
          type:
            - AzureRestApiRequestModel
          description: ''
      content: >-
        function extensionValidator(azureRestApiRequestModel:
        AzureRestApiRequestModel)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.extensionValidatorApiVersion
    name: extensionValidatorApiVersion
    fullName: extensionValidatorApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    fullName: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.constructor
    name: >-
      GalleryHttpClient(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions
          type:
            - IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new GalleryHttpClient(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      return:
        type:
          - vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.generateKey
    name: 'generateKey(keyType: string, expireCurrentSeconds?: number)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: keyType
          type:
            - string
          description: ''
        - id: expireCurrentSeconds
          type:
            - number
          description: ''
          optional: true
      content: 'function generateKey(keyType: string, expireCurrentSeconds?: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getAcquisitionOptions
    name: >-
      getAcquisitionOptions(itemId: string, installationTarget: string,
      testCommerce?: boolean, isFreeOrTrialInstall?: boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: itemId
          type:
            - string
          description: ''
        - id: installationTarget
          type:
            - string
          description: ''
        - id: testCommerce
          type:
            - boolean
          description: ''
          optional: true
        - id: isFreeOrTrialInstall
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getAcquisitionOptions(itemId: string, installationTarget:
        string, testCommerce?: boolean, isFreeOrTrialInstall?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getAsset
    name: >-
      getAsset(extensionId: string, version: string, assetType: string,
      accountToken?: string, acceptDefault?: boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: extensionId
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
        - id: assetType
          type:
            - string
          description: ''
        - id: accountToken
          type:
            - string
          description: ''
          optional: true
        - id: acceptDefault
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getAsset(extensionId: string, version: string, assetType:
        string, accountToken?: string, acceptDefault?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getAssetAuthenticated
    name: >-
      getAssetAuthenticated(publisherName: string, extensionName: string,
      version: string, assetType: string, accountToken?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
        - id: assetType
          type:
            - string
          description: ''
        - id: accountToken
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getAssetAuthenticated(publisherName: string, extensionName:
        string, version: string, assetType: string, accountToken?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getAssetByName
    name: >-
      getAssetByName(publisherName: string, extensionName: string, version:
      string, assetType: string, accountToken?: string, acceptDefault?: boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
        - id: assetType
          type:
            - string
          description: ''
        - id: accountToken
          type:
            - string
          description: ''
          optional: true
        - id: acceptDefault
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getAssetByName(publisherName: string, extensionName: string,
        version: string, assetType: string, accountToken?: string,
        acceptDefault?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getAssetWithToken
    name: >-
      getAssetWithToken(publisherName: string, extensionName: string, version:
      string, assetType: string, assetToken?: string, accountToken?: string,
      acceptDefault?: boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
        - id: assetType
          type:
            - string
          description: ''
        - id: assetToken
          type:
            - string
          description: ''
          optional: true
        - id: accountToken
          type:
            - string
          description: ''
          optional: true
        - id: acceptDefault
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getAssetWithToken(publisherName: string, extensionName: string,
        version: string, assetType: string, assetToken?: string, accountToken?:
        string, acceptDefault?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getCategories
    name: 'getCategories(languages?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: languages
          type:
            - string
          description: ''
          optional: true
      content: 'function getCategories(languages?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getCategoryDetails
    name: >-
      getCategoryDetails(categoryName: string, languages?: string, product?:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: categoryName
          type:
            - string
          description: ''
        - id: languages
          type:
            - string
          description: ''
          optional: true
        - id: product
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getCategoryDetails(categoryName: string, languages?: string,
        product?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getCategoryTree
    name: >-
      getCategoryTree(product: string, categoryId: string, lcid?: number,
      source?: string, productVersion?: string, skus?: string, subSkus?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: product
          type:
            - string
          description: ''
        - id: categoryId
          type:
            - string
          description: ''
        - id: lcid
          type:
            - number
          description: ''
          optional: true
        - id: source
          type:
            - string
          description: ''
          optional: true
        - id: productVersion
          type:
            - string
          description: ''
          optional: true
        - id: skus
          type:
            - string
          description: ''
          optional: true
        - id: subSkus
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getCategoryTree(product: string, categoryId: string, lcid?:
        number, source?: string, productVersion?: string, skus?: string,
        subSkus?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getCertificate
    name: >-
      getCertificate(publisherName: string, extensionName: string, version?:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getCertificate(publisherName: string, extensionName: string,
        version?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getExtension
    name: >-
      getExtension(publisherName: string, extensionName: string, version?:
      string, flags?: function, accountToken?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
          optional: true
        - id: flags
          type:
            - function
          description: ''
          optional: true
        - id: accountToken
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getExtension(publisherName: string, extensionName: string,
        version?: string, flags?: function, accountToken?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getExtensionById
    name: 'getExtensionById(extensionId: string, version?: string, flags?: function)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: extensionId
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
          optional: true
        - id: flags
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getExtensionById(extensionId: string, version?: string, flags?:
        function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getExtensionDailyStats
    name: >-
      getExtensionDailyStats(publisherName: string, extensionName: string,
      days?: number, aggregate?: Contracts.ExtensionStatsAggregateType,
      afterDate?: Date)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: days
          type:
            - number
          description: ''
          optional: true
        - id: aggregate
          type:
            - Contracts.ExtensionStatsAggregateType
          description: ''
          optional: true
        - id: afterDate
          type:
            - Date
          description: ''
          optional: true
      content: >-
        function getExtensionDailyStats(publisherName: string, extensionName:
        string, days?: number, aggregate?:
        Contracts.ExtensionStatsAggregateType, afterDate?: Date)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getExtensionDailyStatsAnonymous
    name: >-
      getExtensionDailyStatsAnonymous(publisherName: string, extensionName:
      string, version: string)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] This route/location id only supports HTTP POST anonymously,
      so that the page view daily stat can be incremented from Marketplace
      client. Trying to call GET on this route should result in an exception.
      Without this explicit implementation, calling GET on this public route
      invokes the above GET implementation GetExtensionDailyStats.
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: version
          type:
            - string
          description: Version of the extension
      content: >-
        function getExtensionDailyStatsAnonymous(publisherName: string,
        extensionName: string, version: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getExtensionEvents
    name: >-
      getExtensionEvents(publisherName: string, extensionName: string, count?:
      number, afterDate?: Date, include?: string, includeProperty?: string)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Get install/uninstall events of an extension. If both count
      and afterDate parameters are specified, count takes precedence.
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: count
          type:
            - number
          description: 'Count of events to fetch, applies to each event type.'
          optional: true
        - id: afterDate
          type:
            - Date
          description: Fetch events that occurred on or after this date
          optional: true
        - id: include
          type:
            - string
          description: >-
            Filter options. Supported values: install, uninstall, review,
            acquisition, sales. Default is to fetch all types of events
          optional: true
        - id: includeProperty
          type:
            - string
          description: >-
            Event properties to include. Currently only 'lastContactDetails' is
            supported for uninstall events
          optional: true
      content: >-
        function getExtensionEvents(publisherName: string, extensionName:
        string, count?: number, afterDate?: Date, include?: string,
        includeProperty?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getExtensionReports
    name: >-
      getExtensionReports(publisherName: string, extensionName: string, days?:
      number, count?: number, afterDate?: Date)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Returns extension reports'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: days
          type:
            - number
          description: >-
            Last n days report. If afterDate and days are specified, days will
            take priority
          optional: true
        - id: count
          type:
            - number
          description: Number of events to be returned
          optional: true
        - id: afterDate
          type:
            - Date
          description: Use if you want to fetch events newer than the specified date
          optional: true
      content: >-
        function getExtensionReports(publisherName: string, extensionName:
        string, days?: number, count?: number, afterDate?: Date)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getGalleryUserSettings
    name: 'getGalleryUserSettings(userScope: string, key?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get all setting entries for the given user/all-users scope'
    syntax:
      parameters:
        - id: userScope
          type:
            - string
          description: >-
            User-Scope at which to get the value. Should be "me" for the current
            user or "host" for all users.
        - id: key
          type:
            - string
          description: Optional key under which to filter all the entries
          optional: true
      content: 'function getGalleryUserSettings(userScope: string, key?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getPackage
    name: >-
      getPackage(publisherName: string, extensionName: string, version: string,
      accountToken?: string, acceptDefault?: boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
        - id: accountToken
          type:
            - string
          description: ''
          optional: true
        - id: acceptDefault
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getPackage(publisherName: string, extensionName: string,
        version: string, accountToken?: string, acceptDefault?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getPublisher
    name: 'getPublisher(publisherName: string, flags?: number)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: flags
          type:
            - number
          description: ''
          optional: true
      content: 'function getPublisher(publisherName: string, flags?: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getQuestions
    name: >-
      getQuestions(publisherName: string, extensionName: string, count?: number,
      page?: number, afterDate?: Date)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns a list of questions with their responses associated
      with an extension.
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: count
          type:
            - number
          description: Number of questions to retrieve (defaults to 10).
          optional: true
        - id: page
          type:
            - number
          description: Page number from which set of questions are to be retrieved.
          optional: true
        - id: afterDate
          type:
            - Date
          description: >-
            If provided, results questions are returned which were posted after
            this date
          optional: true
      content: >-
        function getQuestions(publisherName: string, extensionName: string,
        count?: number, page?: number, afterDate?: Date)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getReviews
    name: >-
      getReviews(publisherName: string, extensionName: string, count?: number,
      filterOptions?: function, beforeDate?: Date, afterDate?: Date)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Returns a list of reviews associated with an extension'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: count
          type:
            - number
          description: Number of reviews to retrieve (defaults to 5)
          optional: true
        - id: filterOptions
          type:
            - function
          description: 'FilterOptions to filter out empty reviews etcetera, defaults to none'
          optional: true
        - id: beforeDate
          type:
            - Date
          description: >-
            Use if you want to fetch reviews older than the specified date,
            defaults to null
          optional: true
        - id: afterDate
          type:
            - Date
          description: >-
            Use if you want to fetch reviews newer than the specified date,
            defaults to null
          optional: true
      content: >-
        function getReviews(publisherName: string, extensionName: string,
        count?: number, filterOptions?: function, beforeDate?: Date, afterDate?:
        Date)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getReviewsSummary
    name: >-
      getReviewsSummary(pubName: string, extName: string, beforeDate?: Date,
      afterDate?: Date)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Returns a summary of the reviews'
    syntax:
      parameters:
        - id: pubName
          type:
            - string
          description: Name of the publisher who published the extension
        - id: extName
          type:
            - string
          description: Name of the extension
        - id: beforeDate
          type:
            - Date
          description: >-
            Use if you want to fetch summary of reviews older than the specified
            date, defaults to null
          optional: true
        - id: afterDate
          type:
            - Date
          description: >-
            Use if you want to fetch summary of reviews newer than the specified
            date, defaults to null
          optional: true
      content: >-
        function getReviewsSummary(pubName: string, extName: string,
        beforeDate?: Date, afterDate?: Date)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getRootCategories
    name: >-
      getRootCategories(product: string, lcid?: number, source?: string,
      productVersion?: string, skus?: string, subSkus?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: product
          type:
            - string
          description: ''
        - id: lcid
          type:
            - number
          description: ''
          optional: true
        - id: source
          type:
            - string
          description: ''
          optional: true
        - id: productVersion
          type:
            - string
          description: ''
          optional: true
        - id: skus
          type:
            - string
          description: ''
          optional: true
        - id: subSkus
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getRootCategories(product: string, lcid?: number, source?:
        string, productVersion?: string, skus?: string, subSkus?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getSigningKey
    name: 'getSigningKey(keyType: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: keyType
          type:
            - string
          description: ''
      content: 'function getSigningKey(keyType: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.getVerificationLog
    name: >-
      getVerificationLog(publisherName: string, extensionName: string, version:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
      content: >-
        function getVerificationLog(publisherName: string, extensionName:
        string, version: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.incrementExtensionDailyStat
    name: >-
      incrementExtensionDailyStat(publisherName: string, extensionName: string,
      version: string, statType: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Increments a daily statistic associated with the extension'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: Name of the publisher
        - id: extensionName
          type:
            - string
          description: Name of the extension
        - id: version
          type:
            - string
          description: Version of the extension
        - id: statType
          type:
            - string
          description: Type of stat to increment
      content: >-
        function incrementExtensionDailyStat(publisherName: string,
        extensionName: string, version: string, statType: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.notificationsApiVersion
    name: notificationsApiVersion
    fullName: notificationsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.packageApiVersion
    name: packageApiVersion
    fullName: packageApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.privateassetApiVersion
    name: privateassetApiVersion
    fullName: privateassetApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.publisherqueryApiVersion
    name: publisherqueryApiVersion
    fullName: publisherqueryApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.publishersApiVersion
    name: publishersApiVersion
    fullName: publishersApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.publishExtensionEvents
    name: 'publishExtensionEvents(extensionEvents: function)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] API endpoint to publish extension install/uninstall events.
      This is meant to be invoked by EMS only for sending us data related to
      install/uninstall of an extension.
    syntax:
      parameters:
        - id: extensionEvents
          type:
            - function
          description: ''
      content: 'function publishExtensionEvents(extensionEvents: function)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.qnaApiVersion
    name: qnaApiVersion
    fullName: qnaApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.qnaApiVersion_6d1d9741
    name: qnaApiVersion_6d1d9741
    fullName: qnaApiVersion_6d1d9741
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.qnaApiVersion_784910cd
    name: qnaApiVersion_784910cd
    fullName: qnaApiVersion_784910cd
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.qnaApiVersion_c010d03d
    name: qnaApiVersion_c010d03d
    fullName: qnaApiVersion_c010d03d
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.queryAssociatedAzurePublisher
    name: 'queryAssociatedAzurePublisher(publisherName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
      content: 'function queryAssociatedAzurePublisher(publisherName: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.queryExtensions
    name: 'queryExtensions(extensionQuery: ExtensionQuery, accountToken?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.ExtensionQuery
          type:
            - ExtensionQuery
          description: ''
        - id: accountToken
          type:
            - string
          description: ''
          optional: true
      content: >-
        function queryExtensions(extensionQuery: ExtensionQuery, accountToken?:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.queryPublishers
    name: 'queryPublishers(publisherQuery: PublisherQuery)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.PublisherQuery
          type:
            - PublisherQuery
          description: ''
      content: 'function queryPublishers(publisherQuery: PublisherQuery)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.reportQuestion
    name: >-
      reportQuestion(concern: Concern, pubName: string, extName: string,
      questionId: number)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Flags a concern with an existing question for an extension.'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.Concern
          type:
            - Concern
          description: User reported concern with a question for the extension.
        - id: pubName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: Identifier of the question to be updated for the extension.
      content: >-
        function reportQuestion(concern: Concern, pubName: string, extName:
        string, questionId: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.reportsApiVersion
    name: reportsApiVersion
    fullName: reportsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.requestAcquisition
    name: 'requestAcquisition(acquisitionRequest: ExtensionAcquisitionRequest)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: >-
            vss-web-extension-sdk.VSS.Gallery.Contracts.ExtensionAcquisitionRequest
          type:
            - ExtensionAcquisitionRequest
          description: ''
      content: >-
        function requestAcquisition(acquisitionRequest:
        ExtensionAcquisitionRequest)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.reviewsApiVersion
    name: reviewsApiVersion
    fullName: reviewsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.reviewsApiVersion_5b3f819f
    name: reviewsApiVersion_5b3f819f
    fullName: reviewsApiVersion_5b3f819f
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.reviewsApiVersion_b7b44e21
    name: reviewsApiVersion_b7b44e21
    fullName: reviewsApiVersion_b7b44e21
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.securedCategoriesApiVersion
    name: securedCategoriesApiVersion
    fullName: securedCategoriesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.sendNotifications
    name: 'sendNotifications(notificationData: NotificationsData)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Send Notification'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.NotificationsData
          type:
            - NotificationsData
          description: Denoting the data needed to send notification
      content: 'function sendNotifications(notificationData: NotificationsData)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.setGalleryUserSettings
    name: 'setGalleryUserSettings(entries: function, userScope: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Set all setting entries for the given user/all-users scope'
    syntax:
      parameters:
        - id: entries
          type:
            - function
          description: A key-value pair of all settings that need to be set
        - id: userScope
          type:
            - string
          description: >-
            User-Scope at which to get the value. Should be "me" for the current
            user or "host" for all users.
      content: 'function setGalleryUserSettings(entries: function, userScope: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.settingsApiVersion
    name: settingsApiVersion
    fullName: settingsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.shareExtension
    name: >-
      shareExtension(publisherName: string, extensionName: string, accountName:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
      content: >-
        function shareExtension(publisherName: string, extensionName: string,
        accountName: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.shareExtensionById
    name: 'shareExtensionById(extensionId: string, accountName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: extensionId
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
      content: 'function shareExtensionById(extensionId: string, accountName: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.signingkeyApiVersion
    name: signingkeyApiVersion
    fullName: signingkeyApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.statisticsApiVersion
    name: statisticsApiVersion
    fullName: statisticsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.statsApiVersion
    name: statsApiVersion
    fullName: statsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.statsApiVersion_ae06047e
    name: statsApiVersion_ae06047e
    fullName: statsApiVersion_ae06047e
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.unshareExtension
    name: >-
      unshareExtension(publisherName: string, extensionName: string,
      accountName: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
      content: >-
        function unshareExtension(publisherName: string, extensionName: string,
        accountName: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.unshareExtensionById
    name: 'unshareExtensionById(extensionId: string, accountName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: extensionId
          type:
            - string
          description: ''
        - id: accountName
          type:
            - string
          description: ''
      content: 'function unshareExtensionById(extensionId: string, accountName: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updateExtension
    name: >-
      updateExtension(content: any, publisherName: string, extensionName:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: content
          type:
            - any
          description: Content to upload
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
      content: >-
        function updateExtension(content: any, publisherName: string,
        extensionName: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updateExtensionById
    name: 'updateExtensionById(extensionId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: extensionId
          type:
            - string
          description: ''
      content: 'function updateExtensionById(extensionId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updateExtensionProperties
    name: >-
      updateExtensionProperties(publisherName: string, extensionName: string,
      flags: function)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: flags
          type:
            - function
          description: ''
      content: >-
        function updateExtensionProperties(publisherName: string, extensionName:
        string, flags: function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updateExtensionStatistics
    name: >-
      updateExtensionStatistics(extensionStatisticsUpdate:
      ExtensionStatisticUpdate, publisherName: string, extensionName: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.ExtensionStatisticUpdate
          type:
            - ExtensionStatisticUpdate
          description: ''
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
      content: >-
        function updateExtensionStatistics(extensionStatisticsUpdate:
        ExtensionStatisticUpdate, publisherName: string, extensionName: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updatePublisher
    name: 'updatePublisher(publisher: Publisher, publisherName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.Publisher
          type:
            - Publisher
          description: ''
        - id: publisherName
          type:
            - string
          description: ''
      content: 'function updatePublisher(publisher: Publisher, publisherName: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updateQuestion
    name: >-
      updateQuestion(question: Question, publisherName: string, extensionName:
      string, questionId: number)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Updates an existing question for an extension.'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.Question
          type:
            - Question
          description: Updated question to be set for the extension.
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: Identifier of the question to be updated for the extension.
      content: >-
        function updateQuestion(question: Question, publisherName: string,
        extensionName: string, questionId: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updateResponse
    name: >-
      updateResponse(response: Response, publisherName: string, extensionName:
      string, questionId: number, responseId: number)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Updates an existing response for a given question for an
      extension.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.Response
          type:
            - Response
          description: Updated response to be set for the extension.
        - id: publisherName
          type:
            - string
          description: Name of the publisher who published the extension.
        - id: extensionName
          type:
            - string
          description: Name of the extension.
        - id: questionId
          type:
            - number
          description: >-
            Identifier of the question for which response is to be updated for
            the extension.
        - id: responseId
          type:
            - number
          description: Identifier of the response which has to be updated.
      content: >-
        function updateResponse(response: Response, publisherName: string,
        extensionName: string, questionId: number, responseId: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.updateReview
    name: >-
      updateReview(reviewPatch: ReviewPatch, pubName: string, extName: string,
      reviewId: number)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Updates or Flags a review'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VSS.Gallery.Contracts.ReviewPatch
          type:
            - ReviewPatch
          description: >-
            ReviewPatch object which contains the changes to be applied to the
            review
        - id: pubName
          type:
            - string
          description: Name of the pubilsher who published the extension
        - id: extName
          type:
            - string
          description: Name of the extension
        - id: reviewId
          type:
            - number
          description: Id of the review which needs to be updated
      content: >-
        function updateReview(reviewPatch: ReviewPatch, pubName: string,
        extName: string, reviewId: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient.verificationlogApiVersion
    name: verificationlogApiVersion
    fullName: verificationlogApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: >-
            vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: >-
            vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vss-web-extension-sdk.IVssAjaxOptions
          type:
            - IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient._rootRequestPath
    name: _rootRequestPath
    fullName: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.Gallery.RestClient.GalleryHttpClient._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.IPromise
          type:
            - IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
