### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4
    name: CommonMethods3To4
    fullName: CommonMethods3To4
    children:
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.acquisitionOptionsApiVersion
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.acquisitionRequestsApiVersion
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.authorizationsApiVersion
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.authTokenManager
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.constructor
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.createDocumentByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.dataApiVersion
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.deleteDocumentByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.deleteRequest
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.extensionDataCollectionQueryApiVersion
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.extensionStatesApiVersion
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.forceOptionsCallForAutoNegotiate
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getAcquisitionOptions
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getDocumentByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getDocumentsByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getInstalledExtensionByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getInstalledExtensions
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getPolicies
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getRequests
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getStates
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getToken
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.installedExtensionQueryApiVersion
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.installedExtensionsApiVersion
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.installedExtensionsByNameApiVersion
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.installExtensionByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.policiesApiVersion
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.queryCollectionsByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.queryExtensions
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.registerAuthorization
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.requestAcquisition
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.requestedExtensionsApiVersion
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.requestedExtensionsApiVersion_216b978f
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.requestedExtensionsApiVersion_aa93e1f3
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.requestedExtensionsApiVersion_ba93e1f3
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.requestExtension
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.resolveAllRequests
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.resolveRequest
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.serviceInstanceId
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.setDocumentByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.tokenApiVersion
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.uninstallExtensionByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.updateDocumentByName
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.updateInstalledExtension
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4._beginGetLocation
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4._beginRequest
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4._beginRequestWithAjaxResult
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4._issueAjaxRequest
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4._rootRequestPath
      - >-
        vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS/ExtensionManagement/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.acquisitionOptionsApiVersion
    name: acquisitionOptionsApiVersion
    fullName: acquisitionOptionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.acquisitionRequestsApiVersion
    name: acquisitionRequestsApiVersion
    fullName: acquisitionRequestsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.authorizationsApiVersion
    name: authorizationsApiVersion
    fullName: authorizationsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.authTokenManager
    name: authTokenManager
    fullName: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.constructor
    name: >-
      CommonMethods3To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new CommonMethods3To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.createDocumentByName
    name: >-
      createDocumentByName(doc: any, publisherName: string, extensionName:
      string, scopeType: string, scopeValue: string, collectionName: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: doc
          type:
            - any
          description: ''
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: scopeType
          type:
            - string
          description: ''
        - id: scopeValue
          type:
            - string
          description: ''
        - id: collectionName
          type:
            - string
          description: ''
      content: >-
        function createDocumentByName(doc: any, publisherName: string,
        extensionName: string, scopeType: string, scopeValue: string,
        collectionName: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.dataApiVersion
    name: dataApiVersion
    fullName: dataApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.deleteDocumentByName
    name: >-
      deleteDocumentByName(publisherName: string, extensionName: string,
      scopeType: string, scopeValue: string, collectionName: string, documentId:
      string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: scopeType
          type:
            - string
          description: ''
        - id: scopeValue
          type:
            - string
          description: ''
        - id: collectionName
          type:
            - string
          description: ''
        - id: documentId
          type:
            - string
          description: ''
      content: >-
        function deleteDocumentByName(publisherName: string, extensionName:
        string, scopeType: string, scopeValue: string, collectionName: string,
        documentId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.deleteRequest
    name: 'deleteRequest(publisherName: string, extensionName: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
      content: 'function deleteRequest(publisherName: string, extensionName: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.extensionDataCollectionQueryApiVersion
    name: extensionDataCollectionQueryApiVersion
    fullName: extensionDataCollectionQueryApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.extensionStatesApiVersion
    name: extensionStatesApiVersion
    fullName: extensionStatesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    fullName: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getAcquisitionOptions
    name: >-
      getAcquisitionOptions(itemId: string, testCommerce?: boolean,
      isFreeOrTrialInstall?: boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: itemId
          type:
            - string
          description: ''
        - id: testCommerce
          type:
            - boolean
          description: ''
          optional: true
        - id: isFreeOrTrialInstall
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getAcquisitionOptions(itemId: string, testCommerce?: boolean,
        isFreeOrTrialInstall?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getDocumentByName
    name: >-
      getDocumentByName(publisherName: string, extensionName: string, scopeType:
      string, scopeValue: string, collectionName: string, documentId: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: scopeType
          type:
            - string
          description: ''
        - id: scopeValue
          type:
            - string
          description: ''
        - id: collectionName
          type:
            - string
          description: ''
        - id: documentId
          type:
            - string
          description: ''
      content: >-
        function getDocumentByName(publisherName: string, extensionName: string,
        scopeType: string, scopeValue: string, collectionName: string,
        documentId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getDocumentsByName
    name: >-
      getDocumentsByName(publisherName: string, extensionName: string,
      scopeType: string, scopeValue: string, collectionName: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: scopeType
          type:
            - string
          description: ''
        - id: scopeValue
          type:
            - string
          description: ''
        - id: collectionName
          type:
            - string
          description: ''
      content: >-
        function getDocumentsByName(publisherName: string, extensionName:
        string, scopeType: string, scopeValue: string, collectionName: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getInstalledExtensionByName
    name: >-
      getInstalledExtensionByName(publisherName: string, extensionName: string,
      assetTypes?: function)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: assetTypes
          type:
            - function
          description: ''
          optional: true
      content: >-
        function getInstalledExtensionByName(publisherName: string,
        extensionName: string, assetTypes?: function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getInstalledExtensions
    name: >-
      getInstalledExtensions(includeDisabledExtensions?: boolean,
      includeErrors?: boolean, assetTypes?: function,
      includeInstallationIssues?: boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: includeDisabledExtensions
          type:
            - boolean
          description: ''
          optional: true
        - id: includeErrors
          type:
            - boolean
          description: ''
          optional: true
        - id: assetTypes
          type:
            - function
          description: ''
          optional: true
        - id: includeInstallationIssues
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getInstalledExtensions(includeDisabledExtensions?: boolean,
        includeErrors?: boolean, assetTypes?: function,
        includeInstallationIssues?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getPolicies
    name: 'getPolicies(userId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: userId
          type:
            - string
          description: ''
      content: 'function getPolicies(userId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getRequests
    name: getRequests()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getRequests()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getStates
    name: >-
      getStates(includeDisabled?: boolean, includeErrors?: boolean,
      includeInstallationIssues?: boolean)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: includeDisabled
          type:
            - boolean
          description: ''
          optional: true
        - id: includeErrors
          type:
            - boolean
          description: ''
          optional: true
        - id: includeInstallationIssues
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getStates(includeDisabled?: boolean, includeErrors?: boolean,
        includeInstallationIssues?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.getToken
    name: getToken()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getToken()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.installedExtensionQueryApiVersion
    name: installedExtensionQueryApiVersion
    fullName: installedExtensionQueryApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.installedExtensionsApiVersion
    name: installedExtensionsApiVersion
    fullName: installedExtensionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.installedExtensionsByNameApiVersion
    name: installedExtensionsByNameApiVersion
    fullName: installedExtensionsByNameApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.installExtensionByName
    name: >-
      installExtensionByName(publisherName: string, extensionName: string,
      version?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: version
          type:
            - string
          description: ''
          optional: true
      content: >-
        function installExtensionByName(publisherName: string, extensionName:
        string, version?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.policiesApiVersion
    name: policiesApiVersion
    fullName: policiesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.queryCollectionsByName
    name: >-
      queryCollectionsByName(collectionQuery: ExtensionDataCollectionQuery,
      publisherName: string, extensionName: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: collectionQuery
          type:
            - >-
              vss-web-extension-sdk.VSS.Contributions.Contracts.ExtensionDataCollectionQuery
          description: ''
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
      content: >-
        function queryCollectionsByName(collectionQuery:
        ExtensionDataCollectionQuery, publisherName: string, extensionName:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.queryExtensions
    name: 'queryExtensions(query: InstalledExtensionQuery)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: query
          type:
            - >-
              vss-web-extension-sdk.VSS.Contributions.Contracts.InstalledExtensionQuery
          description: ''
      content: 'function queryExtensions(query: InstalledExtensionQuery)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.registerAuthorization
    name: >-
      registerAuthorization(publisherName: string, extensionName: string,
      registrationId: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: registrationId
          type:
            - string
          description: ''
      content: >-
        function registerAuthorization(publisherName: string, extensionName:
        string, registrationId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.requestAcquisition
    name: 'requestAcquisition(acquisitionRequest: ExtensionAcquisitionRequest)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: acquisitionRequest
          type:
            - >-
              vss-web-extension-sdk.VSS.Contributions.Contracts.ExtensionAcquisitionRequest
          description: ''
      content: >-
        function requestAcquisition(acquisitionRequest:
        ExtensionAcquisitionRequest)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.requestedExtensionsApiVersion
    name: requestedExtensionsApiVersion
    fullName: requestedExtensionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.requestedExtensionsApiVersion_216b978f
    name: requestedExtensionsApiVersion_216b978f
    fullName: requestedExtensionsApiVersion_216b978f
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.requestedExtensionsApiVersion_aa93e1f3
    name: requestedExtensionsApiVersion_aa93e1f3
    fullName: requestedExtensionsApiVersion_aa93e1f3
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.requestedExtensionsApiVersion_ba93e1f3
    name: requestedExtensionsApiVersion_ba93e1f3
    fullName: requestedExtensionsApiVersion_ba93e1f3
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.requestExtension
    name: >-
      requestExtension(publisherName: string, extensionName: string,
      requestMessage: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: requestMessage
          type:
            - string
          description: ''
      content: >-
        function requestExtension(publisherName: string, extensionName: string,
        requestMessage: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.resolveAllRequests
    name: >-
      resolveAllRequests(rejectMessage: string, publisherName: string,
      extensionName: string, state: function)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: rejectMessage
          type:
            - string
          description: ''
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: state
          type:
            - function
          description: ''
      content: >-
        function resolveAllRequests(rejectMessage: string, publisherName:
        string, extensionName: string, state: function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.resolveRequest
    name: >-
      resolveRequest(rejectMessage: string, publisherName: string,
      extensionName: string, requesterId: string, state: function)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: rejectMessage
          type:
            - string
          description: ''
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: requesterId
          type:
            - string
          description: ''
        - id: state
          type:
            - function
          description: ''
      content: >-
        function resolveRequest(rejectMessage: string, publisherName: string,
        extensionName: string, requesterId: string, state: function)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.setDocumentByName
    name: >-
      setDocumentByName(doc: any, publisherName: string, extensionName: string,
      scopeType: string, scopeValue: string, collectionName: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: doc
          type:
            - any
          description: ''
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: scopeType
          type:
            - string
          description: ''
        - id: scopeValue
          type:
            - string
          description: ''
        - id: collectionName
          type:
            - string
          description: ''
      content: >-
        function setDocumentByName(doc: any, publisherName: string,
        extensionName: string, scopeType: string, scopeValue: string,
        collectionName: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.tokenApiVersion
    name: tokenApiVersion
    fullName: tokenApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.uninstallExtensionByName
    name: >-
      uninstallExtensionByName(publisherName: string, extensionName: string,
      reason?: string, reasonCode?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: reason
          type:
            - string
          description: ''
          optional: true
        - id: reasonCode
          type:
            - string
          description: ''
          optional: true
      content: >-
        function uninstallExtensionByName(publisherName: string, extensionName:
        string, reason?: string, reasonCode?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.updateDocumentByName
    name: >-
      updateDocumentByName(doc: any, publisherName: string, extensionName:
      string, scopeType: string, scopeValue: string, collectionName: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: doc
          type:
            - any
          description: ''
        - id: publisherName
          type:
            - string
          description: ''
        - id: extensionName
          type:
            - string
          description: ''
        - id: scopeType
          type:
            - string
          description: ''
        - id: scopeValue
          type:
            - string
          description: ''
        - id: collectionName
          type:
            - string
          description: ''
      content: >-
        function updateDocumentByName(doc: any, publisherName: string,
        extensionName: string, scopeType: string, scopeValue: string,
        collectionName: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4.updateInstalledExtension
    name: 'updateInstalledExtension(extension: InstalledExtension)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: extension
          type:
            - >-
              vss-web-extension-sdk.VSS.Contributions.Contracts.InstalledExtension
          description: ''
      content: 'function updateInstalledExtension(extension: InstalledExtension)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vssRequestOptions
          type:
            - vss-web-extension-sdk.IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4._rootRequestPath
    name: _rootRequestPath
    fullName: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.VSS.ExtensionManagement.RestClient.CommonMethods3To4._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: promise
          type:
            - vss-web-extension-sdk.IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
