### YamlMime:UniversalReference
items:
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4
    name: CommonMethods3_1To4
    fullName: CommonMethods3_1To4
    children:
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.constructor
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.createFavorites
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.createFolder
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.deleteFavorites
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.deleteFolder
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.getFavorites
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.getFolders
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.getMetrics
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.getReleaseProjects
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.getReleases
      - >-
        vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.updateFolder
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: >-
        @vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3To4
    source:
      path: rmo.d.ts
      startLine: 2767
      remote:
        path: typings\rmo.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: ReleaseManagement/Core/RestClient
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.constructor
    name: CommonMethods3_1To4
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new CommonMethods3_1To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
    type: constructor
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.createFavorites
    name: createFavorites
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function createFavorites(favoriteItems: FavoriteItem[], project: string,
        scope: string, identityId?: string)
      parameters:
        - id: favoriteItems
          type:
            - >-
              @vss-web-extension-sdk.ReleaseManagement.Core.Contracts.FavoriteItem[]
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: scope
          type:
            - string
          description: ''
        - id: identityId
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.ReleaseManagement.Core.Contracts.FavoriteItem[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.createFolder
    name: createFolder
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Creates a new folder'
    syntax:
      content: 'function createFolder(folder: Folder, project: string, path: string)'
      parameters:
        - id: folder
          type:
            - '@vss-web-extension-sdk.ReleaseManagement.Core.Contracts.Folder'
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.ReleaseManagement.Core.Contracts.Folder>
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.deleteFavorites
    name: deleteFavorites
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function deleteFavorites(project: string, scope: string, identityId?:
        string, favoriteItemIds?: string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: scope
          type:
            - string
          description: ''
        - id: identityId
          type:
            - string
          description: ''
          optional: true
        - id: favoriteItemIds
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.deleteFolder
    name: deleteFolder
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Deletes a definition folder for given folder name and path
      and all it's existing definitions
    syntax:
      content: 'function deleteFolder(project: string, path: string)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.getFavorites
    name: getFavorites
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function getFavorites(project: string, scope: string, identityId?:
        string)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: scope
          type:
            - string
          description: ''
        - id: identityId
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.ReleaseManagement.Core.Contracts.FavoriteItem[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.getFolders
    name: getFolders
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Gets folders'
    syntax:
      content: >-
        function getFolders(project: string, path?: string, queryOrder?:
        FolderPathQueryOrder)
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
          optional: true
        - id: queryOrder
          type:
            - FolderPathQueryOrder
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.ReleaseManagement.Core.Contracts.Folder[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.getMetrics
    name: getMetrics
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: 'function getMetrics(project: string, minMetricsTime?: Date)'
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: minMetricsTime
          type:
            - Date
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.ReleaseManagement.Core.Contracts.Metric[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.getReleaseProjects
    name: getReleaseProjects
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function getReleaseProjects(artifactType: string, artifactSourceId:
        string)
      parameters:
        - id: artifactType
          type:
            - string
          description: ''
        - id: artifactSourceId
          type:
            - string
          description: ''
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.ReleaseManagement.Core.Contracts.ProjectReference[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.getReleases
    name: getReleases
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get a list of releases'
    syntax:
      content: >-
        function getReleases(project?: string, definitionId?: number,
        definitionEnvironmentId?: number, searchText?: string, createdBy?:
        string, statusFilter?: ReleaseStatus, environmentStatusFilter?: number,
        minCreatedTime?: Date, maxCreatedTime?: Date, queryOrder?:
        ReleaseQueryOrder, top?: number, continuationToken?: number, expand?:
        ReleaseExpands, artifactTypeId?: string, sourceId?: string,
        artifactVersionId?: string, sourceBranchFilter?: string, isDeleted?:
        boolean, tagFilter?: string[], propertyFilters?: string[])
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
        - id: definitionId
          type:
            - number
          description: Releases from this release definition Id.
          optional: true
        - id: definitionEnvironmentId
          type:
            - number
          description: ''
          optional: true
        - id: searchText
          type:
            - string
          description: Releases with names starting with searchText.
          optional: true
        - id: createdBy
          type:
            - string
          description: Releases created by this user.
          optional: true
        - id: statusFilter
          type:
            - ReleaseStatus
          description: Releases that have this status.
          optional: true
        - id: environmentStatusFilter
          type:
            - number
          description: ''
          optional: true
        - id: minCreatedTime
          type:
            - Date
          description: Releases that were created after this time.
          optional: true
        - id: maxCreatedTime
          type:
            - Date
          description: Releases that were created before this time.
          optional: true
        - id: queryOrder
          type:
            - ReleaseQueryOrder
          description: >-
            Gets the results in the defined order of created date for releases.
            Default is descending.
          optional: true
        - id: top
          type:
            - number
          description: Number of releases to get. Default is 50.
          optional: true
        - id: continuationToken
          type:
            - number
          description: Gets the releases after the continuation token provided.
          optional: true
        - id: expand
          type:
            - ReleaseExpands
          description: The property that should be expanded in the list of releases.
          optional: true
        - id: artifactTypeId
          type:
            - string
          description: >-
            Releases with given artifactTypeId will be returned. Values can be
            Build, Jenkins, GitHub, Nuget, Team Build (external),
            ExternalTFSBuild, Git, TFVC, ExternalTfsXamlBuild.
          optional: true
        - id: sourceId
          type:
            - string
          description: >-
            Unique identifier of the artifact used. e.g. For build it would be
            {projectGuid}:{BuildDefinitionId}, for Jenkins it would be
            {JenkinsConnectionId}:{JenkinsDefinitionId}, for TfsOnPrem it would
            be {TfsOnPremConnectionId}:{ProjectName}:{TfsOnPremDefinitionId}.
            For third-party artifacts e.g. TeamCity, BitBucket you may refer
            'uniqueSourceIdentifier' inside vss-extension.json
            https://github.com/Microsoft/vsts-rm-extensions/blob/master/Extensions.
          optional: true
        - id: artifactVersionId
          type:
            - string
          description: >-
            Releases with given artifactVersionId will be returned. E.g. in case
            of Build artifactType, it is buildId.
          optional: true
        - id: sourceBranchFilter
          type:
            - string
          description: Releases with given sourceBranchFilter will be returned.
          optional: true
        - id: isDeleted
          type:
            - boolean
          description: 'Gets the soft deleted releases, if true.'
          optional: true
        - id: tagFilter
          type:
            - 'string[]'
          description: >-
            A comma-delimited list of tags. Only releases with these tags will
            be returned.
          optional: true
        - id: propertyFilters
          type:
            - 'string[]'
          description: A comma-delimited list of extended properties to retrieve.
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.ReleaseManagement.Core.Contracts.Release[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.ReleaseManagement.Core.RestClient.CommonMethods3_1To4.updateFolder
    name: updateFolder
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Updates an existing folder at given  existing path'
    syntax:
      content: 'function updateFolder(folder: Folder, project: string, path: string)'
      parameters:
        - id: folder
          type:
            - '@vss-web-extension-sdk.ReleaseManagement.Core.Contracts.Folder'
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
        - id: path
          type:
            - string
          description: ''
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.ReleaseManagement.Core.Contracts.Folder>
    type: method
