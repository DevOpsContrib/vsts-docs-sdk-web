### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityService
    name: IIdentityService
    fullName: IIdentityService
    children:
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityService.getIdentities
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityService.getIdentityConnections
      - >-
        vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityService.getIdentityImages
    langs:
      - typeScript
    type: interface
    summary: ''
    source:
      path: vss.d.ts
      startLine: 26565
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Identities/Picker/Services
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityService.getIdentities
    name: getIdentities
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getIdentities(prefix: string, operationScope: IOperationScope,
        identityType: IEntityType, options?: IIdentityServiceOptions,
        queryTypeHint?: IQueryTypeHint, extensionOptions?:
        IIdentityPickerExtensionOptions)
      parameters:
        - id: prefix
          type:
            - string
          description: ''
        - id: operationScope
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IOperationScope
          description: ''
        - id: identityType
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.Services.IEntityType'
          description: ''
        - id: options
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityServiceOptions
          description: ''
          optional: true
        - id: queryTypeHint
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IQueryTypeHint
          description: ''
          optional: true
        - id: extensionOptions
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityPickerExtensionOptions
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IDictionaryStringTo<@vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Picker.RestClient.QueryTokenResultModel>>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityService.getIdentityConnections
    name: getIdentityConnections
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getIdentityConnections(identity: IEntity, operationScope:
        IOperationScope, identityType: IEntityType, connectionType:
        IConnectionType, options?: IIdentityServiceOptions, extensionOptions?:
        IIdentityPickerExtensionOptions, depth?: number)
      parameters:
        - id: identity
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.RestClient.IEntity'
          description: ''
        - id: operationScope
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IOperationScope
          description: ''
        - id: identityType
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.Services.IEntityType'
          description: ''
        - id: connectionType
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IConnectionType
          description: ''
        - id: options
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityServiceOptions
          description: ''
          optional: true
        - id: extensionOptions
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityPickerExtensionOptions
          description: ''
          optional: true
        - id: depth
          type:
            - number
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Identities.Picker.RestClient.IdentitiesGetConnectionsResponseModel>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityService.getIdentityImages
    name: getIdentityImages
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function getIdentityImages(identities: IEntity[], options?:
        IIdentityServiceOptions)
      parameters:
        - id: identities
          type:
            - '@vss-web-extension-sdk.VSS.Identities.Picker.RestClient.IEntity[]'
          description: ''
        - id: options
          type:
            - >-
              @vss-web-extension-sdk.VSS.Identities.Picker.Services.IIdentityServiceOptions
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IDictionaryStringTo<@vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.IDictionaryStringTo<string>>>
    type: method
