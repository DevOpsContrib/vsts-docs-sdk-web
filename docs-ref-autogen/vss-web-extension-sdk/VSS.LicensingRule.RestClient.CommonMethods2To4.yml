### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4
    name: CommonMethods2To4
    fullName: CommonMethods2To4
    children:
      - >-
        vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.addGroupLicensingRule
      - >-
        vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.applyGroupLicensingRulesToAllUsers
      - >-
        vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.applyGroupLicensingRulesToUser
      - >-
        vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.constructor
      - >-
        vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.deleteGroupLicenseRule
      - >-
        vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.getApplicationStatus
      - >-
        vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.getGroupLicensingRule
      - >-
        vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.getGroupLicensingRules
      - >-
        vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.lookupGroupLicensingRules
      - >-
        vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.serviceInstanceId
      - >-
        vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.updateGroupLicensingRule
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.WebApi.RestClient.VssHttpClient'
    source:
      path: vss.d.ts
      startLine: 27214
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/LicensingRule/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.addGroupLicensingRule
    name: addGroupLicensingRule
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Add a new group Licensing rule asynchronously'
    syntax:
      content: >-
        function addGroupLicensingRule(licensingRule: GroupLicensingRule,
        ruleOption?: RuleOption)
      parameters:
        - id: licensingRule
          type:
            - >-
              @vss-web-extension-sdk.VSS.LicensingRule.Contracts.GroupLicensingRule
          description: The Licensing Rule
        - id: ruleOption
          type:
            - RuleOption
          description: Rule Option
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Operations.Contracts.OperationReference>
    module: VSS/LicensingRule/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.applyGroupLicensingRulesToAllUsers
    name: applyGroupLicensingRulesToAllUsers
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Applies group rules to the specified user'
    syntax:
      content: 'function applyGroupLicensingRulesToAllUsers(ruleOption?: RuleOption)'
      parameters:
        - id: ruleOption
          type:
            - RuleOption
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Operations.Contracts.OperationReference>
    module: VSS/LicensingRule/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.applyGroupLicensingRulesToUser
    name: applyGroupLicensingRulesToUser
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Applies group rules to the specified user'
    syntax:
      content: 'function applyGroupLicensingRulesToUser(userId: string)'
      parameters:
        - id: userId
          type:
            - string
          description: ''
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    module: VSS/LicensingRule/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.constructor
    name: CommonMethods2To4
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new CommonMethods2To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
    module: VSS/LicensingRule/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.deleteGroupLicenseRule
    name: deleteGroupLicenseRule
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Delete a group Licensing rule'
    syntax:
      content: >-
        function deleteGroupLicenseRule(subjectDescriptor: string, ruleOption?:
        RuleOption)
      parameters:
        - id: subjectDescriptor
          type:
            - string
          description: subjectDescriptor
        - id: ruleOption
          type:
            - RuleOption
          description: Rule Option
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Operations.Contracts.OperationReference>
    module: VSS/LicensingRule/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.getApplicationStatus
    name: getApplicationStatus
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Gets application status for the specific rule'
    syntax:
      content: 'function getApplicationStatus(operationId?: string)'
      parameters:
        - id: operationId
          type:
            - string
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.LicensingRule.Contracts.ApplicationStatus>
    module: VSS/LicensingRule/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.getGroupLicensingRule
    name: getGroupLicensingRule
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Preview API] Gets the group Licensing rule for the group with given
      SubjectDescriptor
    syntax:
      content: 'function getGroupLicensingRule(subjectDescriptor: string)'
      parameters:
        - id: subjectDescriptor
          type:
            - string
          description: ''
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.LicensingRule.Contracts.GroupLicensingRule>
    module: VSS/LicensingRule/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.getGroupLicensingRules
    name: getGroupLicensingRules
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: 'function getGroupLicensingRules(top: number, skip?: number)'
      parameters:
        - id: top
          type:
            - number
          description: ''
        - id: skip
          type:
            - number
          description: ''
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.LicensingRule.Contracts.GroupLicensingRule[]>
    module: VSS/LicensingRule/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.lookupGroupLicensingRules
    name: lookupGroupLicensingRules
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      [Preview API] Get Group License Rules for the given batch batch of group
      Ids
    syntax:
      content: 'function lookupGroupLicensingRules(groupRuleLookup: GraphSubjectLookup)'
      parameters:
        - id: groupRuleLookup
          type:
            - >-
              @vss-web-extension-sdk.VSS.LicensingRule.Contracts.GraphSubjectLookup
          description: ''
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.LicensingRule.Contracts.GroupLicensingRule[]>
    module: VSS/LicensingRule/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: static string serviceInstanceId
      return:
        type:
          - string
    module: VSS/LicensingRule/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.LicensingRule.RestClient.CommonMethods2To4.updateGroupLicensingRule
    name: updateGroupLicensingRule
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API] Update a group Licensing rule'
    syntax:
      content: >-
        function updateGroupLicensingRule(licensingRuleUpdate:
        GroupLicensingRuleUpdate, ruleOption?: RuleOption)
      parameters:
        - id: licensingRuleUpdate
          type:
            - >-
              @vss-web-extension-sdk.VSS.LicensingRule.Contracts.GroupLicensingRuleUpdate
          description: The update model for the Licensing Rule
        - id: ruleOption
          type:
            - RuleOption
          description: Rule Option
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Operations.Contracts.OperationReference>
    module: VSS/LicensingRule/RestClient
