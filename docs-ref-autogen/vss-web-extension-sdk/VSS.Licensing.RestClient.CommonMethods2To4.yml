### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4
    name: CommonMethods2To4
    fullName: CommonMethods2To4
    children:
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.assignAccountEntitlementForUser
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.assignAvailableAccountEntitlement
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.bulkGetExtensionsAssignedToUsers
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.constructor
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.computeExtensionRights
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.deleteUserEntitlements
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getAccountEntitlement
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getAccountEntitlementForUser
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getAccountLicensesUsage
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getCertificate
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getClientRights
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getEntitlements
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getExtensionLicenseData
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getExtensionRights
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getMsdnPresence
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getUsageRights
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.obtainAvailableAccountEntitlements
      - >-
        vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.registerExtensionLicense
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.WebApi.RestClient.VssHttpClient'
    source:
      path: vss.d.ts
      startLine: 27780
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Licensing/RestClient
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.assignAccountEntitlementForUser
    name: >-
      assignAccountEntitlementForUser(body: AccountEntitlementUpdateModel,
      userId: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Assign an explicit account entitlement'
    syntax:
      parameters:
        - id: body
          type:
            - >-
              @vss-web-extension-sdk.VSS.Licensing.Contracts.AccountEntitlementUpdateModel
          description: The update model for the entitlement
        - id: userId
          type:
            - string
          description: The id of the user
      content: >-
        function assignAccountEntitlementForUser(body:
        AccountEntitlementUpdateModel, userId: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Licensing.Contracts.AccountEntitlement>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.assignAvailableAccountEntitlement
    name: 'assignAvailableAccountEntitlement(userId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Assign an available entitilement to a user'
    syntax:
      parameters:
        - id: userId
          type:
            - string
          description: The user to which to assign the entitilement
      content: 'function assignAvailableAccountEntitlement(userId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Licensing.Contracts.AccountEntitlement>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.bulkGetExtensionsAssignedToUsers
    name: 'bulkGetExtensionsAssignedToUsers(userIds: string[])'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns extensions that are currrently assigned to the users
      that are in the account
    syntax:
      parameters:
        - id: userIds
          type:
            - 'string[]'
          description: ''
      content: 'function bulkGetExtensionsAssignedToUsers(userIds: string[])'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<[key: string]: function>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.constructor
    name: >-
      CommonMethods2To4(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
      content: >-
        new CommonMethods2To4(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.computeExtensionRights
    name: 'computeExtensionRights(ids: string[])'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: ids
          type:
            - 'string[]'
          description: ''
      content: 'function computeExtensionRights(ids: string[])'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<[key: string]: boolean>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.deleteUserEntitlements
    name: 'deleteUserEntitlements(userId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: userId
          type:
            - string
          description: ''
      content: 'function deleteUserEntitlements(userId: string)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getAccountEntitlement
    name: getAccountEntitlement()
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Gets the account entitlement of the current user it is
      mapped to _apis/licensing/entitlements/me so specifically is looking for
      the user of the request
    syntax:
      parameters: []
      content: function getAccountEntitlement()
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Licensing.Contracts.AccountEntitlement>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getAccountEntitlementForUser
    name: 'getAccountEntitlementForUser(userId: string, determineRights?: boolean)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API] Get the entitlements for a user'
    syntax:
      parameters:
        - id: userId
          type:
            - string
          description: The id of the user
        - id: determineRights
          type:
            - boolean
          description: ''
          optional: true
      content: >-
        function getAccountEntitlementForUser(userId: string, determineRights?:
        boolean)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Licensing.Contracts.AccountEntitlement>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getAccountLicensesUsage
    name: getAccountLicensesUsage()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getAccountLicensesUsage()
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Licensing.Contracts.AccountLicenseUsage[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getCertificate
    name: getCertificate()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getCertificate()
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<ArrayBuffer>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getClientRights
    name: >-
      getClientRights(rightName?: string, productVersion?: string, edition?:
      string, relType?: string, includeCertificate?: boolean, canary?: string,
      machineId?: string)
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: rightName
          type:
            - string
          description: ''
          optional: true
        - id: productVersion
          type:
            - string
          description: ''
          optional: true
        - id: edition
          type:
            - string
          description: ''
          optional: true
        - id: relType
          type:
            - string
          description: ''
          optional: true
        - id: includeCertificate
          type:
            - boolean
          description: ''
          optional: true
        - id: canary
          type:
            - string
          description: ''
          optional: true
        - id: machineId
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getClientRights(rightName?: string, productVersion?: string,
        edition?: string, relType?: string, includeCertificate?: boolean,
        canary?: string, machineId?: string)
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Licensing.Contracts.ClientRightsContainer>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getEntitlements
    name: getEntitlements()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getEntitlements()
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Licensing.Contracts.MsdnEntitlement[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getExtensionLicenseData
    name: 'getExtensionLicenseData(extensionId: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: extensionId
          type:
            - string
          description: ''
      content: 'function getExtensionLicenseData(extensionId: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Licensing.Contracts.ExtensionLicenseData>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getExtensionRights
    name: getExtensionRights()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getExtensionRights()
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Licensing.Contracts.ExtensionRightsResult>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getMsdnPresence
    name: getMsdnPresence()
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters: []
      content: function getMsdnPresence()
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.getUsageRights
    name: 'getUsageRights(rightName?: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: rightName
          type:
            - string
          description: ''
          optional: true
      content: 'function getUsageRights(rightName?: string)'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Licensing.Contracts.IUsageRight[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.obtainAvailableAccountEntitlements
    name: 'obtainAvailableAccountEntitlements(userIds: string[])'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Returns AccountEntitlements that are currently assigned to
      the given list of users in the account
    syntax:
      parameters:
        - id: userIds
          type:
            - 'string[]'
          description: List of user Ids.
      content: 'function obtainAvailableAccountEntitlements(userIds: string[])'
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.VSS.Licensing.Contracts.AccountEntitlement[]>
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Licensing.RestClient.CommonMethods2To4.registerExtensionLicense
    name: 'registerExtensionLicense(extensionLicenseData: ExtensionLicenseData)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: extensionLicenseData
          type:
            - >-
              @vss-web-extension-sdk.VSS.Licensing.Contracts.ExtensionLicenseData
          description: ''
      content: >-
        function registerExtensionLicense(extensionLicenseData:
        ExtensionLicenseData)
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<boolean>'
    type: method
