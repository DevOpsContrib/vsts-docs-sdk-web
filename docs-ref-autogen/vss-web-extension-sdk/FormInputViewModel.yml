### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.FormInputViewModel
    name: FormInputViewModel
    fullName: FormInputViewModel
    children:
      - vss-web-extension-sdk.FormInputViewModel.constructor
      - vss-web-extension-sdk.FormInputViewModel.mapInputIdToComboControl
      - vss-web-extension-sdk.FormInputViewModel._dependentInputsLoadedCallback
      - vss-web-extension-sdk.FormInputViewModel._dependentInputsLoadingCallback
      - vss-web-extension-sdk.FormInputViewModel._inputsViewModels
      - vss-web-extension-sdk.FormInputViewModel._inputValidChangedCallback
      - vss-web-extension-sdk.FormInputViewModel._inputValuesChangedCallback
      - vss-web-extension-sdk.FormInputViewModel._isDirty
      - vss-web-extension-sdk.FormInputViewModel._queryForValuesCallback
    langs:
      - typeScript
    type: class
    summary: ''
  - uid: vss-web-extension-sdk.FormInputViewModel.constructor
    name: >-
      FormInputViewModel(dependentInputsLoadingCallback: any,
      dependentInputsLoadedCallback: any, inputValidChangedCallback: any,
      inputValuesChangedCallback: any, queryForValuesCallback?: any)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: dependentInputsLoadingCallback
          type:
            - any
          description: ''
        - id: dependentInputsLoadedCallback
          type:
            - any
          description: ''
        - id: inputValidChangedCallback
          type:
            - any
          description: ''
        - id: inputValuesChangedCallback
          type:
            - any
          description: ''
        - id: queryForValuesCallback
          type:
            - any
          description: ''
          optional: true
      content: >-
        new FormInputViewModel(dependentInputsLoadingCallback: any,
        dependentInputsLoadedCallback: any, inputValidChangedCallback: any,
        inputValuesChangedCallback: any, queryForValuesCallback?: any)
      return:
        type:
          - vss-web-extension-sdk.FormInputViewModel
    type: constructor
  - uid: vss-web-extension-sdk.FormInputViewModel.mapInputIdToComboControl
    name: mapInputIdToComboControl
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.FormInputViewModel._dependentInputsLoadedCallback
    name: _dependentInputsLoadedCallback
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.FormInputViewModel._dependentInputsLoadingCallback
    name: _dependentInputsLoadingCallback
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.FormInputViewModel._inputsViewModels
    name: _inputsViewModels
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.FormInputViewModel._inputValidChangedCallback
    name: _inputValidChangedCallback
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.FormInputViewModel._inputValuesChangedCallback
    name: _inputValuesChangedCallback
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - any
  - uid: vss-web-extension-sdk.FormInputViewModel._isDirty
    name: _isDirty
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.FormInputViewModel._queryForValuesCallback
    name: _queryForValuesCallback
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - any
