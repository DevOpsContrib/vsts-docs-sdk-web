### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor
    name: ComboCellEditor
    fullName: ComboCellEditor
    children:
      - >-
        vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.clearValue
      - >-
        vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.constructor
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.createIn
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.focus
      - >-
        vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.getComboControl
      - >-
        vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.getHeight
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.getValue
      - >-
        vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.initialize
      - >-
        vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.setPosition
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.setSize
      - vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.setValue
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.Controls.EditableGrid.CellEditor'
    source:
      path: vss.d.ts
      startLine: 11125
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/EditableGrid
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.clearValue
    name: clearValue
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function clearValue(setEmpty?: boolean)'
      parameters:
        - id: setEmpty
          type:
            - boolean
          description: ''
          optional: true
    module: VSS/Controls/EditableGrid
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.constructor
    name: ComboCellEditor
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new ComboCellEditor(options: any)'
      parameters:
        - id: options
          type:
            - any
          description: ''
    module: VSS/Controls/EditableGrid
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.createIn
    name: createIn
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function createIn(container: any)'
      parameters:
        - id: container
          type:
            - any
          description: ''
    module: VSS/Controls/EditableGrid
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.focus
    name: focus
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function focus()
      parameters: []
    module: VSS/Controls/EditableGrid
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.getComboControl
    name: getComboControl
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getComboControl()
      parameters: []
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.Combos.Combo'
    module: VSS/Controls/EditableGrid
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.getHeight
    name: getHeight
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getHeight()
      parameters: []
      return:
        type:
          - number
    module: VSS/Controls/EditableGrid
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.getValue
    name: getValue
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getValue()
      parameters: []
      return:
        type:
          - string
    module: VSS/Controls/EditableGrid
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.initialize
    name: initialize
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function initialize()
      parameters: []
    module: VSS/Controls/EditableGrid
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.setPosition
    name: setPosition
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setPosition(top: number, left: number)'
      parameters:
        - id: top
          type:
            - number
          description: ''
        - id: left
          type:
            - number
          description: ''
    module: VSS/Controls/EditableGrid
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.setSize
    name: setSize
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setSize($cellContext: JQuery)'
      parameters:
        - id: $cellContext
          type:
            - JQuery
          description: ''
    module: VSS/Controls/EditableGrid
  - uid: vss-web-extension-sdk.VSS.Controls.EditableGrid.ComboCellEditor.setValue
    name: setValue
    children: []
    type: method
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function setValue(value: string, doNotSavePrevious?: boolean)'
      parameters:
        - id: value
          type:
            - string
          description: ''
        - id: doNotSavePrevious
          type:
            - boolean
          description: ''
          optional: true
    module: VSS/Controls/EditableGrid
