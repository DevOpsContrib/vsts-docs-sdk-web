### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior
    name: ComboTreeBehavior
    fullName: ComboTreeBehavior
    children:
      - vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.combo
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.constructor
      - vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.downKey
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getAriaAutocomplete
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getAriaDescription
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getDropOptions
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getDropWidth
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getItemText
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getMaxItemLength
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getSelectedIndex
      - vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getText
      - vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.keyDown
      - vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.keyPress
      - vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.keyUp
      - vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.leftKey
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.onForceHideDropPopup
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.pageDownKey
      - vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.pageUpKey
      - vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.rightKey
      - vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.selectNext
      - vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.selectPrev
      - vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.setText
      - vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.upKey
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior._dataSource
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior._dropSelectionChanged
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior._maxItemLength
      - vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior._options
      - >-
        vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior._setSelectedIndex
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: VSS.Controls.TreeView
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.combo
    name: combo
    fullName: combo
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.Combos.Combo
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.constructor
    name: 'ComboTreeBehavior(combo: any, options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: combo
          type:
            - any
          description: ''
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'new ComboTreeBehavior(combo: any, options?: any)'
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.downKey
    name: 'downKey(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function downKey(e?: JQueryEventObject)'
      return:
        type:
          - any
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getAriaAutocomplete
    name: getAriaAutocomplete()
    children: []
    langs:
      - typeScript
    summary: Get value for aria-autocomplete attribute of parent.
    syntax:
      parameters: []
      content: function getAriaAutocomplete()
      return:
        type:
          - string
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getAriaDescription
    name: getAriaDescription()
    children: []
    langs:
      - typeScript
    summary: Get additional text to use to label the control for screen reader users.
    syntax:
      parameters: []
      content: function getAriaDescription()
      return:
        type:
          - string
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getDropOptions
    name: getDropOptions()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getDropOptions()
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getDropWidth
    name: getDropWidth()
    children: []
    langs:
      - typeScript
    summary: Gets the drop width of this behavior
    syntax:
      parameters: []
      content: function getDropWidth()
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getItemText
    name: 'getItemText(index: number, all?: boolean)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets the text of the given index based on allItems in datasource. Default
      behavior returns datasource getItemText

      Can be overridden by the getItemText option
    syntax:
      parameters:
        - id: index
          type:
            - number
          description: ''
        - id: all
          type:
            - boolean
          description: |
            Search allItems from data source
          optional: true
      content: 'function getItemText(index: number, all?: boolean)'
      return:
        type:
          - string
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getMaxItemLength
    name: getMaxItemLength()
    children: []
    langs:
      - typeScript
    summary: Finds the max item length inside the data source
    syntax:
      parameters: []
      content: function getMaxItemLength()
      return:
        type:
          - number
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getSelectedIndex
    name: 'getSelectedIndex(value?: string, all?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - string
          description: ''
          optional: true
        - id: all
          type:
            - any
          description: ''
          optional: true
      content: 'function getSelectedIndex(value?: string, all?: any)'
      return:
        type:
          - number
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.getText
    name: getText()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function getText()
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.keyDown
    name: 'keyDown(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function keyDown(e?: JQueryEventObject)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.keyPress
    name: 'keyPress(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function keyPress(e?: JQueryEventObject)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.keyUp
    name: 'keyUp(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function keyUp(e?: JQueryEventObject)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.leftKey
    name: 'leftKey(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function leftKey(e?: JQueryEventObject)'
      return:
        type:
          - any
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.onForceHideDropPopup
    name: 'onForceHideDropPopup(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function onForceHideDropPopup(e?: JQueryEventObject)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.pageDownKey
    name: 'pageDownKey(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function pageDownKey(e?: JQueryEventObject)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.pageUpKey
    name: 'pageUpKey(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function pageUpKey(e?: JQueryEventObject)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.rightKey
    name: 'rightKey(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function rightKey(e?: JQueryEventObject)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.selectNext
    name: 'selectNext(page?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: page
          type:
            - boolean
          description: ''
          optional: true
      content: 'function selectNext(page?: boolean)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.selectPrev
    name: 'selectPrev(page?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: page
          type:
            - boolean
          description: ''
          optional: true
      content: 'function selectPrev(page?: boolean)'
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.setText
    name: 'setText(value: string, fireEvent?: boolean)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: value
          type:
            - string
          description: ''
        - id: fireEvent
          type:
            - boolean
          description: |+

          optional: true
      content: 'function setText(value: string, fireEvent?: boolean)'
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior.upKey
    name: 'upKey(e?: JQueryEventObject)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: e
          type:
            - JQueryEventObject
          description: ''
          optional: true
      content: 'function upKey(e?: JQueryEventObject)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior._dataSource
    name: _dataSource
    fullName: _dataSource
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.VSS.Controls.BaseDataSource
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior._dropSelectionChanged
    name: '_dropSelectionChanged(selectedIndex: any, accept: any)'
    children: []
    langs:
      - typeScript
    summary: Called on drop selection changed
    syntax:
      parameters:
        - id: selectedIndex
          type:
            - any
          description: Represents index in datasource._items
        - id: accept
          type:
            - any
          description: |
            User has performed a click action
      content: 'function _dropSelectionChanged(selectedIndex: any, accept: any)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior._maxItemLength
    name: _maxItemLength
    fullName: _maxItemLength
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior._options
    name: _options
    fullName: _options
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - any
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TreeView.ComboTreeBehavior._setSelectedIndex
    name: '_setSelectedIndex(selectedIndex: number, fireEvent?: boolean)'
    children: []
    langs:
      - typeScript
    summary: Set selected index
    syntax:
      parameters:
        - id: selectedIndex
          type:
            - number
          description: new selected index
        - id: fireEvent
          type:
            - boolean
          description: |
            flag to whether to fire index changed
          optional: true
      content: 'function _setSelectedIndex(selectedIndex: number, fireEvent?: boolean)'
    type: method
