### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Platform.Layout.TimerManagement
    name: TimerManagement
    fullName: TimerManagement
    children:
      - vss-web-extension-sdk.VSS.Platform.Layout.TimerManagement.clearAllTimers
      - vss-web-extension-sdk.VSS.Platform.Layout.TimerManagement.clearInterval
      - vss-web-extension-sdk.VSS.Platform.Layout.TimerManagement.clearTimeout
      - vss-web-extension-sdk.VSS.Platform.Layout.TimerManagement.setInterval
      - vss-web-extension-sdk.VSS.Platform.Layout.TimerManagement.setTimeout
    langs:
      - typeScript
    type: class
    summary: The TimerManagement class is used to track a set of timers.
    source:
      path: vss.d.ts
      startLine: 29737
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Platform/Layout
  - uid: vss-web-extension-sdk.VSS.Platform.Layout.TimerManagement.clearAllTimers
    name: clearAllTimers
    children: []
    type: method
    langs:
      - typeScript
    summary: clearAllTimers is used to clear any active timers in the object.
    syntax:
      content: function clearAllTimers()
      parameters: []
    module: VSS/Platform/Layout
  - uid: vss-web-extension-sdk.VSS.Platform.Layout.TimerManagement.clearInterval
    name: clearInterval
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      clearInterval is used to stop the series of callbacks that was setup
      through setInterval.
    syntax:
      content: 'function clearInterval(intervalId: number)'
      parameters:
        - id: intervalId
          type:
            - number
          description: |
            The id returned from eh setInterval call that you want stopped.
    module: VSS/Platform/Layout
  - uid: vss-web-extension-sdk.VSS.Platform.Layout.TimerManagement.clearTimeout
    name: clearTimeout
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      clearTimeout is used to stop a timeout callback that was setup through
      setTimeout.
    syntax:
      content: 'function clearTimeout(timeoutId: number)'
      parameters:
        - id: timeoutId
          type:
            - number
          description: |
            The id returned from eh setTimeout call that you want stopped.
    module: VSS/Platform/Layout
  - uid: vss-web-extension-sdk.VSS.Platform.Layout.TimerManagement.setInterval
    name: setInterval
    children: []
    type: method
    langs:
      - typeScript
    summary: setInterval is used to setup a callback that is called on an interval.
    syntax:
      content: >-
        function setInterval(callback: (args: any[]) => void, milliseconds:
        number, args: any[])
      parameters:
        - id: callback
          type:
            - '(args: any[]) => void'
          description: |
            The callback that should be called each interval time period.
        - id: milliseconds
          type:
            - number
          description: |
            The number of milliseconds between each callback.
        - id: args
          type:
            - 'any[]'
          description: |
            Optional variable argument list passed to the callback.
      return:
        type:
          - number
    module: VSS/Platform/Layout
  - uid: vss-web-extension-sdk.VSS.Platform.Layout.TimerManagement.setTimeout
    name: setTimeout
    children: []
    type: method
    langs:
      - typeScript
    summary: >-
      setTimeout is used to setup a onetime callback that is called after the
      specified timeout.
    syntax:
      content: >-
        function setTimeout(callback: (args: any[]) => void, milliseconds?:
        number, args: any[])
      parameters:
        - id: callback
          type:
            - '(args: any[]) => void'
          description: |
            The callback that should be called when the time period has elapsed.
        - id: milliseconds
          type:
            - number
          description: |
            The number of milliseconds before the callback should be called.
             Even if a timeout of 0 is used the callback will be executed asynchronouly.
          optional: true
        - id: args
          type:
            - 'any[]'
          description: |
            Optional variable argument list passed to the callback.
      return:
        type:
          - number
    module: VSS/Platform/Layout
