### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.NodeJS.Domain
    name: Domain
    fullName: Domain
    children:
      - vss-web-extension-sdk.NodeJS.Domain.add
      - vss-web-extension-sdk.NodeJS.Domain.addListener
      - vss-web-extension-sdk.NodeJS.Domain.bind
      - vss-web-extension-sdk.NodeJS.Domain.dispose
      - vss-web-extension-sdk.NodeJS.Domain.intercept
      - vss-web-extension-sdk.NodeJS.Domain.on
      - vss-web-extension-sdk.NodeJS.Domain.once
      - vss-web-extension-sdk.NodeJS.Domain.remove
      - vss-web-extension-sdk.NodeJS.Domain.removeAllListeners
      - vss-web-extension-sdk.NodeJS.Domain.removeListener
      - vss-web-extension-sdk.NodeJS.Domain.run
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      - '@vss-web-extension-sdk.NodeJS.Events'
    package: vss-web-extension-sdk
    module: NodeJS
  - uid: vss-web-extension-sdk.NodeJS.Domain.add
    name: 'add(emitter: Events)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: emitter
          type:
            - '@vss-web-extension-sdk.NodeJS.Events'
          description: ''
      content: 'function add(emitter: Events)'
    type: method
  - uid: vss-web-extension-sdk.NodeJS.Domain.addListener
    name: 'addListener(event: string, listener: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - function
          description: ''
      content: 'function addListener(event: string, listener: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.NodeJS.Domain.bind
    name: 'bind(cb: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: cb
          type:
            - function
          description: ''
      content: 'function bind(cb: function)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.NodeJS.Domain.dispose
    name: dispose()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function dispose()
    type: method
  - uid: vss-web-extension-sdk.NodeJS.Domain.intercept
    name: 'intercept(cb: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: cb
          type:
            - function
          description: ''
      content: 'function intercept(cb: function)'
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.NodeJS.Domain.on
    name: 'on(event: string, listener: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - function
          description: ''
      content: 'function on(event: string, listener: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.NodeJS.Domain.once
    name: 'once(event: string, listener: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - function
          description: ''
      content: 'function once(event: string, listener: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.NodeJS.Domain.remove
    name: 'remove(emitter: Events)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: emitter
          type:
            - '@vss-web-extension-sdk.NodeJS.Events'
          description: ''
      content: 'function remove(emitter: Events)'
    type: method
  - uid: vss-web-extension-sdk.NodeJS.Domain.removeAllListeners
    name: 'removeAllListeners(event?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
          optional: true
      content: 'function removeAllListeners(event?: string)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.NodeJS.Domain.removeListener
    name: 'removeListener(event: string, listener: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: event
          type:
            - string
          description: ''
        - id: listener
          type:
            - function
          description: ''
      content: 'function removeListener(event: string, listener: function)'
      return:
        type:
          - this
    type: method
  - uid: vss-web-extension-sdk.NodeJS.Domain.run
    name: 'run(fn: Function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: fn
          type:
            - Function
          description: ''
      content: 'function run(fn: Function)'
    type: method
