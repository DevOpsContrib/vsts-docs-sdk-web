### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel
    name: InputsViewModel
    fullName: InputsViewModel
    children:
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.addInputViewModel
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.allDependentsSatisfied
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.areDirty
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.areValid
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.getInputsAsDictionary
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.getInputViewModelById
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.getInputViewModels
      - vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.constructor
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.removeInputViewModel
    langs:
      - typeScript
    type: class
    summary: ''
    source:
      path: vss.d.ts
      startLine: 11822
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.addInputViewModel
    name: >-
      addInputViewModel(inputDescriptor: ExtendedInputDescriptor, inputValue?:
      any, inputValidChangedCallback?: InputViewModelDelegate<void>,
      valuesChangedCallback?: InputViewModelDelegate<void>)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        function addInputViewModel(inputDescriptor: ExtendedInputDescriptor,
        inputValue?: any, inputValidChangedCallback?:
        InputViewModelDelegate<void>, valuesChangedCallback?:
        InputViewModelDelegate<void>)
      parameters:
        - id: inputDescriptor
          type:
            - >-
              @vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor
          description: ''
        - id: inputValue
          type:
            - any
          description: ''
          optional: true
        - id: inputValidChangedCallback
          type:
            - >-
              @vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModelDelegate<void>
          description: ''
          optional: true
        - id: valuesChangedCallback
          type:
            - >-
              @vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModelDelegate<void>
          description: ''
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.allDependentsSatisfied
    name: 'allDependentsSatisfied(inputViewModel: InputViewModel)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function allDependentsSatisfied(inputViewModel: InputViewModel)'
      parameters:
        - id: inputViewModel
          type:
            - '@vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel'
          description: ''
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.areDirty
    name: areDirty()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function areDirty()
      parameters: []
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.areValid
    name: areValid()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function areValid()
      parameters: []
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.getInputsAsDictionary
    name: getInputsAsDictionary()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getInputsAsDictionary()
      parameters: []
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.getInputViewModelById
    name: 'getInputViewModelById(id: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getInputViewModelById(id: string)'
      parameters:
        - id: id
          type:
            - string
          description: ''
      return:
        type:
          - '@vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.getInputViewModels
    name: getInputViewModels()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getInputViewModels()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.constructor
    name: >-
      InputsViewModel(formInputViewModel: FormInputViewModel, inputDescriptors:
      InputDescriptor[], inputValues: [key: string]: any,
      inputValidChangedCallback: InputViewModelDelegate<void>,
      valuesChangedCallback: InputViewModelDelegate<void>)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new InputsViewModel(formInputViewModel: FormInputViewModel,
        inputDescriptors: InputDescriptor[], inputValues: [key: string]: any,
        inputValidChangedCallback: InputViewModelDelegate<void>,
        valuesChangedCallback: InputViewModelDelegate<void>)
      parameters:
        - id: formInputViewModel
          type:
            - '@vss-web-extension-sdk.VSS.Controls.FormInput.FormInputViewModel'
          description: ''
        - id: inputDescriptors
          type:
            - >-
              @vss-web-extension-sdk.VSS.Common.Contracts.FormInput.InputDescriptor[]
          description: ''
        - id: inputValues
          type:
            - '[key: string]: any'
          description: ''
        - id: inputValidChangedCallback
          type:
            - >-
              @vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModelDelegate<void>
          description: ''
        - id: valuesChangedCallback
          type:
            - >-
              @vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModelDelegate<void>
          description: ''
    type: constructor
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.InputsViewModel.removeInputViewModel
    name: 'removeInputViewModel(inputViewModel: InputViewModel)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function removeInputViewModel(inputViewModel: InputViewModel)'
      parameters:
        - id: inputViewModel
          type:
            - '@vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModel'
          description: ''
    type: method
