### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl
    name: TabContentBaseControl
    fullName: TabContentBaseControl
    children:
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl.beginLoad
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl.beginSave
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl.dispose
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl.fireDirtyFlagChange
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl.isDirty
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl.registerStateChangedEvents
      - >-
        vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl.constructor
    langs:
      - typeScript
    type: class
    summary: >-
      A base class for the all the tab content classes that implement the
      ITabContent.

      You can start with other class, but make sure you implement ITabContent.
    extends:
      - '@vss-web-extension-sdk.VSS.Controls.BaseControl'
    source:
      path: vss.d.ts
      startLine: 17160
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/TabContent
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl.beginLoad
    name: 'beginLoad($container: JQuery)'
    children: []
    langs:
      - typeScript
    summary: Method that renders the actual control
    syntax:
      parameters:
        - id: $container
          type:
            - JQuery
          description: 'The DOM element, to which the control should be added'
      content: 'function beginLoad($container: JQuery)'
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<any>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl.beginSave
    name: beginSave()
    children: []
    langs:
      - typeScript
    summary: 'Begin to persist user changes, make sure you overwrite this'
    syntax:
      parameters: []
      content: function beginSave()
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<boolean>'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl.dispose
    name: dispose()
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters: []
      content: function dispose()
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl.fireDirtyFlagChange
    name: 'fireDirtyFlagChange(isDirty: boolean)'
    children: []
    langs:
      - typeScript
    summary: >-
      Set the dirty state for the content control, make sure call this for any
      dirty state change
    syntax:
      parameters:
        - id: isDirty
          type:
            - boolean
          description: |+

      content: 'function fireDirtyFlagChange(isDirty: boolean)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl.isDirty
    name: isDirty()
    children: []
    langs:
      - typeScript
    summary: Gets the dirty state for the content control
    syntax:
      parameters: []
      content: function isDirty()
      return:
        type:
          - boolean
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl.registerStateChangedEvents
    name: 'registerStateChangedEvents(onDirtyStateChanged: Function)'
    children: []
    langs:
      - typeScript
    summary: >-
      Method that lets the container specify the delegates to be called on state
      change in the tab content
    syntax:
      parameters:
        - id: onDirtyStateChanged
          type:
            - Function
          description: |
            The delegate for the dirty state transition
      content: 'function registerStateChangedEvents(onDirtyStateChanged: Function)'
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.TabContent.TabContentBaseControl.constructor
    name: 'TabContentBaseControl(options?: any)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      content: 'new TabContentBaseControl(options?: any)'
    type: constructor
