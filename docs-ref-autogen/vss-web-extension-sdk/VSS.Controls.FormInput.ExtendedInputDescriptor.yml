### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor
    name: ExtendedInputDescriptor
    fullName: ExtendedInputDescriptor
    children:
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.deleteCallbacks
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.dependencies
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.dependenciesSatisfiedCallbacks
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.hideUntilSatisfied
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.isDeletable
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.noInvalidateOnDependencyChange
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.noValidIcon
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.validation
      - >-
        vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.valueChangedCallbacks
    langs:
      - typeScript
    type: interface
    summary: ''
    extends:
      - '@vss-web-extension-sdk.VSS.Common.Contracts.FormInput.InputDescriptor'
    source:
      path: vss.d.ts
      startLine: 11707
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/FormInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.deleteCallbacks
    name: deleteCallbacks
    fullName: deleteCallbacks
    children: []
    langs:
      - typeScript
    type: property
    summary: A list of functions to be called when this input is deleted.
    syntax:
      return:
        type:
          - 'function[]'
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.dependencies
    name: dependencies
    fullName: dependencies
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A list of functions, all of which must return true for this input to be
      considered valid
    syntax:
      return:
        type:
          - >-
            @vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModelDelegate<boolean>[]
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.dependenciesSatisfiedCallbacks
    name: dependenciesSatisfiedCallbacks
    fullName: dependenciesSatisfiedCallbacks
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      A list of functions to be called when the state of all dependencies of
      this input being satisfied changes.
    syntax:
      return:
        type:
          - 'function[]'
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.hideUntilSatisfied
    name: hideUntilSatisfied
    fullName: hideUntilSatisfied
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets whether this input should be invisible until all of its dependencies
      are satisfied or not.
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.isDeletable
    name: isDeletable
    fullName: isDeletable
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets whether this input is deletable.
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.noInvalidateOnDependencyChange
    name: noInvalidateOnDependencyChange
    fullName: noInvalidateOnDependencyChange
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Gets whether this input should be invalidated when one of its dependency's
      value changes or not.

      Odd name is due to the fact that the default should be to invalidate
      (based on FormInput_Contracts.InputDescriptor).
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.noValidIcon
    name: noValidIcon
    fullName: noValidIcon
    children: []
    langs:
      - typeScript
    type: property
    summary: Gets whether or not to display the valid icon for this input.
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.validation
    name: validation
    fullName: validation
    children: []
    langs:
      - typeScript
    type: property
    summary: Information to use to validate this input's value
    syntax:
      return:
        type:
          - >-
            @vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputValidation
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FormInput.ExtendedInputDescriptor.valueChangedCallbacks
    name: valueChangedCallbacks
    fullName: valueChangedCallbacks
    children: []
    langs:
      - typeScript
    type: property
    summary: A list of functions to be called when the value of this input is changed.
    syntax:
      return:
        type:
          - >-
            @vss-web-extension-sdk.VSS.Controls.FormInput.InputViewModelDelegate<void>[]
