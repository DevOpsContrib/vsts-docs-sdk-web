### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Profile.Metrics.MeteredAsyncAction
    name: MeteredAsyncAction
    fullName: MeteredAsyncAction
    children:
      - vss-web-extension-sdk.VSS.Profile.Metrics.MeteredAsyncAction.action
      - >-
        vss-web-extension-sdk.VSS.Profile.Metrics.MeteredAsyncAction.createMetrics
      - vss-web-extension-sdk.VSS.Profile.Metrics.MeteredAsyncAction.enact
      - vss-web-extension-sdk.VSS.Profile.Metrics.MeteredAsyncAction.constructor
    langs:
      - typeScript
    type: class
    summary: >-
      Wrapped async action with metrics automatically logged for beginning and
      end

      Change to abstract class when using ts-api-checker supports it
    package: vss-web-extension-sdk
    module: VSS.Profile.Metrics
  - uid: vss-web-extension-sdk.VSS.Profile.Metrics.MeteredAsyncAction.action
    name: 'action(metrics: MetricsEvent)'
    children: []
    langs:
      - typeScript
    summary: |-
      Action implementation
      Abstract method, must be overriden
    syntax:
      parameters:
        - id: metrics
          type:
            - vss-web-extension-sdk.VSS.Profile.Metrics.MetricsEvent
          description: |+

      content: 'function action(metrics: MetricsEvent)'
      return:
        type:
          - Q.Promise
    type: method
  - uid: vss-web-extension-sdk.VSS.Profile.Metrics.MeteredAsyncAction.createMetrics
    name: createMetrics()
    children: []
    langs:
      - typeScript
    summary: >-
      Creates metrics to be consumed, no direct passing metrics object from
      outside of the class, so the metrics lives only in the scope of this class

      Creates child metrics if parent metrics and feature are specified

      Override with method returning arbitrary IntervalMetricsEvent
    syntax:
      parameters: []
      content: function createMetrics()
      return:
        type:
          - vss-web-extension-sdk.VSS.Profile.Metrics.IntervalMetricsEvent
    type: method
  - uid: vss-web-extension-sdk.VSS.Profile.Metrics.MeteredAsyncAction.enact
    name: enact()
    children: []
    langs:
      - typeScript
    summary: Enact action
    syntax:
      parameters: []
      content: function enact()
      return:
        type:
          - Q.Promise
    type: method
  - uid: vss-web-extension-sdk.VSS.Profile.Metrics.MeteredAsyncAction.constructor
    name: 'MeteredAsyncAction(metrics?: IntervalMetricsEvent, feature?: string)'
    children: []
    langs:
      - typeScript
    summary: Create metered async action
    syntax:
      parameters:
        - id: metrics
          type:
            - vss-web-extension-sdk.VSS.Profile.Metrics.IntervalMetricsEvent
          description: |
            parent metrics to put the metrics of this enaction into.
          optional: true
        - id: feature
          type:
            - string
          description: ''
          optional: true
      content: 'new MeteredAsyncAction(metrics?: IntervalMetricsEvent, feature?: string)'
      return:
        type:
          - vss-web-extension-sdk.VSS.Profile.Metrics.MeteredAsyncAction
    type: constructor
