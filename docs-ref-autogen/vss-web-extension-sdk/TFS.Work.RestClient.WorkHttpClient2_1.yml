### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1
    name: WorkHttpClient2_1
    fullName: WorkHttpClient2_1
    children:
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.authTokenManager
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.backlogconfigurationApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.boardcolumnsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.boardrowsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.boardsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.capacitiesApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.cardrulesettingsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.cardsettingsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.chartsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.columnsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.deleteTeamIteration
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.forceOptionsCallForAutoNegotiate
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBacklogConfigurations
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoard
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoardCardRuleSettings
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoardCardSettings
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoardChart
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoardCharts
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoardColumns
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoardRows
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoards
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getCapacities
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getCapacity
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getColumnSuggestedValues
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getProcessConfiguration
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getRowSuggestedValues
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getTeamDaysOff
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getTeamFieldValues
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getTeamIteration
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getTeamIterations
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getTeamSettings
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.iterationsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.postTeamIteration
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.processconfigurationApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.replaceCapacities
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.rowsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.serviceInstanceId
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.setBoardOptions
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.teamdaysoffApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.teamfieldvaluesApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.teamsettingsApiVersion
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateBoardCardRuleSettings
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateBoardCardSettings
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateBoardChart
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateBoardColumns
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateBoardRows
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateCapacity
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateTeamDaysOff
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateTeamFieldValues
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateTeamSettings
      - vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.constructor
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1._beginGetLocation
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1._beginRequest
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1._beginRequestWithAjaxResult
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1._issueAjaxRequest
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1._rootRequestPath
      - >-
        vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
    package: vss-web-extension-sdk
    module: TFS/Work/RestClient
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.authTokenManager
    name: authTokenManager
    fullName: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.backlogconfigurationApiVersion
    name: backlogconfigurationApiVersion
    fullName: backlogconfigurationApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.boardcolumnsApiVersion
    name: boardcolumnsApiVersion
    fullName: boardcolumnsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.boardrowsApiVersion
    name: boardrowsApiVersion
    fullName: boardrowsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.boardsApiVersion
    name: boardsApiVersion
    fullName: boardsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.capacitiesApiVersion
    name: capacitiesApiVersion
    fullName: capacitiesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.cardrulesettingsApiVersion
    name: cardrulesettingsApiVersion
    fullName: cardrulesettingsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.cardsettingsApiVersion
    name: cardsettingsApiVersion
    fullName: cardsettingsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.chartsApiVersion
    name: chartsApiVersion
    fullName: chartsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.columnsApiVersion
    name: columnsApiVersion
    fullName: columnsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.deleteTeamIteration
    name: 'deleteTeamIteration(teamContext: TeamContext, id: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: id
          type:
            - string
          description: ''
      content: 'function deleteTeamIteration(teamContext: TeamContext, id: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    fullName: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - boolean
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBacklogConfigurations
    name: 'getBacklogConfigurations(teamContext: TeamContext)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
      content: 'function getBacklogConfigurations(teamContext: TeamContext)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoard
    name: 'getBoard(teamContext: TeamContext, id: string)'
    children: []
    langs:
      - typeScript
    summary: Get board
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: id
          type:
            - string
          description: >-
            identifier for board, either board's backlog level name
            (Eg:"Stories") or Id
      content: 'function getBoard(teamContext: TeamContext, id: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoardCardRuleSettings
    name: 'getBoardCardRuleSettings(teamContext: TeamContext, board: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Get board card Rule settings for the board id or board by
      name
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: >-
        function getBoardCardRuleSettings(teamContext: TeamContext, board:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoardCardSettings
    name: 'getBoardCardSettings(teamContext: TeamContext, board: string)'
    children: []
    langs:
      - typeScript
    summary: Get board card settings for the board id or board by name
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: 'function getBoardCardSettings(teamContext: TeamContext, board: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoardChart
    name: 'getBoardChart(teamContext: TeamContext, board: string, name: string)'
    children: []
    langs:
      - typeScript
    summary: Get a board chart
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: >-
            Identifier for board, either board's backlog level name
            (Eg:"Stories") or Id
        - id: name
          type:
            - string
          description: The chart name
      content: >-
        function getBoardChart(teamContext: TeamContext, board: string, name:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoardCharts
    name: 'getBoardCharts(teamContext: TeamContext, board: string)'
    children: []
    langs:
      - typeScript
    summary: Get board charts
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: >-
            Identifier for board, either board's backlog level name
            (Eg:"Stories") or Id
      content: 'function getBoardCharts(teamContext: TeamContext, board: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoardColumns
    name: 'getBoardColumns(teamContext: TeamContext, board: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: 'function getBoardColumns(teamContext: TeamContext, board: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoardRows
    name: 'getBoardRows(teamContext: TeamContext, board: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: 'function getBoardRows(teamContext: TeamContext, board: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getBoards
    name: 'getBoards(teamContext: TeamContext)'
    children: []
    langs:
      - typeScript
    summary: Get boards
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
      content: 'function getBoards(teamContext: TeamContext)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getCapacities
    name: 'getCapacities(teamContext: TeamContext, iterationId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: iterationId
          type:
            - string
          description: ''
      content: 'function getCapacities(teamContext: TeamContext, iterationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getCapacity
    name: >-
      getCapacity(teamContext: TeamContext, iterationId: string, teamMemberId:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: iterationId
          type:
            - string
          description: ''
        - id: teamMemberId
          type:
            - string
          description: ''
      content: >-
        function getCapacity(teamContext: TeamContext, iterationId: string,
        teamMemberId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getColumnSuggestedValues
    name: 'getColumnSuggestedValues(project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function getColumnSuggestedValues(project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getProcessConfiguration
    name: 'getProcessConfiguration(project: string)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
      content: 'function getProcessConfiguration(project: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getRowSuggestedValues
    name: 'getRowSuggestedValues(project?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      content: 'function getRowSuggestedValues(project?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getTeamDaysOff
    name: 'getTeamDaysOff(teamContext: TeamContext, iterationId: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: iterationId
          type:
            - string
          description: ''
      content: 'function getTeamDaysOff(teamContext: TeamContext, iterationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getTeamFieldValues
    name: 'getTeamFieldValues(teamContext: TeamContext)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
      content: 'function getTeamFieldValues(teamContext: TeamContext)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getTeamIteration
    name: 'getTeamIteration(teamContext: TeamContext, id: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: id
          type:
            - string
          description: ''
      content: 'function getTeamIteration(teamContext: TeamContext, id: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getTeamIterations
    name: 'getTeamIterations(teamContext: TeamContext, timeframe?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: timeframe
          type:
            - string
          description: ''
          optional: true
      content: 'function getTeamIterations(teamContext: TeamContext, timeframe?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.getTeamSettings
    name: 'getTeamSettings(teamContext: TeamContext)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
      content: 'function getTeamSettings(teamContext: TeamContext)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.iterationsApiVersion
    name: iterationsApiVersion
    fullName: iterationsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.postTeamIteration
    name: >-
      postTeamIteration(iteration: TeamSettingsIteration, teamContext:
      TeamContext)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: iteration
          type:
            - vss-web-extension-sdk.TFS.Work.Contracts.TeamSettingsIteration
          description: ''
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
      content: >-
        function postTeamIteration(iteration: TeamSettingsIteration,
        teamContext: TeamContext)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.processconfigurationApiVersion
    name: processconfigurationApiVersion
    fullName: processconfigurationApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.replaceCapacities
    name: >-
      replaceCapacities(capacities: function, teamContext: TeamContext,
      iterationId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: capacities
          type:
            - function
          description: ''
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: iterationId
          type:
            - string
          description: ''
      content: >-
        function replaceCapacities(capacities: function, teamContext:
        TeamContext, iterationId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.rowsApiVersion
    name: rowsApiVersion
    fullName: rowsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.setBoardOptions
    name: 'setBoardOptions(options: function, teamContext: TeamContext, id: string)'
    children: []
    langs:
      - typeScript
    summary: Update board options
    syntax:
      parameters:
        - id: options
          type:
            - function
          description: options to updated
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: id
          type:
            - string
          description: >-
            identifier for board, either category plural name (Eg:"Stories") or
            guid
      content: >-
        function setBoardOptions(options: function, teamContext: TeamContext,
        id: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.teamdaysoffApiVersion
    name: teamdaysoffApiVersion
    fullName: teamdaysoffApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.teamfieldvaluesApiVersion
    name: teamfieldvaluesApiVersion
    fullName: teamfieldvaluesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.teamsettingsApiVersion
    name: teamsettingsApiVersion
    fullName: teamsettingsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateBoardCardRuleSettings
    name: >-
      updateBoardCardRuleSettings(boardCardRuleSettings: BoardCardRuleSettings,
      teamContext: TeamContext, board: string)
    children: []
    langs:
      - typeScript
    summary: >-
      [Preview API] Update board card Rule settings for the board id or board by
      name
    syntax:
      parameters:
        - id: boardCardRuleSettings
          type:
            - vss-web-extension-sdk.TFS.Work.Contracts.BoardCardRuleSettings
          description: ''
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: >-
        function updateBoardCardRuleSettings(boardCardRuleSettings:
        BoardCardRuleSettings, teamContext: TeamContext, board: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateBoardCardSettings
    name: >-
      updateBoardCardSettings(boardCardSettingsToSave: BoardCardSettings,
      teamContext: TeamContext, board: string)
    children: []
    langs:
      - typeScript
    summary: Update board card settings for the board id or board by name
    syntax:
      parameters:
        - id: boardCardSettingsToSave
          type:
            - vss-web-extension-sdk.TFS.Work.Contracts.BoardCardSettings
          description: ''
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: >-
        function updateBoardCardSettings(boardCardSettingsToSave:
        BoardCardSettings, teamContext: TeamContext, board: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateBoardChart
    name: >-
      updateBoardChart(chart: BoardChart, teamContext: TeamContext, board:
      string, name: string)
    children: []
    langs:
      - typeScript
    summary: Update a board chart
    syntax:
      parameters:
        - id: chart
          type:
            - vss-web-extension-sdk.TFS.Work.Contracts.BoardChart
          description: ''
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: >-
            Identifier for board, either board's backlog level name
            (Eg:"Stories") or Id
        - id: name
          type:
            - string
          description: The chart name
      content: >-
        function updateBoardChart(chart: BoardChart, teamContext: TeamContext,
        board: string, name: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateBoardColumns
    name: >-
      updateBoardColumns(boardColumns: function, teamContext: TeamContext,
      board: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: boardColumns
          type:
            - function
          description: ''
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: >-
        function updateBoardColumns(boardColumns: function, teamContext:
        TeamContext, board: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateBoardRows
    name: >-
      updateBoardRows(boardRows: function, teamContext: TeamContext, board:
      string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: boardRows
          type:
            - function
          description: ''
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: board
          type:
            - string
          description: ''
      content: >-
        function updateBoardRows(boardRows: function, teamContext: TeamContext,
        board: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateCapacity
    name: >-
      updateCapacity(patch: CapacityPatch, teamContext: TeamContext,
      iterationId: string, teamMemberId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: patch
          type:
            - vss-web-extension-sdk.TFS.Work.Contracts.CapacityPatch
          description: ''
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: iterationId
          type:
            - string
          description: ''
        - id: teamMemberId
          type:
            - string
          description: ''
      content: >-
        function updateCapacity(patch: CapacityPatch, teamContext: TeamContext,
        iterationId: string, teamMemberId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateTeamDaysOff
    name: >-
      updateTeamDaysOff(daysOffPatch: TeamSettingsDaysOffPatch, teamContext:
      TeamContext, iterationId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: daysOffPatch
          type:
            - vss-web-extension-sdk.TFS.Work.Contracts.TeamSettingsDaysOffPatch
          description: ''
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
        - id: iterationId
          type:
            - string
          description: ''
      content: >-
        function updateTeamDaysOff(daysOffPatch: TeamSettingsDaysOffPatch,
        teamContext: TeamContext, iterationId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateTeamFieldValues
    name: >-
      updateTeamFieldValues(patch: TeamFieldValuesPatch, teamContext:
      TeamContext)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: patch
          type:
            - vss-web-extension-sdk.TFS.Work.Contracts.TeamFieldValuesPatch
          description: ''
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
      content: >-
        function updateTeamFieldValues(patch: TeamFieldValuesPatch, teamContext:
        TeamContext)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.updateTeamSettings
    name: >-
      updateTeamSettings(teamSettingsPatch: TeamSettingsPatch, teamContext:
      TeamContext)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: teamSettingsPatch
          type:
            - vss-web-extension-sdk.TFS.Work.Contracts.TeamSettingsPatch
          description: ''
        - id: teamContext
          type:
            - vss-web-extension-sdk.TFS.Core.Contracts.TeamContext
          description: The team context for the operation
      content: >-
        function updateTeamSettings(teamSettingsPatch: TeamSettingsPatch,
        teamContext: TeamContext)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1.constructor
    name: >-
      WorkHttpClient2_1(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new WorkHttpClient2_1(rootRequestPath: string, options?:
        IVssHttpClientOptions)
    type: constructor
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: requestParams
          type:
            - >-
              vss-web-extension-sdk.VSS.WebApi.RestClient.VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vssRequestOptions
          type:
            - vss-web-extension-sdk.IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1._rootRequestPath
    name: _rootRequestPath
    fullName: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - string
  - uid: >-
      vss-web-extension-sdk.TFS.Work.RestClient.WorkHttpClient2_1._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: promise
          type:
            - vss-web-extension-sdk.IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
