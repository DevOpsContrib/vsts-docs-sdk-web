### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2
    name: DashboardHttpClient2_2
    fullName: DashboardHttpClient2_2
    children:
      - >-
        vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.createDashboard
      - >-
        vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.createWidget
      - >-
        vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.constructor
      - >-
        vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.deleteDashboard
      - >-
        vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.getDashboard
      - >-
        vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.getDashboardGroup
      - >-
        vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.getWidget
      - >-
        vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.replaceDashboard
      - >-
        vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.replaceDashboardGroup
      - >-
        vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.updateWidget
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.TFS.Dashboards.RestClient.CommonMethods2To4'
    source:
      path: tfs.d.ts
      startLine: 5648
      remote:
        path: typings\tfs.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: TFS/Dashboards/RestClient
  - uid: >-
      vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.createDashboard
    name: createDashboard
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function createDashboard(entry: DashboardGroupEntry, groupId: string,
        project?: string)
      parameters:
        - id: entry
          type:
            - >-
              @vss-web-extension-sdk.TFS.Dashboards.Contracts.DashboardGroupEntry
          description: ''
        - id: groupId
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Dashboards.Contracts.DashboardGroupEntryResponse>
    module: TFS/Dashboards/RestClient
  - uid: >-
      vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.createWidget
    name: createWidget
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function createWidget(widget: Widget, groupId: string, dashboardId:
        string, project?: string)
      parameters:
        - id: widget
          type:
            - '@vss-web-extension-sdk.TFS.Dashboards.Contracts.Widget'
          description: ''
        - id: groupId
          type:
            - string
          description: ''
        - id: dashboardId
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Dashboards.Contracts.WidgetResponse>
    module: TFS/Dashboards/RestClient
  - uid: >-
      vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.constructor
    name: DashboardHttpClient2_2
    children: []
    type: constructor
    langs:
      - typeScript
    summary: ''
    syntax:
      content: >-
        new DashboardHttpClient2_2(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: options
          type:
            - '@vss-web-extension-sdk.VSS.WebApi.RestClient.IVssHttpClientOptions'
          description: ''
          optional: true
    module: TFS/Dashboards/RestClient
  - uid: >-
      vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.deleteDashboard
    name: deleteDashboard
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function deleteDashboard(groupId: string, dashboardId: string, project?:
        string)
      parameters:
        - id: groupId
          type:
            - string
          description: ''
        - id: dashboardId
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      return:
        type:
          - '@vss-web-extension-sdk.IPromise<void>'
    module: TFS/Dashboards/RestClient
  - uid: >-
      vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.getDashboard
    name: getDashboard
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function getDashboard(groupId: string, dashboardId: string, project?:
        string)
      parameters:
        - id: groupId
          type:
            - string
          description: ''
        - id: dashboardId
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Dashboards.Contracts.DashboardResponse>
    module: TFS/Dashboards/RestClient
  - uid: >-
      vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.getDashboardGroup
    name: getDashboardGroup
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: 'function getDashboardGroup(groupId: string, project?: string)'
      parameters:
        - id: groupId
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Dashboards.Contracts.DashboardGroup>
    module: TFS/Dashboards/RestClient
  - uid: >-
      vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.getWidget
    name: getWidget
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function getWidget(groupId: string, dashboardId: string, widgetId:
        string, project?: string)
      parameters:
        - id: groupId
          type:
            - string
          description: ''
        - id: dashboardId
          type:
            - string
          description: ''
        - id: widgetId
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Dashboards.Contracts.WidgetResponse>
    module: TFS/Dashboards/RestClient
  - uid: >-
      vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.replaceDashboard
    name: replaceDashboard
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function replaceDashboard(dashboard: Dashboard, groupId: string,
        dashboardId: string, project?: string)
      parameters:
        - id: dashboard
          type:
            - '@vss-web-extension-sdk.TFS.Dashboards.Contracts.Dashboard'
          description: ''
        - id: groupId
          type:
            - string
          description: ''
        - id: dashboardId
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Dashboards.Contracts.DashboardResponse>
    module: TFS/Dashboards/RestClient
  - uid: >-
      vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.replaceDashboardGroup
    name: replaceDashboardGroup
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function replaceDashboardGroup(group: DashboardGroup, groupId: string,
        project?: string)
      parameters:
        - id: group
          type:
            - '@vss-web-extension-sdk.TFS.Dashboards.Contracts.DashboardGroup'
          description: ''
        - id: groupId
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Dashboards.Contracts.DashboardGroup>
    module: TFS/Dashboards/RestClient
  - uid: >-
      vss-web-extension-sdk.TFS.Dashboards.RestClient.DashboardHttpClient2_2.updateWidget
    name: updateWidget
    children: []
    type: method
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      content: >-
        function updateWidget(widget: Widget, groupId: string, dashboardId:
        string, widgetId: string, project?: string)
      parameters:
        - id: widget
          type:
            - '@vss-web-extension-sdk.TFS.Dashboards.Contracts.Widget'
          description: ''
        - id: groupId
          type:
            - string
          description: ''
        - id: dashboardId
          type:
            - string
          description: ''
        - id: widgetId
          type:
            - string
          description: ''
        - id: project
          type:
            - string
          description: Project ID or project name
          optional: true
      return:
        type:
          - >-
            @vss-web-extension-sdk.IPromise<@vss-web-extension-sdk.TFS.Dashboards.Contracts.WidgetResponse>
    module: TFS/Dashboards/RestClient
