### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.CoreHttpClient2_3
    name: CoreHttpClient2_3
    fullName: CoreHttpClient2_3
    children:
      - vss-web-extension-sdk.CoreHttpClient2_3.authTokenManager
      - vss-web-extension-sdk.CoreHttpClient2_3.connectedServicesApiVersion
      - vss-web-extension-sdk.CoreHttpClient2_3.constructor
      - vss-web-extension-sdk.CoreHttpClient2_3.createConnectedService
      - vss-web-extension-sdk.CoreHttpClient2_3.createIdentityMru
      - vss-web-extension-sdk.CoreHttpClient2_3.createTeam
      - vss-web-extension-sdk.CoreHttpClient2_3.deleteIdentityMru
      - vss-web-extension-sdk.CoreHttpClient2_3.deleteTeam
      - vss-web-extension-sdk.CoreHttpClient2_3.forceOptionsCallForAutoNegotiate
      - vss-web-extension-sdk.CoreHttpClient2_3.getConnectedServiceDetails
      - vss-web-extension-sdk.CoreHttpClient2_3.getConnectedServices
      - vss-web-extension-sdk.CoreHttpClient2_3.getIdentityMru
      - vss-web-extension-sdk.CoreHttpClient2_3.getProcessById
      - vss-web-extension-sdk.CoreHttpClient2_3.getProcesses
      - vss-web-extension-sdk.CoreHttpClient2_3.getProject
      - vss-web-extension-sdk.CoreHttpClient2_3.getProjectCollection
      - vss-web-extension-sdk.CoreHttpClient2_3.getProjectCollections
      - vss-web-extension-sdk.CoreHttpClient2_3.getProjectHistory
      - vss-web-extension-sdk.CoreHttpClient2_3.getProjects
      - vss-web-extension-sdk.CoreHttpClient2_3.getProxies
      - vss-web-extension-sdk.CoreHttpClient2_3.getTeam
      - vss-web-extension-sdk.CoreHttpClient2_3.getTeamMembers
      - vss-web-extension-sdk.CoreHttpClient2_3.getTeams
      - vss-web-extension-sdk.CoreHttpClient2_3.identityMruApiVersion
      - vss-web-extension-sdk.CoreHttpClient2_3.membersApiVersion
      - vss-web-extension-sdk.CoreHttpClient2_3.processesApiVersion
      - vss-web-extension-sdk.CoreHttpClient2_3.projectCollectionsApiVersion
      - vss-web-extension-sdk.CoreHttpClient2_3.projectsApiVersion
      - vss-web-extension-sdk.CoreHttpClient2_3.proxiesApiVersion
      - vss-web-extension-sdk.CoreHttpClient2_3.queueCreateProject
      - vss-web-extension-sdk.CoreHttpClient2_3.queueDeleteProject
      - vss-web-extension-sdk.CoreHttpClient2_3.serviceInstanceId
      - vss-web-extension-sdk.CoreHttpClient2_3.teamsApiVersion
      - vss-web-extension-sdk.CoreHttpClient2_3.updateIdentityMru
      - vss-web-extension-sdk.CoreHttpClient2_3.updateProject
      - vss-web-extension-sdk.CoreHttpClient2_3.updateTeam
      - vss-web-extension-sdk.CoreHttpClient2_3._beginGetLocation
      - vss-web-extension-sdk.CoreHttpClient2_3._beginRequest
      - vss-web-extension-sdk.CoreHttpClient2_3._beginRequestWithAjaxResult
      - vss-web-extension-sdk.CoreHttpClient2_3._issueAjaxRequest
      - vss-web-extension-sdk.CoreHttpClient2_3._rootRequestPath
      - vss-web-extension-sdk.CoreHttpClient2_3._setInitializationPromise
    langs:
      - typeScript
    type: class
    summary: ''
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.authTokenManager
    name: authTokenManager
    fullName: authTokenManager
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - vss-web-extension-sdk.IAuthTokenManager
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.connectedServicesApiVersion
    name: connectedServicesApiVersion
    fullName: connectedServicesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.constructor
    name: >-
      CoreHttpClient2_3(rootRequestPath: string, options?:
      IVssHttpClientOptions)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: rootRequestPath
          type:
            - string
          description: ''
        - id: vss-web-extension-sdk.IVssHttpClientOptions
          type:
            - IVssHttpClientOptions
          description: ''
          optional: true
      content: >-
        new CoreHttpClient2_3(rootRequestPath: string, options?:
        IVssHttpClientOptions)
      return:
        type:
          - vss-web-extension-sdk.CoreHttpClient2_3
    type: constructor
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.createConnectedService
    name: >-
      createConnectedService(connectedServiceCreationData:
      WebApiConnectedServiceDetails, projectId: string)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.WebApiConnectedServiceDetails
          type:
            - WebApiConnectedServiceDetails
          description: ''
        - id: projectId
          type:
            - string
          description: ''
      content: >-
        function createConnectedService(connectedServiceCreationData:
        WebApiConnectedServiceDetails, projectId: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.createIdentityMru
    name: 'createIdentityMru(mruData: IdentityData, mruName: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.IdentityData
          type:
            - IdentityData
          description: ''
        - id: mruName
          type:
            - string
          description: ''
      content: 'function createIdentityMru(mruData: IdentityData, mruName: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.createTeam
    name: 'createTeam(team: WebApiTeam, projectId: string)'
    children: []
    langs:
      - typeScript
    summary: Creates a team
    syntax:
      parameters:
        - id: vss-web-extension-sdk.WebApiTeam
          type:
            - WebApiTeam
          description: The team data used to create the team.
        - id: projectId
          type:
            - string
          description: >-
            The name or id (GUID) of the team project in which to create the
            team.
      content: 'function createTeam(team: WebApiTeam, projectId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.deleteIdentityMru
    name: 'deleteIdentityMru(mruData: IdentityData, mruName: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.IdentityData
          type:
            - IdentityData
          description: ''
        - id: mruName
          type:
            - string
          description: ''
      content: 'function deleteIdentityMru(mruData: IdentityData, mruName: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.deleteTeam
    name: 'deleteTeam(projectId: string, teamId: string)'
    children: []
    langs:
      - typeScript
    summary: Deletes a team
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: >-
            The name or id (GUID) of the team project containing the team to
            delete.
        - id: teamId
          type:
            - string
          description: The name of id of the team to delete.
      content: 'function deleteTeam(projectId: string, teamId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.forceOptionsCallForAutoNegotiate
    name: forceOptionsCallForAutoNegotiate
    fullName: forceOptionsCallForAutoNegotiate
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - boolean
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.getConnectedServiceDetails
    name: 'getConnectedServiceDetails(projectId: string, name: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: name
          type:
            - string
          description: ''
      content: 'function getConnectedServiceDetails(projectId: string, name: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.getConnectedServices
    name: 'getConnectedServices(projectId: string, kind?: function)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: kind
          type:
            - function
          description: ''
          optional: true
      content: 'function getConnectedServices(projectId: string, kind?: function)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.getIdentityMru
    name: 'getIdentityMru(mruName: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: mruName
          type:
            - string
          description: ''
      content: 'function getIdentityMru(mruName: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.getProcessById
    name: 'getProcessById(processId: string)'
    children: []
    langs:
      - typeScript
    summary: Retrieve process by id
    syntax:
      parameters:
        - id: processId
          type:
            - string
          description: ''
      content: 'function getProcessById(processId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.getProcesses
    name: getProcesses()
    children: []
    langs:
      - typeScript
    summary: Retrieve all processes
    syntax:
      parameters: []
      content: function getProcesses()
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.getProject
    name: >-
      getProject(projectId: string, includeCapabilities?: boolean,
      includeHistory?: boolean)
    children: []
    langs:
      - typeScript
    summary: >-
      Get project with the specified id or name, optionally including
      capabilities.
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: includeCapabilities
          type:
            - boolean
          description: >-
            Include capabilities (such as source control) in the team project
            result (default: false).
          optional: true
        - id: includeHistory
          type:
            - boolean
          description: Search within renamed projects (that had such name in the past).
          optional: true
      content: >-
        function getProject(projectId: string, includeCapabilities?: boolean,
        includeHistory?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.getProjectCollection
    name: 'getProjectCollection(collectionId: string)'
    children: []
    langs:
      - typeScript
    summary: Get project collection with the specified id or name.
    syntax:
      parameters:
        - id: collectionId
          type:
            - string
          description: ''
      content: 'function getProjectCollection(collectionId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.getProjectCollections
    name: 'getProjectCollections(top?: number, skip?: number)'
    children: []
    langs:
      - typeScript
    summary: Get project collection references for this application.
    syntax:
      parameters:
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
      content: 'function getProjectCollections(top?: number, skip?: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.getProjectHistory
    name: 'getProjectHistory(minRevision?: number)'
    children: []
    langs:
      - typeScript
    summary: '[Preview API]'
    syntax:
      parameters:
        - id: minRevision
          type:
            - number
          description: ''
          optional: true
      content: 'function getProjectHistory(minRevision?: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.getProjects
    name: >-
      getProjects(stateFilter?: any, top?: number, skip?: number,
      continuationToken?: string)
    children: []
    langs:
      - typeScript
    summary: Get project references with the specified state
    syntax:
      parameters:
        - id: stateFilter
          type:
            - any
          description: >-
            Filter on team projects in a specific team project state (default:
            WellFormed).
          optional: true
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
        - id: continuationToken
          type:
            - string
          description: ''
          optional: true
      content: >-
        function getProjects(stateFilter?: any, top?: number, skip?: number,
        continuationToken?: string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.getProxies
    name: 'getProxies(proxyUrl?: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: proxyUrl
          type:
            - string
          description: ''
          optional: true
      content: 'function getProxies(proxyUrl?: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.getTeam
    name: 'getTeam(projectId: string, teamId: string)'
    children: []
    langs:
      - typeScript
    summary: Gets a team
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: teamId
          type:
            - string
          description: ''
      content: 'function getTeam(projectId: string, teamId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.getTeamMembers
    name: >-
      getTeamMembers(projectId: string, teamId: string, top?: number, skip?:
      number)
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: teamId
          type:
            - string
          description: ''
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
      content: >-
        function getTeamMembers(projectId: string, teamId: string, top?: number,
        skip?: number)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.getTeams
    name: 'getTeams(projectId: string, top?: number, skip?: number)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: ''
        - id: top
          type:
            - number
          description: ''
          optional: true
        - id: skip
          type:
            - number
          description: ''
          optional: true
      content: 'function getTeams(projectId: string, top?: number, skip?: number)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.identityMruApiVersion
    name: identityMruApiVersion
    fullName: identityMruApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.membersApiVersion
    name: membersApiVersion
    fullName: membersApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.processesApiVersion
    name: processesApiVersion
    fullName: processesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.projectCollectionsApiVersion
    name: projectCollectionsApiVersion
    fullName: projectCollectionsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.projectsApiVersion
    name: projectsApiVersion
    fullName: projectsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.proxiesApiVersion
    name: proxiesApiVersion
    fullName: proxiesApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.queueCreateProject
    name: 'queueCreateProject(projectToCreate: TeamProject)'
    children: []
    langs:
      - typeScript
    summary: Queue a project creation.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TeamProject
          type:
            - TeamProject
          description: The project to create.
      content: 'function queueCreateProject(projectToCreate: TeamProject)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.queueDeleteProject
    name: 'queueDeleteProject(projectId: string)'
    children: []
    langs:
      - typeScript
    summary: Queue a project deletion.
    syntax:
      parameters:
        - id: projectId
          type:
            - string
          description: The project id of the project to delete.
      content: 'function queueDeleteProject(projectId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.serviceInstanceId
    name: serviceInstanceId
    fullName: serviceInstanceId
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.teamsApiVersion
    name: teamsApiVersion
    fullName: teamsApiVersion
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.updateIdentityMru
    name: 'updateIdentityMru(mruData: IdentityData, mruName: string)'
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      parameters:
        - id: vss-web-extension-sdk.IdentityData
          type:
            - IdentityData
          description: ''
        - id: mruName
          type:
            - string
          description: ''
      content: 'function updateIdentityMru(mruData: IdentityData, mruName: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.updateProject
    name: 'updateProject(projectUpdate: TeamProject, projectId: string)'
    children: []
    langs:
      - typeScript
    summary: 'Update an existing project''s name, abbreviation, or description.'
    syntax:
      parameters:
        - id: vss-web-extension-sdk.TeamProject
          type:
            - TeamProject
          description: The updates for the project.
        - id: projectId
          type:
            - string
          description: The project id of the project to update.
      content: 'function updateProject(projectUpdate: TeamProject, projectId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3.updateTeam
    name: 'updateTeam(teamData: WebApiTeam, projectId: string, teamId: string)'
    children: []
    langs:
      - typeScript
    summary: Updates a team's name and/or description
    syntax:
      parameters:
        - id: vss-web-extension-sdk.WebApiTeam
          type:
            - WebApiTeam
          description: ''
        - id: projectId
          type:
            - string
          description: >-
            The name or id (GUID) of the team project containing the team to
            update.
        - id: teamId
          type:
            - string
          description: The name of id of the team to update.
      content: >-
        function updateTeam(teamData: WebApiTeam, projectId: string, teamId:
        string)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3._beginGetLocation
    name: '_beginGetLocation(area: string, locationId: string)'
    children: []
    langs:
      - typeScript
    summary: >-
      Gets information about an API resource location (route template, supported
      versions, etc.)
    syntax:
      parameters:
        - id: area
          type:
            - string
          description: resource area name
        - id: locationId
          type:
            - string
          description: |
            Guid of the location to get
      content: 'function _beginGetLocation(area: string, locationId: string)'
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3._beginRequest
    name: >-
      _beginRequest(requestParams: VssApiResourceRequestParams, useAjaxResult?:
      boolean)
    children: []
    langs:
      - typeScript
    summary: Issue a request to a VSS REST endpoint.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
        - id: useAjaxResult
          type:
            - boolean
          description: >-
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used
          optional: true
      content: >-
        function _beginRequest(requestParams: VssApiResourceRequestParams,
        useAjaxResult?: boolean)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3._beginRequestWithAjaxResult
    name: '_beginRequestWithAjaxResult(requestParams: VssApiResourceRequestParams)'
    children: []
    langs:
      - typeScript
    summary: >-
      Issue a request to a VSS REST endpoint and makes sure the result contains
      jqXHR. Use spread to access jqXHR.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.VssApiResourceRequestParams
          type:
            - VssApiResourceRequestParams
          description: request options
      content: >-
        function _beginRequestWithAjaxResult(requestParams:
        VssApiResourceRequestParams)
      return:
        type:
          - Q.Promise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3._issueAjaxRequest
    name: >-
      _issueAjaxRequest(requestUrl: string, ajaxOptions: JQueryAjaxSettings,
      useAjaxResult?: boolean, vssRequestOptions?: IVssAjaxOptions)
    children: []
    langs:
      - typeScript
    summary: >-
      Issue an AJAX request. This is a wrapper around jquery's ajax method that
      handles VSS authentication

      and triggers events that can be listened to by other modules.
    syntax:
      parameters:
        - id: requestUrl
          type:
            - string
          description: Url to send the request to
        - id: ajaxOptions
          type:
            - JQueryAjaxSettings
          description: jQuery.ajax options
        - id: useAjaxResult
          type:
            - boolean
          description: >
            If true, textStatus and jqXHR are added to the success callback. In
            this case, spread (instead of then) needs to be used.
          optional: true
        - id: vss-web-extension-sdk.IVssAjaxOptions
          type:
            - IVssAjaxOptions
          description: ''
          optional: true
      content: >-
        function _issueAjaxRequest(requestUrl: string, ajaxOptions:
        JQueryAjaxSettings, useAjaxResult?: boolean, vssRequestOptions?:
        IVssAjaxOptions)
      return:
        type:
          - vss-web-extension-sdk.IPromise
    type: method
  - uid: vss-web-extension-sdk.CoreHttpClient2_3._rootRequestPath
    name: _rootRequestPath
    fullName: _rootRequestPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: ''
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.CoreHttpClient2_3._setInitializationPromise
    name: '_setInitializationPromise(promise: IPromise)'
    children: []
    langs:
      - typeScript
    summary: >-
      Sets a promise that is waited on before any requests are issued. Can be
      used to asynchronously

      set the request url and auth token manager.
    syntax:
      parameters:
        - id: vss-web-extension-sdk.IPromise
          type:
            - IPromise
          description: ''
      content: 'function _setInitializationPromise(promise: IPromise)'
    type: method
