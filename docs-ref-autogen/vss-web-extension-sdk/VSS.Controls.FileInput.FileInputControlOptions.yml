### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions
    name: FileInputControlOptions
    fullName: FileInputControlOptions
    children:
      - >-
        vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.allowedFileExtensions
      - >-
        vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.browseButtonAriaDescribedBy
      - >-
        vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.detectEncoding
      - >-
        vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.fileNamesCaseSensitive
      - >-
        vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.initialFiles
      - >-
        vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.limitMessageFormatter
      - >-
        vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.maximumNumberOfFiles
      - >-
        vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.maximumSingleFileSize
      - >-
        vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.maximumTotalFileSize
      - >-
        vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.resultContentType
      - >-
        vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.updateHandler
    langs:
      - typeScript
    type: interface
    summary: Options for the file input control.
    source:
      path: vss.d.ts
      startLine: 11380
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/FileInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.allowedFileExtensions
    name: allowedFileExtensions
    fullName: allowedFileExtensions
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Specifies the allowed file extensions. For example: [ "zip", "exe" ]'
    syntax:
      content: 'string[] allowedFileExtensions'
      return:
        type:
          - 'string[]'
    module: VSS/Controls/FileInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.browseButtonAriaDescribedBy
    name: browseButtonAriaDescribedBy
    fullName: browseButtonAriaDescribedBy
    children: []
    langs:
      - typeScript
    type: property
    summary: 'Accessibility: aria-describedby for ''Browse'' button'
    syntax:
      content: string browseButtonAriaDescribedBy
      return:
        type:
          - string
    module: VSS/Controls/FileInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.detectEncoding
    name: detectEncoding
    fullName: detectEncoding
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean detectEncoding
      return:
        type:
          - boolean
    module: VSS/Controls/FileInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.fileNamesCaseSensitive
    name: fileNamesCaseSensitive
    fullName: fileNamesCaseSensitive
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: boolean fileNamesCaseSensitive
      return:
        type:
          - boolean
    module: VSS/Controls/FileInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.initialFiles
    name: initialFiles
    fullName: initialFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: FileList initialFiles
      return:
        type:
          - FileList
    module: VSS/Controls/FileInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.limitMessageFormatter
    name: limitMessageFormatter
    fullName: limitMessageFormatter
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Callback executed whenever a user bumps into the limit of the file upload
      control.
    syntax:
      content: >-
        (currentMessage: string, limitEvent: FileInputControlLimitEventData) =>
        string limitMessageFormatter
      return:
        type:
          - >-
            (currentMessage: string, limitEvent: FileInputControlLimitEventData)
            => string
    module: VSS/Controls/FileInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.maximumNumberOfFiles
    name: maximumNumberOfFiles
    fullName: maximumNumberOfFiles
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: number maximumNumberOfFiles
      return:
        type:
          - number
    module: VSS/Controls/FileInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.maximumSingleFileSize
    name: maximumSingleFileSize
    fullName: maximumSingleFileSize
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: number maximumSingleFileSize
      return:
        type:
          - number
    module: VSS/Controls/FileInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.maximumTotalFileSize
    name: maximumTotalFileSize
    fullName: maximumTotalFileSize
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: number maximumTotalFileSize
      return:
        type:
          - number
    module: VSS/Controls/FileInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.resultContentType
    name: resultContentType
    fullName: resultContentType
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: FileInputControlContentType resultContentType
      return:
        type:
          - FileInputControlContentType
    module: VSS/Controls/FileInput
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.FileInput.FileInputControlOptions.updateHandler
    name: updateHandler
    fullName: updateHandler
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: '(updateEvent: FileInputControlUpdateEventData) => void updateHandler'
      return:
        type:
          - '(updateEvent: FileInputControlUpdateEventData) => void'
    module: VSS/Controls/FileInput
