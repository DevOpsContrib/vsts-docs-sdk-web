### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.TFS.Build.Contracts.Schedule
    name: Schedule
    fullName: Schedule
    children:
      - vss-web-extension-sdk.TFS.Build.Contracts.Schedule.branchFilters
      - vss-web-extension-sdk.TFS.Build.Contracts.Schedule.daysToBuild
      - vss-web-extension-sdk.TFS.Build.Contracts.Schedule.scheduleJobId
      - vss-web-extension-sdk.TFS.Build.Contracts.Schedule.startHours
      - vss-web-extension-sdk.TFS.Build.Contracts.Schedule.startMinutes
      - vss-web-extension-sdk.TFS.Build.Contracts.Schedule.timeZoneId
    langs:
      - typeScript
    type: interface
    summary: ''
    package: vss-web-extension-sdk
    module: TFS.Build.Contracts
  - uid: vss-web-extension-sdk.TFS.Build.Contracts.Schedule.branchFilters
    name: branchFilters
    fullName: branchFilters
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.TFS.Build.Contracts.Schedule.daysToBuild
    name: daysToBuild
    fullName: daysToBuild
    children: []
    langs:
      - typeScript
    type: property
    summary: Days for a build (flags enum for days of the week)
    syntax:
      return:
        type:
          - union
  - uid: vss-web-extension-sdk.TFS.Build.Contracts.Schedule.scheduleJobId
    name: scheduleJobId
    fullName: scheduleJobId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The Job Id of the Scheduled job that will queue the scheduled build. Since
      a single trigger can have multiple schedules and we want a single job to
      process a single schedule (since each schedule has a list of branches to
      build), the schedule itself needs to define the Job Id. This value will be
      filled in when a definition is added or updated.  The UI does not provide
      it or use it.
    syntax:
      return:
        type:
          - string
  - uid: vss-web-extension-sdk.TFS.Build.Contracts.Schedule.startHours
    name: startHours
    fullName: startHours
    children: []
    langs:
      - typeScript
    type: property
    summary: Local timezone hour to start
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.TFS.Build.Contracts.Schedule.startMinutes
    name: startMinutes
    fullName: startMinutes
    children: []
    langs:
      - typeScript
    type: property
    summary: Local timezone minute to start
    syntax:
      return:
        type:
          - number
  - uid: vss-web-extension-sdk.TFS.Build.Contracts.Schedule.timeZoneId
    name: timeZoneId
    fullName: timeZoneId
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      Time zone of the build schedule (string representation of the time zone
      id)
    syntax:
      return:
        type:
          - string
