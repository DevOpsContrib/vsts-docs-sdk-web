### YamlMime:UniversalReference
items:
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner
    name: MenuOwner
    fullName: MenuOwner<TOptions>
    children:
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.activate
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.escape
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.escaped
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.getMenuItemAlignment
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.getMenuItemOptions
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.initialize
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.initializeOptions
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.isActive
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.constructor
      - vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.setShowIcon
      - >-
        vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.showSubMenuOnFocusedItem
    langs:
      - typeScript
    type: class
    summary: ''
    extends:
      name: '@vss-web-extension-sdk.VSS.Controls.Menus.Menu<TOptions>'
    source:
      path: vss.d.ts
      startLine: 14371
      remote:
        path: typings\vss.d.ts
        repo: 'https://github.com/Microsoft/vss-web-extension-sdk.git'
        branch: master
    package: vss-web-extension-sdk
    module: VSS/Controls/Menus
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.activate
    name: activate
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function activate(tryFocus?: boolean)'
      parameters:
        - id: tryFocus
          type:
            - boolean
          description: ''
          optional: true
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.escape
    name: escape
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function escape(options?: any)'
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.escaped
    name: escaped
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function escaped(options?: any)'
      parameters:
        - id: options
          type:
            - any
          description: ''
          optional: true
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.getMenuItemAlignment
    name: getMenuItemAlignment
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function getMenuItemAlignment()
      parameters: []
      return:
        type:
          - string
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.getMenuItemOptions
    name: getMenuItemOptions
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function getMenuItemOptions(item: any, extraOptions?: any)'
      parameters:
        - id: item
          type:
            - any
          description: ''
        - id: extraOptions
          type:
            - any
          description: |+

          optional: true
      return:
        type:
          - any
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.initialize
    name: initialize
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function initialize()
      parameters: []
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.initializeOptions
    name: initializeOptions
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'function initializeOptions(options?: TOptions)'
      parameters:
        - id: options
          type:
            - TOptions
          description: |+

          optional: true
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.isActive
    name: isActive
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: function isActive()
      parameters: []
      return:
        type:
          - boolean
    type: method
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.constructor
    name: MenuOwner
    children: []
    langs:
      - typeScript
    summary: ''
    syntax:
      content: 'new MenuOwner(options?: TOptions)'
      parameters:
        - id: options
          type:
            - TOptions
          description: |+

          optional: true
    type: constructor
  - uid: vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.setShowIcon
    name: setShowIcon
    children: []
    langs:
      - typeScript
    summary: Sets showIcon option.
    syntax:
      content: 'function setShowIcon(showIcon: boolean)'
      parameters:
        - id: showIcon
          type:
            - boolean
          description: |
            New state for the showIcon option.
    type: method
  - uid: >-
      vss-web-extension-sdk.VSS.Controls.Menus.MenuOwner.showSubMenuOnFocusedItem
    name: showSubMenuOnFocusedItem
    children: []
    langs:
      - typeScript
    summary: Attempt to open the submenu on the focused item
    syntax:
      content: function showSubMenuOnFocusedItem()
      parameters: []
      return:
        type:
          - boolean
    type: method
